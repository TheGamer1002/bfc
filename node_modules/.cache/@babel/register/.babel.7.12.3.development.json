{
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/generate.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/generate.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/generate.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/generate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "generate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction execute() {\n  return _execute.apply(this, arguments);\n}\n\nfunction _execute() {\n  _execute = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var commander, metadataUtils, blog, docs, CWD, fs, readMetadata, path, _require, minifyCss, isSeparateCss, autoPrefixCss, React, mkdirp, glob, chalk, Site, env, loadConfig, siteConfig, translate, feed, sitemap, join, sep, escapeStringRegexp, _require2, renderToStaticMarkupWithDoctype, imagemin, imageminJpegtran, imageminOptipng, imageminSvgo, imageminGifsicle, writeFileAndCreateFolder, Metadata, buildDir, mdToHtml, MetadataBlog, files, blogPages, targetFile, libStaticDir, userStaticDir, mainCss, cssContent, minifiedCSS, css, enabledLanguages, userPagesDir, _targetFile7;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            writeFileAndCreateFolder = function _writeFileAndCreateFo(file, content) {\n              mkdirp.sync(path.dirname(file));\n              fs.writeFileSync(file, content); // build extra file for extension-less url if \"cleanUrl\" siteConfig is true\n\n              if (siteConfig.cleanUrl && file.indexOf('index.html') === -1) {\n                var extraFile = file.replace(/\\.html$/, '/index.html');\n                mkdirp.sync(path.dirname(extraFile));\n                fs.writeFileSync(extraFile, content);\n              }\n            };\n\n            commander = require('commander');\n            commander.option('--skip-image-compression').option('--skip-next-release').parse(process.argv);\n\n            require('../write-translations.js');\n\n            metadataUtils = require('./metadataUtils');\n            blog = require('./blog');\n            docs = require('./docs');\n            CWD = process.cwd();\n            fs = require('fs-extra');\n            readMetadata = require('./readMetadata.js');\n            path = require('path');\n            _require = require('./utils'), minifyCss = _require.minifyCss, isSeparateCss = _require.isSeparateCss, autoPrefixCss = _require.autoPrefixCss;\n            React = require('react');\n            mkdirp = require('mkdirp');\n            glob = require('glob');\n            chalk = require('chalk');\n            Site = require('../core/Site.js');\n            env = require('./env.js');\n            loadConfig = require('./config.js');\n            siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n            translate = require('./translate.js');\n            feed = require('./feed.js');\n            sitemap = require('./sitemap.js');\n            join = path.join;\n            sep = path.sep;\n            escapeStringRegexp = require('escape-string-regexp');\n            _require2 = require('./renderUtils'), renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n            imagemin = require('imagemin');\n            imageminJpegtran = require('imagemin-jpegtran');\n            imageminOptipng = require('imagemin-optipng');\n            imageminSvgo = require('imagemin-svgo');\n            imageminGifsicle = require('imagemin-gifsicle'); // create the folder path for a file if it does not exist, then write the file\n\n            console.log('generate.js triggered...');\n            readMetadata.generateMetadataDocs();\n            Metadata = require('../core/metadata.js'); // TODO: what if the project is a github org page? We should not use\n            // siteConfig.projectName in this case. Otherwise a GitHub org doc URL would\n            // look weird: https://myorg.github.io/myorg/docs\n            // TODO: siteConfig.projectName is a misnomer. The actual project name is\n            // `title`. `projectName` is only used to generate a folder, which isn't\n            // needed when the project's a GitHub org page\n\n            buildDir = join(CWD, 'build', siteConfig.projectName);\n            fs.removeSync(join(CWD, 'build')); // create html files for all docs by going through all doc ids\n\n            mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n            Object.keys(Metadata).forEach(function (id) {\n              var metadata = Metadata[id];\n              var file = docs.getFile(metadata);\n\n              if (!file) {\n                return;\n              }\n\n              var rawContent = metadataUtils.extractMetadata(file).rawContent;\n              var str = docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig);\n              var targetFile = join(buildDir, metadata.permalink);\n              writeFileAndCreateFolder(targetFile, str); // generate english page redirects when languages are enabled\n\n              var redirectMarkup = docs.getRedirectMarkup(metadata, siteConfig);\n\n              if (!redirectMarkup) {\n                return;\n              }\n\n              var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n              var redirectFile = join(buildDir, metadata.permalink.replace(new RegExp(\"^\".concat(docsPart, \"en\")), siteConfig.docsUrl));\n              writeFileAndCreateFolder(redirectFile, redirectMarkup);\n            }); // copy docs assets if they exist\n\n            if (fs.existsSync(join(CWD, '..', readMetadata.getDocsPath(), 'assets'))) {\n              fs.copySync(join(CWD, '..', readMetadata.getDocsPath(), 'assets'), join(buildDir, siteConfig.docsUrl, 'assets'));\n            } // create html files for all blog posts (each article)\n\n\n            if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n              fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n            }\n\n            readMetadata.generateMetadataBlog(siteConfig);\n            MetadataBlog = require('../core/MetadataBlog.js');\n            files = glob.sync(join(CWD, 'blog', '**', '*.*'));\n            files.sort().reverse().forEach(function (file) {\n              // Why normalize? In case we are on Windows.\n              // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n              var normalizedFile = path.normalize(file);\n              var extension = path.extname(normalizedFile);\n\n              if (extension !== '.md' && extension !== '.markdown') {\n                return;\n              }\n\n              var urlPath = blog.fileToUrl(normalizedFile);\n              var blogPost = blog.getPostMarkup(normalizedFile, siteConfig);\n\n              if (!blogPost) {\n                return;\n              }\n\n              var targetFile = join(buildDir, 'blog', urlPath);\n              writeFileAndCreateFolder(targetFile, blogPost);\n            }); // create html files for all blog pages (collections of article previews)\n\n            blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n            Object.keys(blogPages).forEach(function (pagePath) {\n              var targetFile = join(buildDir, 'blog', pagePath);\n              writeFileAndCreateFolder(targetFile, blogPages[pagePath]);\n            }); // create rss files for all blog pages, if there are any blog files\n\n            if (MetadataBlog.length > 0) {\n              targetFile = join(buildDir, 'blog', 'feed.xml');\n              writeFileAndCreateFolder(targetFile, feed());\n              targetFile = join(buildDir, 'blog', 'atom.xml');\n              writeFileAndCreateFolder(targetFile, feed('atom'));\n            } // create sitemap\n\n\n            if (MetadataBlog.length > 0 || Object.keys(Metadata).length > 0) {\n              sitemap(function (err, xml) {\n                if (!err) {\n                  var _targetFile = join(buildDir, 'sitemap.xml');\n\n                  writeFileAndCreateFolder(_targetFile, xml);\n                }\n              });\n            } // copy blog assets if they exist\n\n\n            if (fs.existsSync(join(CWD, 'blog', 'assets'))) {\n              fs.copySync(join(CWD, 'blog', 'assets'), join(buildDir, 'blog', 'assets'));\n            } // copy all static files from docusaurus\n\n\n            libStaticDir = join(__dirname, '..', 'static');\n            files = glob.sync(join(libStaticDir, '**'));\n            files.forEach(function (file) {\n              // Why normalize? In case we are on Windows.\n              // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n              var targetFile = path.normalize(file).replace(libStaticDir, buildDir); // parse css files to replace colors according to siteConfig\n\n              if (file.match(/\\.css$/)) {\n                var _cssContent = fs.readFileSync(file, 'utf8');\n\n                if (!siteConfig.colors || !siteConfig.colors.primaryColor || !siteConfig.colors.secondaryColor) {\n                  console.error(\"\".concat(chalk.yellow('Missing color configuration.'), \" Make sure siteConfig.colors includes primaryColor and secondaryColor fields.\"));\n                }\n\n                Object.keys(siteConfig.colors).forEach(function (key) {\n                  var color = siteConfig.colors[key];\n                  _cssContent = _cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n                });\n\n                if (siteConfig.fonts) {\n                  Object.keys(siteConfig.fonts).forEach(function (key) {\n                    var fontString = siteConfig.fonts[key].map(function (font) {\n                      return \"\\\"\".concat(font, \"\\\"\");\n                    }).join(', ');\n                    _cssContent = _cssContent.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n                  });\n                }\n\n                mkdirp.sync(path.dirname(targetFile));\n                fs.writeFileSync(targetFile, _cssContent);\n              } else if (!fs.lstatSync(file).isDirectory()) {\n                mkdirp.sync(path.dirname(targetFile));\n                fs.copySync(file, targetFile);\n              }\n            }); // Copy all static files from user.\n\n            userStaticDir = join(CWD, 'static');\n            files = glob.sync(join(userStaticDir, '**'), {\n              dot: true\n            });\n            files.forEach(function (file) {\n              // Why normalize? In case we are on Windows.\n              // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n              var normalizedFile = path.normalize(file); // parse css files to replace colors and fonts according to siteConfig\n\n              if (normalizedFile.match(/\\.css$/) && !isSeparateCss(normalizedFile, siteConfig.separateCss)) {\n                var _mainCss = join(buildDir, 'css', 'main.css');\n\n                var _cssContent2 = fs.readFileSync(normalizedFile, 'utf8');\n\n                _cssContent2 = \"\".concat(fs.readFileSync(_mainCss, 'utf8'), \"\\n\").concat(_cssContent2);\n                Object.keys(siteConfig.colors).forEach(function (key) {\n                  var color = siteConfig.colors[key];\n                  _cssContent2 = _cssContent2.replace(new RegExp(\"\\\\$\".concat(key), 'g'), color);\n                });\n\n                if (siteConfig.fonts) {\n                  Object.keys(siteConfig.fonts).forEach(function (key) {\n                    var fontString = siteConfig.fonts[key].map(function (font) {\n                      return \"\\\"\".concat(font, \"\\\"\");\n                    }).join(', ');\n                    _cssContent2 = _cssContent2.replace(new RegExp(\"\\\\$\".concat(key), 'g'), fontString);\n                  });\n                }\n\n                fs.writeFileSync(_mainCss, _cssContent2);\n              } else if (normalizedFile.match(/\\.png$|.jpg$|.svg$|.gif$/) && !commander.skipImageCompression) {\n                var parts = normalizedFile.split(\"\".concat(sep, \"static\").concat(sep));\n\n                var _targetFile2 = join(buildDir, parts[1]);\n\n                var targetDirectory = path.dirname(_targetFile2);\n                mkdirp.sync(targetDirectory);\n                imagemin([normalizedFile], targetDirectory, {\n                  use: [imageminOptipng(), imageminJpegtran(), imageminSvgo({\n                    plugins: [{\n                      removeViewBox: false\n                    }]\n                  }), imageminGifsicle()]\n                })[\"catch\"](function (error) {\n                  // if image compression fail, just copy it as it is\n                  console.error(error);\n                  fs.copySync(normalizedFile, _targetFile2);\n                });\n              } else if (!fs.lstatSync(normalizedFile).isDirectory()) {\n                var _targetFile3 = normalizedFile.replace(userStaticDir, buildDir);\n\n                mkdirp.sync(path.dirname(_targetFile3));\n                fs.copySync(normalizedFile, _targetFile3);\n              }\n            }); // Use cssnano to minify the final combined CSS.\n            // Use autoprefixer to add vendor prefixes\n\n            mainCss = join(buildDir, 'css', 'main.css');\n            cssContent = fs.readFileSync(mainCss, 'utf8');\n            _context.next = 60;\n            return minifyCss(cssContent);\n\n          case 60:\n            minifiedCSS = _context.sent;\n            _context.next = 63;\n            return autoPrefixCss(minifiedCSS);\n\n          case 63:\n            css = _context.sent;\n            fs.writeFileSync(mainCss, css); // compile/copy pages from user\n\n            enabledLanguages = env.translation.enabledLanguages().map(function (lang) {\n              return lang.tag;\n            });\n            userPagesDir = join(CWD, 'pages');\n            files = glob.sync(join(userPagesDir, '**'));\n            files.forEach(function (file) {\n              // Why normalize? In case we are on Windows.\n              // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n              var normalizedFile = path.normalize(file);\n              var relativeFile = normalizedFile.replace(userPagesDir, ''); // render .js files to strings\n\n              if (normalizedFile.match(/\\.js$/)) {\n                var pageID = path.basename(normalizedFile, '.js'); // make temp file for sake of require paths\n\n                var tempFile = join(__dirname, '..', 'pages', relativeFile);\n                tempFile = tempFile.replace(path.basename(normalizedFile), \"temp\".concat(path.basename(normalizedFile)));\n                mkdirp.sync(path.dirname(tempFile));\n                fs.copySync(normalizedFile, tempFile);\n\n                var ReactComp = require(tempFile);\n\n                var _targetFile4 = join(buildDir, relativeFile);\n\n                _targetFile4 = _targetFile4.replace(/\\.js$/, '.html');\n                var regexLang = new RegExp(\"\".concat(escapeStringRegexp(\"\".concat(userPagesDir).concat(sep)), \"(.*)\").concat(escapeStringRegexp(sep)));\n                var match = regexLang.exec(normalizedFile);\n                var langParts = match[1].split(sep);\n\n                if (langParts.indexOf('en') !== -1) {\n                  // Copy and compile a page for each enabled language from the English file.\n                  for (var i = 0; i < enabledLanguages.length; i++) {\n                    var _language = enabledLanguages[i]; // Skip conversion from English file if a file exists for this language.\n\n                    if (_language === 'en' || !fs.existsSync(normalizedFile.replace(\"\".concat(sep, \"en\").concat(sep), sep + _language + sep))) {\n                      translate.setLanguage(_language);\n\n                      var _str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n                        language: _language,\n                        config: siteConfig,\n                        title: ReactComp.title,\n                        description: ReactComp.description,\n                        metadata: {\n                          id: pageID\n                        }\n                      }, /*#__PURE__*/React.createElement(ReactComp, {\n                        config: siteConfig,\n                        language: _language\n                      })));\n\n                      writeFileAndCreateFolder( // TODO: use path functions\n                      _targetFile4.replace(\"\".concat(sep, \"en\").concat(sep), sep + _language + sep), _str);\n                    }\n                  } // write to base level\n\n\n                  var language = env.translation.enabled ? 'en' : '';\n                  translate.setLanguage(language);\n                  var str = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n                    title: ReactComp.title,\n                    language: language,\n                    config: siteConfig,\n                    description: ReactComp.description,\n                    metadata: {\n                      id: pageID\n                    }\n                  }, /*#__PURE__*/React.createElement(ReactComp, {\n                    config: siteConfig,\n                    language: language\n                  })));\n                  writeFileAndCreateFolder(_targetFile4.replace(\"\".concat(sep, \"en\").concat(sep), sep), str);\n                } else {\n                  // allow for rendering of other files not in pages/en folder\n                  var _language2 = env.translation.enabled ? 'en' : '';\n\n                  translate.setLanguage(_language2);\n\n                  var _str2 = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n                    title: ReactComp.title,\n                    language: _language2,\n                    config: siteConfig,\n                    description: ReactComp.description,\n                    metadata: {\n                      id: pageID\n                    }\n                  }, /*#__PURE__*/React.createElement(ReactComp, {\n                    config: siteConfig,\n                    language: _language2\n                  })));\n\n                  writeFileAndCreateFolder(_targetFile4.replace(\"\".concat(sep, \"en\").concat(sep), sep), _str2);\n                }\n\n                fs.removeSync(tempFile);\n              } else if (siteConfig.wrapPagesHTML && normalizedFile.match(/\\.html$/)) {\n                var _pageID = path.basename(normalizedFile, '.html');\n\n                var _targetFile5 = join(buildDir, relativeFile);\n\n                var _str3 = renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Site, {\n                  language: \"en\",\n                  config: siteConfig,\n                  metadata: {\n                    id: _pageID\n                  }\n                }, /*#__PURE__*/React.createElement(\"div\", {\n                  dangerouslySetInnerHTML: {\n                    __html: fs.readFileSync(normalizedFile, {\n                      encoding: 'utf8'\n                    })\n                  }\n                })));\n\n                writeFileAndCreateFolder(_targetFile5, _str3);\n              } else if (!fs.lstatSync(normalizedFile).isDirectory()) {\n                // copy other non .js files\n                var _targetFile6 = join(buildDir, relativeFile);\n\n                mkdirp.sync(path.dirname(_targetFile6));\n                fs.copySync(normalizedFile, _targetFile6);\n              }\n            }); // Generate CNAME file if a custom domain is specified in siteConfig\n\n            if (siteConfig.cname) {\n              _targetFile7 = join(buildDir, 'CNAME');\n              fs.writeFileSync(_targetFile7, siteConfig.cname);\n            }\n\n          case 70:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _execute.apply(this, arguments);\n}\n\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "generate.js"
      ],
      "names": [
        "execute",
        "writeFileAndCreateFolder",
        "file",
        "content",
        "mkdirp",
        "sync",
        "path",
        "dirname",
        "fs",
        "writeFileSync",
        "siteConfig",
        "cleanUrl",
        "indexOf",
        "extraFile",
        "replace",
        "commander",
        "require",
        "option",
        "parse",
        "process",
        "argv",
        "metadataUtils",
        "blog",
        "docs",
        "CWD",
        "cwd",
        "readMetadata",
        "minifyCss",
        "isSeparateCss",
        "autoPrefixCss",
        "React",
        "glob",
        "chalk",
        "Site",
        "env",
        "loadConfig",
        "translate",
        "feed",
        "sitemap",
        "join",
        "sep",
        "escapeStringRegexp",
        "renderToStaticMarkupWithDoctype",
        "imagemin",
        "imageminJpegtran",
        "imageminOptipng",
        "imageminSvgo",
        "imageminGifsicle",
        "console",
        "log",
        "generateMetadataDocs",
        "Metadata",
        "buildDir",
        "projectName",
        "removeSync",
        "mdToHtml",
        "Object",
        "keys",
        "forEach",
        "id",
        "metadata",
        "getFile",
        "rawContent",
        "extractMetadata",
        "str",
        "getMarkup",
        "targetFile",
        "permalink",
        "redirectMarkup",
        "getRedirectMarkup",
        "docsPart",
        "docsUrl",
        "redirectFile",
        "RegExp",
        "existsSync",
        "getDocsPath",
        "copySync",
        "__dirname",
        "generateMetadataBlog",
        "MetadataBlog",
        "files",
        "sort",
        "reverse",
        "normalizedFile",
        "normalize",
        "extension",
        "extname",
        "urlPath",
        "fileToUrl",
        "blogPost",
        "getPostMarkup",
        "blogPages",
        "getPagesMarkup",
        "length",
        "pagePath",
        "err",
        "xml",
        "libStaticDir",
        "match",
        "cssContent",
        "readFileSync",
        "colors",
        "primaryColor",
        "secondaryColor",
        "error",
        "yellow",
        "key",
        "color",
        "fonts",
        "fontString",
        "map",
        "font",
        "lstatSync",
        "isDirectory",
        "userStaticDir",
        "dot",
        "separateCss",
        "mainCss",
        "skipImageCompression",
        "parts",
        "split",
        "targetDirectory",
        "use",
        "plugins",
        "removeViewBox",
        "minifiedCSS",
        "css",
        "enabledLanguages",
        "translation",
        "lang",
        "tag",
        "userPagesDir",
        "relativeFile",
        "pageID",
        "basename",
        "tempFile",
        "ReactComp",
        "regexLang",
        "exec",
        "langParts",
        "i",
        "language",
        "setLanguage",
        "title",
        "description",
        "enabled",
        "wrapPagesHTML",
        "__html",
        "encoding",
        "cname",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nasync function execute() {\n  const commander = require('commander');\n  commander\n    .option('--skip-image-compression')\n    .option('--skip-next-release')\n    .parse(process.argv);\n  require('../write-translations.js');\n  const metadataUtils = require('./metadataUtils');\n  const blog = require('./blog');\n  const docs = require('./docs');\n  const CWD = process.cwd();\n  const fs = require('fs-extra');\n  const readMetadata = require('./readMetadata.js');\n  const path = require('path');\n  const {minifyCss, isSeparateCss, autoPrefixCss} = require('./utils');\n  const React = require('react');\n  const mkdirp = require('mkdirp');\n  const glob = require('glob');\n  const chalk = require('chalk');\n  const Site = require('../core/Site.js');\n  const env = require('./env.js');\n  const loadConfig = require('./config.js');\n  const siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n  const translate = require('./translate.js');\n  const feed = require('./feed.js');\n  const sitemap = require('./sitemap.js');\n  const join = path.join;\n  const sep = path.sep;\n  const escapeStringRegexp = require('escape-string-regexp');\n  const {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n  const imagemin = require('imagemin');\n  const imageminJpegtran = require('imagemin-jpegtran');\n  const imageminOptipng = require('imagemin-optipng');\n  const imageminSvgo = require('imagemin-svgo');\n  const imageminGifsicle = require('imagemin-gifsicle');\n\n  // create the folder path for a file if it does not exist, then write the file\n  function writeFileAndCreateFolder(file, content) {\n    mkdirp.sync(path.dirname(file));\n    fs.writeFileSync(file, content);\n\n    // build extra file for extension-less url if \"cleanUrl\" siteConfig is true\n    if (siteConfig.cleanUrl && file.indexOf('index.html') === -1) {\n      const extraFile = file.replace(/\\.html$/, '/index.html');\n      mkdirp.sync(path.dirname(extraFile));\n      fs.writeFileSync(extraFile, content);\n    }\n  }\n\n  console.log('generate.js triggered...');\n\n  readMetadata.generateMetadataDocs();\n  const Metadata = require('../core/metadata.js');\n\n  // TODO: what if the project is a github org page? We should not use\n  // siteConfig.projectName in this case. Otherwise a GitHub org doc URL would\n  // look weird: https://myorg.github.io/myorg/docs\n\n  // TODO: siteConfig.projectName is a misnomer. The actual project name is\n  // `title`. `projectName` is only used to generate a folder, which isn't\n  // needed when the project's a GitHub org page\n\n  const buildDir = join(CWD, 'build', siteConfig.projectName);\n  fs.removeSync(join(CWD, 'build'));\n\n  // create html files for all docs by going through all doc ids\n  const mdToHtml = metadataUtils.mdToHtml(Metadata, siteConfig);\n  Object.keys(Metadata).forEach((id) => {\n    const metadata = Metadata[id];\n    const file = docs.getFile(metadata);\n    if (!file) {\n      return;\n    }\n    const rawContent = metadataUtils.extractMetadata(file).rawContent;\n    const str = docs.getMarkup(rawContent, mdToHtml, metadata, siteConfig);\n    const targetFile = join(buildDir, metadata.permalink);\n    writeFileAndCreateFolder(targetFile, str);\n\n    // generate english page redirects when languages are enabled\n    const redirectMarkup = docs.getRedirectMarkup(metadata, siteConfig);\n    if (!redirectMarkup) {\n      return;\n    }\n    const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n    const redirectFile = join(\n      buildDir,\n      metadata.permalink.replace(\n        new RegExp(`^${docsPart}en`),\n        siteConfig.docsUrl,\n      ),\n    );\n    writeFileAndCreateFolder(redirectFile, redirectMarkup);\n  });\n\n  // copy docs assets if they exist\n  if (fs.existsSync(join(CWD, '..', readMetadata.getDocsPath(), 'assets'))) {\n    fs.copySync(\n      join(CWD, '..', readMetadata.getDocsPath(), 'assets'),\n      join(buildDir, siteConfig.docsUrl, 'assets'),\n    );\n  }\n\n  // create html files for all blog posts (each article)\n  if (fs.existsSync(join(__dirname, '..', 'core', 'MetadataBlog.js'))) {\n    fs.removeSync(join(__dirname, '..', 'core', 'MetadataBlog.js'));\n  }\n  readMetadata.generateMetadataBlog(siteConfig);\n  const MetadataBlog = require('../core/MetadataBlog.js');\n\n  let files = glob.sync(join(CWD, 'blog', '**', '*.*'));\n  files\n    .sort()\n    .reverse()\n    .forEach((file) => {\n      // Why normalize? In case we are on Windows.\n      // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n      const normalizedFile = path.normalize(file);\n      const extension = path.extname(normalizedFile);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const urlPath = blog.fileToUrl(normalizedFile);\n      const blogPost = blog.getPostMarkup(normalizedFile, siteConfig);\n      if (!blogPost) {\n        return;\n      }\n      const targetFile = join(buildDir, 'blog', urlPath);\n      writeFileAndCreateFolder(targetFile, blogPost);\n    });\n\n  // create html files for all blog pages (collections of article previews)\n  const blogPages = blog.getPagesMarkup(MetadataBlog.length, siteConfig);\n  Object.keys(blogPages).forEach((pagePath) => {\n    const targetFile = join(buildDir, 'blog', pagePath);\n    writeFileAndCreateFolder(targetFile, blogPages[pagePath]);\n  });\n\n  // create rss files for all blog pages, if there are any blog files\n  if (MetadataBlog.length > 0) {\n    let targetFile = join(buildDir, 'blog', 'feed.xml');\n    writeFileAndCreateFolder(targetFile, feed());\n    targetFile = join(buildDir, 'blog', 'atom.xml');\n    writeFileAndCreateFolder(targetFile, feed('atom'));\n  }\n\n  // create sitemap\n  if (MetadataBlog.length > 0 || Object.keys(Metadata).length > 0) {\n    sitemap((err, xml) => {\n      if (!err) {\n        const targetFile = join(buildDir, 'sitemap.xml');\n        writeFileAndCreateFolder(targetFile, xml);\n      }\n    });\n  }\n\n  // copy blog assets if they exist\n  if (fs.existsSync(join(CWD, 'blog', 'assets'))) {\n    fs.copySync(join(CWD, 'blog', 'assets'), join(buildDir, 'blog', 'assets'));\n  }\n\n  // copy all static files from docusaurus\n  const libStaticDir = join(__dirname, '..', 'static');\n  files = glob.sync(join(libStaticDir, '**'));\n  files.forEach((file) => {\n    // Why normalize? In case we are on Windows.\n    // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n    const targetFile = path.normalize(file).replace(libStaticDir, buildDir);\n    // parse css files to replace colors according to siteConfig\n    if (file.match(/\\.css$/)) {\n      let cssContent = fs.readFileSync(file, 'utf8');\n\n      if (\n        !siteConfig.colors ||\n        !siteConfig.colors.primaryColor ||\n        !siteConfig.colors.secondaryColor\n      ) {\n        console.error(\n          `${chalk.yellow(\n            'Missing color configuration.',\n          )} Make sure siteConfig.colors includes primaryColor and secondaryColor fields.`,\n        );\n      }\n\n      Object.keys(siteConfig.colors).forEach((key) => {\n        const color = siteConfig.colors[key];\n        cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n      });\n\n      if (siteConfig.fonts) {\n        Object.keys(siteConfig.fonts).forEach((key) => {\n          const fontString = siteConfig.fonts[key]\n            .map((font) => `\"${font}\"`)\n            .join(', ');\n          cssContent = cssContent.replace(\n            new RegExp(`\\\\$${key}`, 'g'),\n            fontString,\n          );\n        });\n      }\n\n      mkdirp.sync(path.dirname(targetFile));\n      fs.writeFileSync(targetFile, cssContent);\n    } else if (!fs.lstatSync(file).isDirectory()) {\n      mkdirp.sync(path.dirname(targetFile));\n      fs.copySync(file, targetFile);\n    }\n  });\n\n  // Copy all static files from user.\n  const userStaticDir = join(CWD, 'static');\n  files = glob.sync(join(userStaticDir, '**'), {dot: true});\n  files.forEach((file) => {\n    // Why normalize? In case we are on Windows.\n    // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n    const normalizedFile = path.normalize(file);\n    // parse css files to replace colors and fonts according to siteConfig\n    if (\n      normalizedFile.match(/\\.css$/) &&\n      !isSeparateCss(normalizedFile, siteConfig.separateCss)\n    ) {\n      const mainCss = join(buildDir, 'css', 'main.css');\n      let cssContent = fs.readFileSync(normalizedFile, 'utf8');\n      cssContent = `${fs.readFileSync(mainCss, 'utf8')}\\n${cssContent}`;\n\n      Object.keys(siteConfig.colors).forEach((key) => {\n        const color = siteConfig.colors[key];\n        cssContent = cssContent.replace(new RegExp(`\\\\$${key}`, 'g'), color);\n      });\n\n      if (siteConfig.fonts) {\n        Object.keys(siteConfig.fonts).forEach((key) => {\n          const fontString = siteConfig.fonts[key]\n            .map((font) => `\"${font}\"`)\n            .join(', ');\n          cssContent = cssContent.replace(\n            new RegExp(`\\\\$${key}`, 'g'),\n            fontString,\n          );\n        });\n      }\n\n      fs.writeFileSync(mainCss, cssContent);\n    } else if (\n      normalizedFile.match(/\\.png$|.jpg$|.svg$|.gif$/) &&\n      !commander.skipImageCompression\n    ) {\n      const parts = normalizedFile.split(`${sep}static${sep}`);\n      const targetFile = join(buildDir, parts[1]);\n      const targetDirectory = path.dirname(targetFile);\n      mkdirp.sync(targetDirectory);\n      imagemin([normalizedFile], targetDirectory, {\n        use: [\n          imageminOptipng(),\n          imageminJpegtran(),\n          imageminSvgo({\n            plugins: [{removeViewBox: false}],\n          }),\n          imageminGifsicle(),\n        ],\n      }).catch((error) => {\n        // if image compression fail, just copy it as it is\n        console.error(error);\n        fs.copySync(normalizedFile, targetFile);\n      });\n    } else if (!fs.lstatSync(normalizedFile).isDirectory()) {\n      const targetFile = normalizedFile.replace(userStaticDir, buildDir);\n      mkdirp.sync(path.dirname(targetFile));\n      fs.copySync(normalizedFile, targetFile);\n    }\n  });\n\n  // Use cssnano to minify the final combined CSS.\n  // Use autoprefixer to add vendor prefixes\n  const mainCss = join(buildDir, 'css', 'main.css');\n  const cssContent = fs.readFileSync(mainCss, 'utf8');\n  const minifiedCSS = await minifyCss(cssContent);\n  const css = await autoPrefixCss(minifiedCSS);\n  fs.writeFileSync(mainCss, css);\n\n  // compile/copy pages from user\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map((lang) => lang.tag);\n  const userPagesDir = join(CWD, 'pages');\n  files = glob.sync(join(userPagesDir, '**'));\n  files.forEach((file) => {\n    // Why normalize? In case we are on Windows.\n    // Remember the nuance of glob: https://www.npmjs.com/package/glob#windows\n    const normalizedFile = path.normalize(file);\n    const relativeFile = normalizedFile.replace(userPagesDir, '');\n    // render .js files to strings\n    if (normalizedFile.match(/\\.js$/)) {\n      const pageID = path.basename(normalizedFile, '.js');\n\n      // make temp file for sake of require paths\n      let tempFile = join(__dirname, '..', 'pages', relativeFile);\n      tempFile = tempFile.replace(\n        path.basename(normalizedFile),\n        `temp${path.basename(normalizedFile)}`,\n      );\n      mkdirp.sync(path.dirname(tempFile));\n      fs.copySync(normalizedFile, tempFile);\n\n      const ReactComp = require(tempFile);\n\n      let targetFile = join(buildDir, relativeFile);\n      targetFile = targetFile.replace(/\\.js$/, '.html');\n\n      const regexLang = new RegExp(\n        `${escapeStringRegexp(`${userPagesDir}${sep}`)}(.*)${escapeStringRegexp(\n          sep,\n        )}`,\n      );\n      const match = regexLang.exec(normalizedFile);\n      const langParts = match[1].split(sep);\n      if (langParts.indexOf('en') !== -1) {\n        // Copy and compile a page for each enabled language from the English file.\n        for (let i = 0; i < enabledLanguages.length; i++) {\n          const language = enabledLanguages[i];\n          // Skip conversion from English file if a file exists for this language.\n          if (\n            language === 'en' ||\n            !fs.existsSync(\n              normalizedFile.replace(`${sep}en${sep}`, sep + language + sep),\n            )\n          ) {\n            translate.setLanguage(language);\n            const str = renderToStaticMarkupWithDoctype(\n              <Site\n                language={language}\n                config={siteConfig}\n                title={ReactComp.title}\n                description={ReactComp.description}\n                metadata={{id: pageID}}>\n                <ReactComp config={siteConfig} language={language} />\n              </Site>,\n            );\n            writeFileAndCreateFolder(\n              // TODO: use path functions\n              targetFile.replace(`${sep}en${sep}`, sep + language + sep),\n              str,\n            );\n          }\n        }\n\n        // write to base level\n        const language = env.translation.enabled ? 'en' : '';\n        translate.setLanguage(language);\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            title={ReactComp.title}\n            language={language}\n            config={siteConfig}\n            description={ReactComp.description}\n            metadata={{id: pageID}}>\n            <ReactComp config={siteConfig} language={language} />\n          </Site>,\n        );\n        writeFileAndCreateFolder(\n          targetFile.replace(`${sep}en${sep}`, sep),\n          str,\n        );\n      } else {\n        // allow for rendering of other files not in pages/en folder\n        const language = env.translation.enabled ? 'en' : '';\n        translate.setLanguage(language);\n        const str = renderToStaticMarkupWithDoctype(\n          <Site\n            title={ReactComp.title}\n            language={language}\n            config={siteConfig}\n            description={ReactComp.description}\n            metadata={{id: pageID}}>\n            <ReactComp config={siteConfig} language={language} />\n          </Site>,\n        );\n        writeFileAndCreateFolder(\n          targetFile.replace(`${sep}en${sep}`, sep),\n          str,\n        );\n      }\n      fs.removeSync(tempFile);\n    } else if (siteConfig.wrapPagesHTML && normalizedFile.match(/\\.html$/)) {\n      const pageID = path.basename(normalizedFile, '.html');\n      const targetFile = join(buildDir, relativeFile);\n      const str = renderToStaticMarkupWithDoctype(\n        <Site language=\"en\" config={siteConfig} metadata={{id: pageID}}>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: fs.readFileSync(normalizedFile, {encoding: 'utf8'}),\n            }}\n          />\n        </Site>,\n      );\n\n      writeFileAndCreateFolder(targetFile, str);\n    } else if (!fs.lstatSync(normalizedFile).isDirectory()) {\n      // copy other non .js files\n      const targetFile = join(buildDir, relativeFile);\n      mkdirp.sync(path.dirname(targetFile));\n      fs.copySync(normalizedFile, targetFile);\n    }\n  });\n\n  // Generate CNAME file if a custom domain is specified in siteConfig\n  if (siteConfig.cname) {\n    const targetFile = join(buildDir, 'CNAME');\n    fs.writeFileSync(targetFile, siteConfig.cname);\n  }\n}\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/write-translations.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/write-translations.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/write-translations.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/write-translations.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/",
        "sourceFileName": "write-translations.js"
      }
    },
    "ast": null,
    "code": "#!/usr/bin/env node\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\"use strict\";\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, \"\".concat(process.cwd(), \"/core\")],\n  plugins: [require('./server/translate-plugin.js'), require('@babel/plugin-proposal-class-properties')[\"default\"], require('@babel/plugin-proposal-object-rest-spread')[\"default\"]],\n  presets: [require('@babel/preset-react')[\"default\"], require('@babel/preset-env')[\"default\"]]\n});\n\nvar traverse = require('@babel/traverse')[\"default\"];\n\nvar babylon = require('babylon');\n\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar mkdirp = require('mkdirp');\n\nvar nodePath = require('path');\n\nvar _ = require('lodash');\n\nvar readMetadata = require('./server/readMetadata.js');\n\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar sidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n\nvar customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {}\n  },\n  'pages-strings': {}\n};\n\nif (fs.existsSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"))) {\n  customTranslations = _.merge({}, JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/data/custom-translation-strings.json\"), 'utf8')), customTranslations);\n}\n\nfunction parseJSXFile(file) {\n  try {\n    return babylon.parse(fs.readFileSync(file, 'utf8'), {\n      plugins: ['jsx']\n    });\n  } catch (e) {\n    throw new Error(\"Babylon parsing failure for file=\".concat(file, \": \").concat(e.message, \"\\n    \\nNote: Docusaurus v1 currently uses Babylon v6, and <> fragment syntax is not supported\"));\n  }\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  var translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {}\n    },\n    'pages-strings': {}\n  }; // look through markdown headers of docs for titles and categories to translate\n\n  var docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  var versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  var translateDoc = function translateDoc(file, refDir) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.md' || extension === '.markdown') {\n      var res;\n\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n\n      if (!res) {\n        return;\n      }\n\n      var metadata = res.metadata;\n      var id = metadata.localized_id;\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label = metadata.sidebar_label;\n      }\n    }\n  };\n\n  glob.sync(\"\".concat(docsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, docsDir);\n  });\n  glob.sync(\"\".concat(versionedDocsDir, \"/**\")).forEach(function (file) {\n    return translateDoc(file, versionedDocsDir);\n  }); // look through header links for text to translate\n\n  siteConfig.headerLinks.forEach(function (link) {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  }); // find sidebar category titles to translate\n\n  Object.keys(sidebars).forEach(function (sb) {\n    var categories = sidebars[sb];\n    Object.keys(categories).forEach(function (category) {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n  glob.sync(\"\".concat(CWD, \"/versioned_sidebars/*\")).forEach(function (file) {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\"Skipping \".concat(file, \". Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.\"));\n      }\n\n      return;\n    }\n\n    var sidebarContent;\n\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(\"Could not parse \".concat(file, \" into json. \").concat(e));\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach(function (sb) {\n      var categories = sidebarContent[sb];\n      Object.keys(categories).forEach(function (category) {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  }); // go through pages to look for text inside translate tags\n\n  glob.sync(\"\".concat(CWD, \"/pages/en/**\")).forEach(function (file) {\n    var extension = nodePath.extname(file);\n\n    if (extension === '.js') {\n      var ast = parseJSXFile(file);\n      traverse(ast, {\n        enter: function enter(path) {\n          if (path.node.type === 'JSXElement' && path.node.openingElement.name.name === 'translate') {\n            var text = path.node.children[0].value.trim().replace(/\\s+/g, ' ');\n            var description = 'no description given';\n            var attributes = path.node.openingElement.attributes;\n\n            for (var i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n\n            translations['pages-strings'][\"\".concat(text, \"|\").concat(description)] = text;\n          }\n        }\n      });\n    }\n  }); // Manually add 'Help Translate' to en.json\n\n  translations['pages-strings']['Help Translate|recruit community translators for your project'] = 'Help Translate';\n  translations['pages-strings']['Edit this Doc|recruitment message asking to edit the doc source'] = 'Edit';\n  translations['pages-strings']['Translate this Doc|recruitment message asking to translate the docs'] = 'Translate';\n  translations['pages-strings'] = Object.assign(translations['pages-strings'], customTranslations['pages-strings']);\n  translations['localized-strings'] = _.merge({}, translations['localized-strings'], customTranslations['localized-strings']);\n  writeFileAndCreateFolder(\"\".concat(CWD, \"/i18n/en.json\"), \"\".concat(JSON.stringify(Object.assign({\n    _comment: 'This file is auto-generated by write-translations.js'\n  }, translations), null, 2), \"\\n\"));\n}\n\nexecute();\nmodule.exports = execute;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "write-translations.js"
      ],
      "names": [
        "require",
        "babelrc",
        "only",
        "__dirname",
        "process",
        "cwd",
        "plugins",
        "presets",
        "traverse",
        "babylon",
        "fs",
        "glob",
        "mkdirp",
        "nodePath",
        "_",
        "readMetadata",
        "CWD",
        "siteConfig",
        "sidebars",
        "customTranslations",
        "docs",
        "links",
        "categories",
        "existsSync",
        "merge",
        "JSON",
        "parse",
        "readFileSync",
        "parseJSXFile",
        "file",
        "e",
        "Error",
        "message",
        "writeFileAndCreateFolder",
        "content",
        "sync",
        "replace",
        "RegExp",
        "writeFileSync",
        "execute",
        "translations",
        "next",
        "previous",
        "tagline",
        "docsDir",
        "join",
        "getDocsPath",
        "versionedDocsDir",
        "translateDoc",
        "refDir",
        "extension",
        "extname",
        "res",
        "processMetadata",
        "console",
        "error",
        "exit",
        "metadata",
        "id",
        "localized_id",
        "title",
        "sidebar_label",
        "forEach",
        "headerLinks",
        "link",
        "label",
        "Object",
        "keys",
        "sb",
        "category",
        "endsWith",
        "warn",
        "sidebarContent",
        "ast",
        "enter",
        "path",
        "node",
        "type",
        "openingElement",
        "name",
        "text",
        "children",
        "value",
        "trim",
        "description",
        "attributes",
        "i",
        "length",
        "assign",
        "stringify",
        "_comment",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/",
      "sourcesContent": [
        "#!/usr/bin/env node\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* generate the i18n/en.json file */\n\nrequire('@babel/register')({\n  babelrc: false,\n  only: [__dirname, `${process.cwd()}/core`],\n  plugins: [\n    require('./server/translate-plugin.js'),\n    require('@babel/plugin-proposal-class-properties').default,\n    require('@babel/plugin-proposal-object-rest-spread').default,\n  ],\n  presets: [\n    require('@babel/preset-react').default,\n    require('@babel/preset-env').default,\n  ],\n});\n\nconst traverse = require('@babel/traverse').default;\nconst babylon = require('babylon');\nconst fs = require('fs-extra');\nconst glob = require('glob');\nconst mkdirp = require('mkdirp');\nconst nodePath = require('path');\nconst _ = require('lodash');\n\nconst readMetadata = require('./server/readMetadata.js');\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst sidebars = require(`${CWD}/sidebars.json`);\n\nlet customTranslations = {\n  'localized-strings': {\n    docs: {},\n    links: {},\n    categories: {},\n  },\n  'pages-strings': {},\n};\nif (fs.existsSync(`${CWD}/data/custom-translation-strings.json`)) {\n  customTranslations = _.merge(\n    {},\n    JSON.parse(\n      fs.readFileSync(`${CWD}/data/custom-translation-strings.json`, 'utf8'),\n    ),\n    customTranslations,\n  );\n}\n\nfunction parseJSXFile(file) {\n  try {\n    return babylon.parse(fs.readFileSync(file, 'utf8'), {\n      plugins: ['jsx'],\n    });\n  } catch (e) {\n    throw new Error(`Babylon parsing failure for file=${file}: ${e.message}\n    \\nNote: Docusaurus v1 currently uses Babylon v6, and <> fragment syntax is not supported`);\n  }\n}\n\nfunction writeFileAndCreateFolder(file, content) {\n  mkdirp.sync(file.replace(new RegExp('/[^/]*$'), ''));\n  fs.writeFileSync(file, content);\n}\n\nfunction execute() {\n  const translations = {\n    'localized-strings': {\n      next: 'Next',\n      previous: 'Previous',\n      tagline: siteConfig.tagline,\n      docs: {},\n      links: {},\n      categories: {},\n    },\n    'pages-strings': {},\n  };\n\n  // look through markdown headers of docs for titles and categories to translate\n  const docsDir = nodePath.join(CWD, '../', readMetadata.getDocsPath());\n  const versionedDocsDir = nodePath.join(CWD, 'versioned_docs');\n\n  const translateDoc = (file, refDir) => {\n    const extension = nodePath.extname(file);\n    if (extension === '.md' || extension === '.markdown') {\n      let res;\n      try {\n        res = readMetadata.processMetadata(file, refDir);\n      } catch (e) {\n        console.error(e);\n        process.exit(1);\n      }\n      if (!res) {\n        return;\n      }\n      const metadata = res.metadata;\n      const id = metadata.localized_id;\n\n      translations['localized-strings'].docs[id] = {};\n      translations['localized-strings'].docs[id].title = metadata.title;\n\n      if (metadata.sidebar_label) {\n        translations['localized-strings'].docs[id].sidebar_label =\n          metadata.sidebar_label;\n      }\n    }\n  };\n  glob.sync(`${docsDir}/**`).forEach((file) => translateDoc(file, docsDir));\n  glob\n    .sync(`${versionedDocsDir}/**`)\n    .forEach((file) => translateDoc(file, versionedDocsDir));\n\n  // look through header links for text to translate\n  siteConfig.headerLinks.forEach((link) => {\n    if (link.label) {\n      translations['localized-strings'].links[link.label] = link.label;\n    }\n  });\n\n  // find sidebar category titles to translate\n  Object.keys(sidebars).forEach((sb) => {\n    const categories = sidebars[sb];\n    Object.keys(categories).forEach((category) => {\n      translations['localized-strings'].categories[category] = category;\n    });\n  });\n\n  glob.sync(`${CWD}/versioned_sidebars/*`).forEach((file) => {\n    if (!file.endsWith('-sidebars.json')) {\n      if (file.endsWith('-sidebar.json')) {\n        console.warn(\n          `Skipping ${file}. Make sure your sidebar filenames follow this format: 'version-VERSION-sidebars.json'.`,\n        );\n      }\n      return;\n    }\n    let sidebarContent;\n    try {\n      sidebarContent = JSON.parse(fs.readFileSync(file, 'utf8'));\n    } catch (e) {\n      console.error(`Could not parse ${file} into json. ${e}`);\n      process.exit(1);\n    }\n\n    Object.keys(sidebarContent).forEach((sb) => {\n      const categories = sidebarContent[sb];\n      Object.keys(categories).forEach((category) => {\n        translations['localized-strings'].categories[category] = category;\n      });\n    });\n  });\n\n  // go through pages to look for text inside translate tags\n  glob.sync(`${CWD}/pages/en/**`).forEach((file) => {\n    const extension = nodePath.extname(file);\n    if (extension === '.js') {\n      const ast = parseJSXFile(file);\n      traverse(ast, {\n        enter(path) {\n          if (\n            path.node.type === 'JSXElement' &&\n            path.node.openingElement.name.name === 'translate'\n          ) {\n            const text = path.node.children[0].value\n              .trim()\n              .replace(/\\s+/g, ' ');\n            let description = 'no description given';\n            const attributes = path.node.openingElement.attributes;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].name.name === 'desc') {\n                description = attributes[i].value.value;\n              }\n            }\n            translations['pages-strings'][`${text}|${description}`] = text;\n          }\n        },\n      });\n    }\n  });\n\n  // Manually add 'Help Translate' to en.json\n  translations['pages-strings'][\n    'Help Translate|recruit community translators for your project'\n  ] = 'Help Translate';\n  translations['pages-strings'][\n    'Edit this Doc|recruitment message asking to edit the doc source'\n  ] = 'Edit';\n  translations['pages-strings'][\n    'Translate this Doc|recruitment message asking to translate the docs'\n  ] = 'Translate';\n  translations['pages-strings'] = Object.assign(\n    translations['pages-strings'],\n    customTranslations['pages-strings'],\n  );\n  translations['localized-strings'] = _.merge(\n    {},\n    translations['localized-strings'],\n    customTranslations['localized-strings'],\n  );\n  writeFileAndCreateFolder(\n    `${CWD}/i18n/en.json`,\n    `${JSON.stringify(\n      Object.assign(\n        {\n          _comment: 'This file is auto-generated by write-translations.js',\n        },\n        translations,\n      ),\n      null,\n      2,\n    )}\\n`,\n  );\n}\n\nexecute();\n\nmodule.exports = execute;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596639617000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readMetadata.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readMetadata.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readMetadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readMetadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "readMetadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar path = require('path');\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar program = require('commander');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar blog = require('./blog.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar versionFallback = require('./versionFallback.js');\n\nvar utils = require('./utils.js');\n\nvar docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : ''); // Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\n\nvar allDeletedIds = new Set();\n\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach(function (idList) {\n    idList.forEach(function (id) {\n      return allDeletedIds.add(id);\n    });\n  });\n}\n\nvar SupportedHeaderFields = new Set(['id', 'title', 'author', 'authorURL', 'authorFBID', 'sidebar_label', 'original_id', 'hide_title', 'layout', 'custom_edit_url', 'description']);\nvar allSidebars;\n\nif (fs.existsSync(\"\".concat(CWD, \"/sidebars.json\"))) {\n  allSidebars = require(\"\".concat(CWD, \"/sidebars.json\"));\n} else {\n  allSidebars = {};\n} // Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\n\n\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n} // returns map from id to object containing sidebar ordering info\n\n\nfunction readSidebar() {\n  var sidebars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  Object.assign(sidebars, versionFallback.sidebarData());\n  var items = {};\n  Object.keys(sidebars).forEach(function (sidebar) {\n    var categories = sidebars[sidebar];\n    var sidebarItems = [];\n    Object.keys(categories).forEach(function (category) {\n      var categoryItems = categories[category];\n      categoryItems.forEach(function (categoryItem) {\n        if (_typeof(categoryItem) === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach(function (subcategoryItem) {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category: category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1\n                });\n              });\n              return;\n\n            default:\n              return;\n          }\n        } // Is a regular id value.\n\n\n        sidebarItems.push({\n          id: categoryItem,\n          category: category,\n          subcategory: null,\n          order: sidebarItems.length + 1\n        });\n      });\n    });\n\n    for (var i = 0; i < sidebarItems.length; i++) {\n      var item = sidebarItems[i];\n      var previous = null;\n      var next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous: previous,\n        next: next,\n        sidebar: sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order\n      };\n    }\n  });\n  return items;\n} // process the metadata for a document found in either 'docs' or 'translated_docs'\n\n\nfunction processMetadata(file, refDir) {\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var language = utils.getLanguage(file, refDir) || 'en';\n  var metadata = {};\n  Object.keys(result.metadata).forEach(function (fieldName) {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(\"Header field \\\"\".concat(fieldName, \"\\\" in \").concat(file, \" is not supported.\"));\n    }\n  });\n  var rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  } // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n\n\n  var subDir = utils.getSubDir(file, refDir);\n\n  if (subDir) {\n    metadata.id = \"\".concat(subDir, \"/\").concat(metadata.id);\n  } // Example: `docs/projectA/test.md` source is `projectA/test.md`\n\n\n  metadata.source = subDir ? \"\".concat(subDir, \"/\").concat(path.basename(file)) : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  var langPart = env.translation.enabled || siteConfig.useEnglishUrl ? \"\".concat(language, \"/\") : '';\n  var versionPart = '';\n\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = \"\".concat(docsPart).concat(langPart).concat(versionPart).concat(metadata.id, \".html\"); // change ids previous, next\n\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n  var items = readSidebar(allSidebars);\n  var id = metadata.localized_id;\n  var item = items[id];\n\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.next;\n    }\n\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + item.previous;\n    }\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: rawContent\n  };\n} // process metadata for all docs and save into core/metadata.js\n\n\nfunction generateMetadataDocs() {\n  var order;\n\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n    return language.tag;\n  });\n  var metadatas = {};\n  var defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    var docsDir = path.join(CWD, '../', getDocsPath());\n    var files = glob.sync(\"\".concat(docsDir, \"/**\"));\n    files.forEach(function (file) {\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata; // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n\n        enabledLanguages.filter(function (currentLanguage) {\n          return currentLanguage !== 'en';\n        }).forEach(function (currentLanguage) {\n          var baseMetadata = Object.assign({}, metadata);\n          baseMetadata.id = baseMetadata.id.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n\n          if (baseMetadata.permalink) {\n            baseMetadata.permalink = baseMetadata.permalink.toString().replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(currentLanguage, \"/\"));\n          }\n\n          if (baseMetadata.next) {\n            baseMetadata.next = baseMetadata.next.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          if (baseMetadata.previous) {\n            baseMetadata.previous = baseMetadata.previous.toString().replace(/^en-/, \"\".concat(currentLanguage, \"-\"));\n          }\n\n          baseMetadata.language = currentLanguage;\n          defaultMetadatas[baseMetadata.id] = baseMetadata;\n        });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    }); // metadata for non-english docs\n\n    var translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(\"\".concat(CWD, \"/translated_docs/**\"));\n    files.forEach(function (file) {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      var extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        var res = processMetadata(file, translatedDir);\n\n        if (!res) {\n          return;\n        }\n\n        var metadata = res.metadata;\n\n        if (allDeletedIds.has(metadata.id) || metadata.original_id && allDeletedIds.has(metadata.original_id)) {\n          return;\n        }\n\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  } // metadata for versioned docs\n\n\n  var versionData = versionFallback.docData();\n  versionData.forEach(function (metadata) {\n    var id = metadata.localized_id;\n\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.next = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].next;\n      }\n\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\"version-\".concat(metadata.version, \"-\"), '');\n        metadata.previous = (env.translation.enabled ? \"\".concat(metadata.language, \"-\") : '') + order[id].previous;\n      }\n    }\n\n    metadatas[metadata.id] = metadata;\n  }); // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n\n  Object.keys(metadatas).forEach(function (metadata) {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title = metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title = metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/metadata.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(metadatas, null, 2), \";\\n\"));\n} // process metadata for blog posts and save into core/MetadataBlog.js\n\n\nfunction generateMetadataBlog() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : siteConfig;\n  var metadatas = [];\n  var files = glob.sync(\"\".concat(CWD, \"/blog/**/*.*\"));\n  files.sort().reverse().forEach(function (file) {\n    var extension = path.extname(file);\n\n    if (extension !== '.md' && extension !== '.markdown') {\n      return;\n    }\n\n    var metadata = blog.getMetadata(file, config); // Extract, YYYY, MM, DD from the file name\n\n    var filePathDateArr = path.basename(file).split('-');\n    metadata.date = new Date(\"\".concat(filePathDateArr[0], \"-\").concat(filePathDateArr[1], \"-\").concat(filePathDateArr[2], \"T06:00:00.000Z\")); // allow easier sorting of blog by providing seconds since epoch\n\n    metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n    metadatas.push(metadata);\n  });\n  var sortedMetadatas = metadatas.sort(function (a, b) {\n    return parseInt(b.seconds, 10) - parseInt(a.seconds, 10);\n  });\n  fs.writeFileSync(path.join(__dirname, '/../core/MetadataBlog.js'), \"\".concat('/**\\n' + ' * @' + 'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n  ' */\\n' + 'module.exports = ').concat(JSON.stringify(sortedMetadatas, null, 2), \";\\n\"));\n}\n\nmodule.exports = {\n  getDocsPath: getDocsPath,\n  readSidebar: readSidebar,\n  processMetadata: processMetadata,\n  generateMetadataDocs: generateMetadataDocs,\n  generateMetadataBlog: generateMetadataBlog\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "readMetadata.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "path",
        "require",
        "fs",
        "glob",
        "program",
        "metadataUtils",
        "env",
        "blog",
        "loadConfig",
        "siteConfig",
        "versionFallback",
        "utils",
        "docsPart",
        "docsUrl",
        "allDeletedIds",
        "Set",
        "deletedDocs",
        "Object",
        "values",
        "forEach",
        "idList",
        "id",
        "add",
        "SupportedHeaderFields",
        "allSidebars",
        "existsSync",
        "getDocsPath",
        "customDocsPath",
        "shouldGenerateNextReleaseDocs",
        "versioning",
        "enabled",
        "skipNextRelease",
        "readSidebar",
        "sidebars",
        "assign",
        "sidebarData",
        "items",
        "keys",
        "sidebar",
        "categories",
        "sidebarItems",
        "category",
        "categoryItems",
        "categoryItem",
        "type",
        "ids",
        "subcategoryItem",
        "push",
        "subcategory",
        "label",
        "order",
        "length",
        "i",
        "item",
        "previous",
        "next",
        "processMetadata",
        "file",
        "refDir",
        "result",
        "extractMetadata",
        "readFileSync",
        "language",
        "getLanguage",
        "metadata",
        "fieldName",
        "has",
        "console",
        "warn",
        "rawContent",
        "parse",
        "name",
        "includes",
        "Error",
        "subDir",
        "getSubDir",
        "source",
        "basename",
        "title",
        "langPart",
        "translation",
        "useEnglishUrl",
        "versionPart",
        "version",
        "permalink",
        "localized_id",
        "next_id",
        "previous_id",
        "generateMetadataDocs",
        "e",
        "error",
        "exit",
        "enabledLanguages",
        "map",
        "tag",
        "metadatas",
        "defaultMetadatas",
        "docsDir",
        "join",
        "files",
        "sync",
        "extension",
        "extname",
        "res",
        "original_id",
        "filter",
        "currentLanguage",
        "baseMetadata",
        "toString",
        "replace",
        "RegExp",
        "translatedDir",
        "versionData",
        "docData",
        "previous_title",
        "next_title",
        "writeFileSync",
        "__dirname",
        "JSON",
        "stringify",
        "generateMetadataBlog",
        "config",
        "sort",
        "reverse",
        "getMetadata",
        "filePathDateArr",
        "split",
        "date",
        "Date",
        "seconds",
        "Math",
        "round",
        "getTime",
        "sortedMetadatas",
        "a",
        "b",
        "parseInt",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst path = require('path');\nconst fs = require('fs');\nconst glob = require('glob');\nconst program = require('commander');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst blog = require('./blog.js');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst versionFallback = require('./versionFallback.js');\nconst utils = require('./utils.js');\n\nconst docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n\n// Get a list of all IDs that have been deleted in any version.\n// We will assume these should not be in the current/next version.\nconst allDeletedIds = new Set();\nif (siteConfig.deletedDocs) {\n  Object.values(siteConfig.deletedDocs).forEach((idList) => {\n    idList.forEach((id) => allDeletedIds.add(id));\n  });\n}\n\nconst SupportedHeaderFields = new Set([\n  'id',\n  'title',\n  'author',\n  'authorURL',\n  'authorFBID',\n  'sidebar_label',\n  'original_id',\n  'hide_title',\n  'layout',\n  'custom_edit_url',\n  'description',\n]);\n\nlet allSidebars;\nif (fs.existsSync(`${CWD}/sidebars.json`)) {\n  allSidebars = require(`${CWD}/sidebars.json`);\n} else {\n  allSidebars = {};\n}\n\n// Can have a custom docs path. Top level folder still needs to be in directory\n// at the same level as `website`, not inside `website`.\n//   e.g., docs/whereDocsReallyExist\n//         website-docs/\n// All .md docs still (currently) must be in one flat directory hierarchy.\n//   e.g., docs/whereDocsReallyExist/*.md (all .md files in this dir)\nfunction getDocsPath() {\n  return siteConfig.customDocsPath ? siteConfig.customDocsPath : 'docs';\n}\n\nfunction shouldGenerateNextReleaseDocs() {\n  return !(env.versioning.enabled && program.skipNextRelease);\n}\n\n// returns map from id to object containing sidebar ordering info\nfunction readSidebar(sidebars = {}) {\n  Object.assign(sidebars, versionFallback.sidebarData());\n\n  const items = {};\n\n  Object.keys(sidebars).forEach((sidebar) => {\n    const categories = sidebars[sidebar];\n    const sidebarItems = [];\n\n    Object.keys(categories).forEach((category) => {\n      const categoryItems = categories[category];\n      categoryItems.forEach((categoryItem) => {\n        if (typeof categoryItem === 'object') {\n          switch (categoryItem.type) {\n            case 'subcategory':\n              categoryItem.ids.forEach((subcategoryItem) => {\n                sidebarItems.push({\n                  id: subcategoryItem,\n                  category,\n                  subcategory: categoryItem.label,\n                  order: sidebarItems.length + 1,\n                });\n              });\n              return;\n            default:\n              return;\n          }\n        }\n\n        // Is a regular id value.\n        sidebarItems.push({\n          id: categoryItem,\n          category,\n          subcategory: null,\n          order: sidebarItems.length + 1,\n        });\n      });\n    });\n\n    for (let i = 0; i < sidebarItems.length; i++) {\n      const item = sidebarItems[i];\n      let previous = null;\n      let next = null;\n\n      if (i > 0) {\n        previous = sidebarItems[i - 1].id;\n      }\n\n      if (i < sidebarItems.length - 1) {\n        next = sidebarItems[i + 1].id;\n      }\n\n      items[item.id] = {\n        previous,\n        next,\n        sidebar,\n        category: item.category,\n        subcategory: item.subcategory,\n        order: item.order,\n      };\n    }\n  });\n\n  return items;\n}\n\n// process the metadata for a document found in either 'docs' or 'translated_docs'\nfunction processMetadata(file, refDir) {\n  const result = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const language = utils.getLanguage(file, refDir) || 'en';\n\n  const metadata = {};\n  Object.keys(result.metadata).forEach((fieldName) => {\n    if (SupportedHeaderFields.has(fieldName)) {\n      metadata[fieldName] = result.metadata[fieldName];\n    } else {\n      console.warn(`Header field \"${fieldName}\" in ${file} is not supported.`);\n    }\n  });\n\n  const rawContent = result.rawContent;\n\n  if (!metadata.id) {\n    metadata.id = path.parse(file).name;\n  }\n  if (metadata.id.includes('/')) {\n    throw new Error('Document id cannot include \"/\".');\n  }\n\n  // If a file is located in a subdirectory, prepend the subdir to it's ID\n  // Example:\n  //  (file: 'docusaurus/docs/projectA/test.md', ID 'test', refDir: 'docusaurus/docs')\n  //  returns 'projectA/test'\n  const subDir = utils.getSubDir(file, refDir);\n  if (subDir) {\n    metadata.id = `${subDir}/${metadata.id}`;\n  }\n\n  // Example: `docs/projectA/test.md` source is `projectA/test.md`\n  metadata.source = subDir\n    ? `${subDir}/${path.basename(file)}`\n    : path.basename(file);\n\n  if (!metadata.title) {\n    metadata.title = metadata.id;\n  }\n\n  const langPart =\n    env.translation.enabled || siteConfig.useEnglishUrl ? `${language}/` : '';\n  let versionPart = '';\n  if (env.versioning.enabled) {\n    metadata.version = 'next';\n    versionPart = 'next/';\n  }\n\n  metadata.permalink = `${docsPart}${langPart}${versionPart}${metadata.id}.html`;\n\n  // change ids previous, next\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = env.translation.enabled ? language : 'en';\n\n  const items = readSidebar(allSidebars);\n  const id = metadata.localized_id;\n  const item = items[id];\n  if (item) {\n    metadata.sidebar = item.sidebar;\n    metadata.category = item.category;\n    metadata.subcategory = item.subcategory;\n    metadata.order = item.order;\n\n    if (item.next) {\n      metadata.next_id = item.next;\n      metadata.next =\n        (env.translation.enabled ? `${language}-` : '') + item.next;\n    }\n    if (item.previous) {\n      metadata.previous_id = item.previous;\n      metadata.previous =\n        (env.translation.enabled ? `${language}-` : '') + item.previous;\n    }\n  }\n\n  return {metadata, rawContent};\n}\n\n// process metadata for all docs and save into core/metadata.js\nfunction generateMetadataDocs() {\n  let order;\n  try {\n    order = readSidebar(allSidebars);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  const enabledLanguages = env.translation\n    .enabledLanguages()\n    .map((language) => language.tag);\n\n  const metadatas = {};\n  const defaultMetadatas = {};\n\n  if (shouldGenerateNextReleaseDocs()) {\n    // metadata for english files\n    const docsDir = path.join(CWD, '../', getDocsPath());\n    let files = glob.sync(`${docsDir}/**`);\n    files.forEach((file) => {\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, docsDir);\n\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n\n        // create a default list of documents for each enabled language based on docs in English\n        // these will get replaced if/when the localized file is downloaded from crowdin\n        enabledLanguages\n          .filter((currentLanguage) => currentLanguage !== 'en')\n          .forEach((currentLanguage) => {\n            const baseMetadata = Object.assign({}, metadata);\n            baseMetadata.id = baseMetadata.id\n              .toString()\n              .replace(/^en-/, `${currentLanguage}-`);\n            if (baseMetadata.permalink) {\n              baseMetadata.permalink = baseMetadata.permalink\n                .toString()\n                .replace(\n                  new RegExp(`^${docsPart}en/`),\n                  `${docsPart}${currentLanguage}/`,\n                );\n            }\n            if (baseMetadata.next) {\n              baseMetadata.next = baseMetadata.next\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            if (baseMetadata.previous) {\n              baseMetadata.previous = baseMetadata.previous\n                .toString()\n                .replace(/^en-/, `${currentLanguage}-`);\n            }\n            baseMetadata.language = currentLanguage;\n            defaultMetadatas[baseMetadata.id] = baseMetadata;\n          });\n        Object.assign(metadatas, defaultMetadatas);\n      }\n    });\n\n    // metadata for non-english docs\n    const translatedDir = path.join(CWD, 'translated_docs');\n    files = glob.sync(`${CWD}/translated_docs/**`);\n    files.forEach((file) => {\n      if (!utils.getLanguage(file, translatedDir)) {\n        return;\n      }\n\n      const extension = path.extname(file);\n\n      if (extension === '.md' || extension === '.markdown') {\n        const res = processMetadata(file, translatedDir);\n        if (!res) {\n          return;\n        }\n        const metadata = res.metadata;\n        if (\n          allDeletedIds.has(metadata.id) ||\n          (metadata.original_id && allDeletedIds.has(metadata.original_id))\n        ) {\n          return;\n        }\n        metadatas[metadata.id] = metadata;\n      }\n    });\n  }\n\n  // metadata for versioned docs\n  const versionData = versionFallback.docData();\n  versionData.forEach((metadata) => {\n    const id = metadata.localized_id;\n    if (order[id]) {\n      metadata.sidebar = order[id].sidebar;\n      metadata.category = order[id].category;\n      metadata.subcategory = order[id].subcategory;\n      metadata.order = order[id].order;\n\n      if (order[id].next) {\n        metadata.next_id = order[id].next.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.next =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].next;\n      }\n      if (order[id].previous) {\n        metadata.previous_id = order[id].previous.replace(\n          `version-${metadata.version}-`,\n          '',\n        );\n        metadata.previous =\n          (env.translation.enabled ? `${metadata.language}-` : '') +\n          order[id].previous;\n      }\n    }\n    metadatas[metadata.id] = metadata;\n  });\n\n  // Get the titles of the previous and next ids so that we can use them in\n  // navigation buttons in DocsLayout.js\n  Object.keys(metadatas).forEach((metadata) => {\n    if (metadatas[metadata].previous) {\n      if (metadatas[metadatas[metadata].previous]) {\n        metadatas[metadata].previous_title =\n          metadatas[metadatas[metadata].previous].title;\n      } else {\n        metadatas[metadata].previous_title = 'Previous';\n      }\n    }\n    if (metadatas[metadata].next) {\n      if (metadatas[metadatas[metadata].next]) {\n        metadatas[metadata].next_title =\n          metadatas[metadatas[metadata].next].title;\n      } else {\n        metadatas[metadata].next_title = 'Next';\n      }\n    }\n  });\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/metadata.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(metadatas, null, 2)};\\n`,\n  );\n}\n\n// process metadata for blog posts and save into core/MetadataBlog.js\nfunction generateMetadataBlog(config = siteConfig) {\n  const metadatas = [];\n\n  const files = glob.sync(`${CWD}/blog/**/*.*`);\n  files\n    .sort()\n    .reverse()\n    .forEach((file) => {\n      const extension = path.extname(file);\n      if (extension !== '.md' && extension !== '.markdown') {\n        return;\n      }\n      const metadata = blog.getMetadata(file, config);\n      // Extract, YYYY, MM, DD from the file name\n      const filePathDateArr = path.basename(file).split('-');\n      metadata.date = new Date(\n        `${filePathDateArr[0]}-${filePathDateArr[1]}-${filePathDateArr[2]}T06:00:00.000Z`,\n      );\n      // allow easier sorting of blog by providing seconds since epoch\n      metadata.seconds = Math.round(metadata.date.getTime() / 1000);\n\n      metadatas.push(metadata);\n    });\n\n  const sortedMetadatas = metadatas.sort(\n    (a, b) => parseInt(b.seconds, 10) - parseInt(a.seconds, 10),\n  );\n\n  fs.writeFileSync(\n    path.join(__dirname, '/../core/MetadataBlog.js'),\n    `${\n      '/**\\n' +\n      ' * @' +\n      'generated\\n' + // separate this out for Nuclide treating @generated as readonly\n      ' */\\n' +\n      'module.exports = '\n    }${JSON.stringify(sortedMetadatas, null, 2)};\\n`,\n  );\n}\n\nmodule.exports = {\n  getDocsPath,\n  readSidebar,\n  processMetadata,\n  generateMetadataDocs,\n  generateMetadataBlog,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596045545000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/metadataUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/metadataUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/metadataUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/metadataUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "metadataUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  var lines = content.split(/\\r?\\n/);\n\n  if (lines[0] !== '---') {\n    return {};\n  }\n\n  var i = 1;\n\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n')\n  };\n} // Extract markdown metadata header\n\n\nfunction extractMetadata(content) {\n  var metadata = {};\n  var both = splitHeader(content); // if no content returned, then that means there was no header, and both.header is the content\n\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {\n        metadata: metadata,\n        rawContent: content\n      };\n    }\n\n    return {\n      metadata: metadata,\n      rawContent: both.header\n    };\n  } // New line characters => to handle all operating systems.\n\n\n  var lines = both.header.split(/\\r?\\n/); // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n\n  for (var i = 0; i < lines.length - 1; ++i) {\n    var keyvalue = lines[i].split(':');\n    var key = keyvalue[0].trim();\n    var value = keyvalue.slice(1).join(':').trim();\n\n    try {\n      value = JSON.parse(value);\n    } catch (err) {// Ignore the error as it means it's not a JSON value.\n    }\n\n    metadata[key] = value;\n  }\n\n  return {\n    metadata: metadata,\n    rawContent: both.content\n  };\n} // mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\n\n\nfunction mdToHtml(Metadata, siteConfig) {\n  var baseUrl = siteConfig.baseUrl,\n      docsUrl = siteConfig.docsUrl;\n  var result = {};\n  Object.keys(Metadata).forEach(function (id) {\n    var metadata = Metadata[id];\n\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n\n    var htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n    var baseDocsPart = \"\".concat(baseUrl).concat(docsUrl ? \"\".concat(docsUrl, \"/\") : '');\n    var i18nDocsRegex = new RegExp(\"^\".concat(baseDocsPart, \"en/\"));\n    var docsRegex = new RegExp(\"^\".concat(baseDocsPart));\n\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, \"\".concat(baseDocsPart, \"en/VERSION/\"));\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, \"\".concat(baseDocsPart, \"VERSION/\"));\n    }\n\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata: extractMetadata,\n  mdToHtml: mdToHtml\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGFkYXRhVXRpbHMuanMiXSwibmFtZXMiOlsic3BsaXRIZWFkZXIiLCJjb250ZW50IiwibGluZXMiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJoZWFkZXIiLCJzbGljZSIsImpvaW4iLCJleHRyYWN0TWV0YWRhdGEiLCJtZXRhZGF0YSIsImJvdGgiLCJyYXdDb250ZW50Iiwia2V5dmFsdWUiLCJrZXkiLCJ0cmltIiwidmFsdWUiLCJKU09OIiwicGFyc2UiLCJlcnIiLCJtZFRvSHRtbCIsIk1ldGFkYXRhIiwic2l0ZUNvbmZpZyIsImJhc2VVcmwiLCJkb2NzVXJsIiwicmVzdWx0IiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJpZCIsImxhbmd1YWdlIiwib3JpZ2luYWxfaWQiLCJodG1sTGluayIsInBlcm1hbGluayIsInJlcGxhY2UiLCJiYXNlRG9jc1BhcnQiLCJpMThuRG9jc1JlZ2V4IiwiUmVnRXhwIiwiZG9jc1JlZ2V4IiwidGVzdCIsInNvdXJjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQSxTQUFTQSxXQUFULENBQXFCQyxPQUFyQixFQUE4QjtBQUM1QjtBQUNBLE1BQU1DLEtBQUssR0FBR0QsT0FBTyxDQUFDRSxLQUFSLENBQWMsT0FBZCxDQUFkOztBQUNBLE1BQUlELEtBQUssQ0FBQyxDQUFELENBQUwsS0FBYSxLQUFqQixFQUF3QjtBQUN0QixXQUFPLEVBQVA7QUFDRDs7QUFDRCxNQUFJRSxDQUFDLEdBQUcsQ0FBUjs7QUFDQSxTQUFPQSxDQUFDLEdBQUdGLEtBQUssQ0FBQ0csTUFBTixHQUFlLENBQTFCLEVBQTZCLEVBQUVELENBQS9CLEVBQWtDO0FBQ2hDLFFBQUlGLEtBQUssQ0FBQ0UsQ0FBRCxDQUFMLEtBQWEsS0FBakIsRUFBd0I7QUFDdEI7QUFDRDtBQUNGOztBQUNELFNBQU87QUFDTEUsSUFBQUEsTUFBTSxFQUFFSixLQUFLLENBQUNLLEtB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QUFlRixZQUFmLFNBQXRCO0FBQ0EsUUFBTUcsU0FBUyxHQUFHLElBQUlELE1BQUosWUFBZUYsWUFBZixFQUFsQjs7QUFDQSxRQUFJQyxhQUFhLENBQUNHLElBQWQsQ0FBbUJQLFFBQW5CLENBQUosRUFBa0M7QUFDaENBLE1BQUFBLFFBQVEsR0FBR0EsUUFBUSxDQUFDRSxPQUFULENBQWlCRSxhQUFqQixZQUFtQ0QsWUFBbkMsaUJBQVg7QUFDRCxLQUZELE1BRU87QUFDTEgsTUFBQUEsUUFBUSxHQUFHQSxRQUFRLENBQUNFLE9BQVQsQ0FBaUJJLFNBQWpCLFlBQStCSCxZQUEvQixjQUFYO0FBQ0Q7O0FBQ0RWLElBQUFBLE1BQU0sQ0FBQ2YsUUFBUSxDQUFDOEIsTUFBVixDQUFOLEdBQTBCUixRQUExQjtBQUNELEdBakJEO0FBa0JBLFNBQU9QLE1BQVA7QUFDRDs7QUFFRGdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmakMsRUFBQUEsZUFBZSxFQUFmQSxlQURlO0FBRWZXLEVBQUFBLFFBQVEsRUFBUkE7QUFGZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9iZmMvYmZjL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8vIHNwbGl0IG1hcmtkb3duIGhlYWRlclxuZnVuY3Rpb24gc3BsaXRIZWFkZXIoY29udGVudCkge1xuICAvLyBOZXcgbGluZSBjaGFyYWN0ZXJzIG5lZWQgdG8gaGFuZGxlIGFsbCBvcGVyYXRpbmcgc3lzdGVtcy5cbiAgY29uc3QgbGluZXMgPSBjb250ZW50LnNwbGl0KC9cXHI/XFxuLyk7XG4gIGlmIChsaW5lc1swXSAhPT0gJy0tLScpIHtcbiAgICByZXR1cm4ge307XG4gIH1cbiAgbGV0IGkgPSAxO1xuICBmb3IgKDsgaSA8IGxpbmVzLmxlbmd0aCAtIDE7ICsraSkge1xuICAgIGlmIChsaW5lc1tpXSA9PT0gJy0tLScpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4ge1xuICAgIGhlYWRlcjogbGluZXMuc2xpY2UoMSwgaSArIDEpLmpvaW4oJ1xcbicpLFxuICAgIGNvbnRlbnQ6IGxpbmVzLnNsaWNlKGkgKyAxKS5qb2luKCdcXG4nKSxcbiAgfTtcbn1cblxuLy8gRXh0cmFjdCBtYXJrZG93biBtZXRhZGF0YSBoZWFkZXJcbmZ1bmN0aW9uIGV4dHJhY3RNZXRhZGF0YShjb250ZW50KSB7XG4gIGNvbnN0IG1ldGFkYXRhID0ge307XG4gIGNvbnN0IGJvdGggPSBzcGxpdEhlYWRlcihjb250ZW50KTtcblxuICAvLyBpZiBubyBjb250ZW50IHJldHVybmVkLCB0aGVuIHRoYXQgbWVhbnMgdGhlcmUgd2FzIG5vIGhlYWRlciwgYW5kIGJvdGguaGVhZGVyIGlzIHRoZSBjb250ZW50XG4gIGlmICghYm90aC5jb250ZW50KSB7XG4gICAgaWYgKCFib3RoLmhlYWRlcikge1xuICAgICAgLy8gaWYgbm8gYm90aCByZXR1cm5lZCwgdGhlbiB0aGF0IG1lYW5zIHRoZXJlIHdhcyBubyBoZWFkZXIgYW5kIG5vIGNvbnRlbnQgPT4gd2UgcmV0dXJuIHRoZSBjdXJyZW50IGNvbnRlbnQgb2YgdGhlIGZpbGVcbiAgICAgIHJldHVybiB7bWV0YWRhdGEsIHJhd0NvbnRlbnQ6IGNvbnRlbnR9O1xuICAgIH1cbiAgICByZXR1cm4ge21ldGFkYXRhLCByYXdDb250ZW50OiBib3RoLmhlYWRlcn07XG4gIH1cblxuICAvLyBOZXcgbGluZSBjaGFyYWN0ZXJzID0+IHRvIGhhbmRsZSBhbGwgb3BlcmF0aW5nIHN5c3RlbXMuXG4gIGNvbnN0IGxpbmVzID0gYm90aC5oZWFkZXIuc3BsaXQoL1xccj9cXG4vKTtcblxuICAvLyBMb29wIHRoYXQgYWRkIHRvIG1ldGFkYXRhIHRoZSBjdXJyZW50IGNvbnRlbnQgb2YgdGhlIGZpZWxkcyBvZiB0aGUgaGVhZGVyXG4gIC8vIExpa2UgdGhlIGZvcm1hdDpcbiAgLy8gaWQ6XG4gIC8vIHRpdGxlOlxuICAvLyBvcmlnaW5hbF9pZDpcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGggLSAxOyArK2kpIHtcbiAgICBjb25zdCBrZXl2YWx1ZSA9IGxpbmVzW2ldLnNwbGl0KCc6Jyk7XG4gICAgY29uc3Qga2V5ID0ga2V5dmFsdWVbMF0udHJpbSgpO1xuICAgIGxldCB2YWx1ZSA9IGtleXZhbHVlLnNsaWNlKDEpLmpvaW4oJzonKS50cmltKCk7XG4gICAgdHJ5IHtcbiAgICAgIHZhbHVlID0gSlNPTi5wYXJzZSh2YWx1ZSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAvLyBJZ25vcmUgdGhlIGVycm9yIGFzIGl0IG1lYW5zIGl0J3Mgbm90IGEgSlNPTiB2YWx1ZS5cbiAgICB9XG4gICAgbWV0YWRhdGFba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB7bWV0YWRhdGEsIHJhd0NvbnRlbnQ6IGJvdGguY29udGVudH07XG59XG5cbi8vIG1kVG9IdG1sIGlzIGEgbWFwIGZyb20gYSBtYXJrZG93biBmaWxlIG5hbWUgdG8gaXRzIGh0bWwgbGluaywgdXNlZCB0b1xuLy8gY2hhbmdlIHJlbGF0aXZlIG1hcmtkb3duIGxpbmtzIHRoYXQgd29yayBvbiBHaXRIdWIgaW50byBhY3R1YWwgc2l0ZSBsaW5rc1xuZnVuY3Rpb24gbWRUb0h0bWwoTWV0YWRhdGEsIHNpdGVDb25maWcpIHtcbiAgY29uc3Qge2Jhc2VVcmwsIGRvY3NVcmx9ID0gc2l0ZUNvbmZpZztcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIE9iamVjdC5rZXlzKE1ldGFkYXRhKS5mb3JFYWNoKChpZCkgPT4ge1xuICAgIGNvbnN0IG1ldGFkYXRhID0gTWV0YWRhdGFbaWRdO1xuICAgIGlmIChtZXRhZGF0YS5sYW5ndWFnZSAhPT0gJ2VuJyB8fCBtZXRhZGF0YS5vcmlnaW5hbF9pZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgaHRtbExpbmsgPSBiYXNlVXJsICsgbWV0YWRhdGEucGVybWFsaW5rLnJlcGxhY2UoJy9uZXh0LycsICcvJyk7XG5cbiAgICBjb25zdCBiYXNlRG9jc1BhcnQgPSBgJHtiYXNlVXJsfSR7ZG9jc1VybCA/IGAke2RvY3NVcmx9L2AgOiAnJ31gO1xuXG4gICAgY29uc3QgaTE4bkRvY3NSZWdleCA9IG5ldyBSZWdFeHAoYF4ke2Jhc2VEb2NzUGFydH1lbi9gKTtcbiAgICBjb25zdCBkb2NzUmVnZXggPSBuZXcgUmVnRXhwKGBeJHtiYXNlRG9jc1BhcnR9YCk7XG4gICAgaWYgKGkxOG5Eb2NzUmVnZXgudGVzdChodG1sTGluaykpIHtcbiAgICAgIGh0bWxMaW5rID0gaHRtbExpbmsucmVwbGFjZShpMThuRG9jc1JlZ2V4LCBgJHtiYXNlRG9jc1BhcnR9ZW4vVkVSU0lPTi9gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaHRtbExpbmsgPSBodG1sTGluay5yZXBsYWNlKGRvY3NSZWdleCwgYCR7YmFzZURvY3NQYXJ0fVZFUlNJT04vYCk7XG4gICAgfVxuICAgIHJlc3VsdFttZXRhZGF0YS5zb3VyY2VdID0gaHRtbExpbms7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZXh0cmFjdE1ldGFkYXRhLFxuICBtZFRvSHRtbCxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "metadataUtils.js"
      ],
      "names": [
        "splitHeader",
        "content",
        "lines",
        "split",
        "i",
        "length",
        "header",
        "slice",
        "join",
        "extractMetadata",
        "metadata",
        "both",
        "rawContent",
        "keyvalue",
        "key",
        "trim",
        "value",
        "JSON",
        "parse",
        "err",
        "mdToHtml",
        "Metadata",
        "siteConfig",
        "baseUrl",
        "docsUrl",
        "result",
        "Object",
        "keys",
        "forEach",
        "id",
        "language",
        "original_id",
        "htmlLink",
        "permalink",
        "replace",
        "baseDocsPart",
        "i18nDocsRegex",
        "RegExp",
        "docsRegex",
        "test",
        "source",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// split markdown header\nfunction splitHeader(content) {\n  // New line characters need to handle all operating systems.\n  const lines = content.split(/\\r?\\n/);\n  if (lines[0] !== '---') {\n    return {};\n  }\n  let i = 1;\n  for (; i < lines.length - 1; ++i) {\n    if (lines[i] === '---') {\n      break;\n    }\n  }\n  return {\n    header: lines.slice(1, i + 1).join('\\n'),\n    content: lines.slice(i + 1).join('\\n'),\n  };\n}\n\n// Extract markdown metadata header\nfunction extractMetadata(content) {\n  const metadata = {};\n  const both = splitHeader(content);\n\n  // if no content returned, then that means there was no header, and both.header is the content\n  if (!both.content) {\n    if (!both.header) {\n      // if no both returned, then that means there was no header and no content => we return the current content of the file\n      return {metadata, rawContent: content};\n    }\n    return {metadata, rawContent: both.header};\n  }\n\n  // New line characters => to handle all operating systems.\n  const lines = both.header.split(/\\r?\\n/);\n\n  // Loop that add to metadata the current content of the fields of the header\n  // Like the format:\n  // id:\n  // title:\n  // original_id:\n  for (let i = 0; i < lines.length - 1; ++i) {\n    const keyvalue = lines[i].split(':');\n    const key = keyvalue[0].trim();\n    let value = keyvalue.slice(1).join(':').trim();\n    try {\n      value = JSON.parse(value);\n    } catch (err) {\n      // Ignore the error as it means it's not a JSON value.\n    }\n    metadata[key] = value;\n  }\n  return {metadata, rawContent: both.content};\n}\n\n// mdToHtml is a map from a markdown file name to its html link, used to\n// change relative markdown links that work on GitHub into actual site links\nfunction mdToHtml(Metadata, siteConfig) {\n  const {baseUrl, docsUrl} = siteConfig;\n  const result = {};\n  Object.keys(Metadata).forEach((id) => {\n    const metadata = Metadata[id];\n    if (metadata.language !== 'en' || metadata.original_id) {\n      return;\n    }\n    let htmlLink = baseUrl + metadata.permalink.replace('/next/', '/');\n\n    const baseDocsPart = `${baseUrl}${docsUrl ? `${docsUrl}/` : ''}`;\n\n    const i18nDocsRegex = new RegExp(`^${baseDocsPart}en/`);\n    const docsRegex = new RegExp(`^${baseDocsPart}`);\n    if (i18nDocsRegex.test(htmlLink)) {\n      htmlLink = htmlLink.replace(i18nDocsRegex, `${baseDocsPart}en/VERSION/`);\n    } else {\n      htmlLink = htmlLink.replace(docsRegex, `${baseDocsPart}VERSION/`);\n    }\n    result[metadata.source] = htmlLink;\n  });\n  return result;\n}\n\nmodule.exports = {\n  extractMetadata,\n  mdToHtml,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/env.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/env.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/env.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/env.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "env.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar fs = require('fs-extra');\n\nvar path = require('path');\n\nvar chalk = require('chalk');\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar join = path.join;\nvar languagesFile = join(CWD, 'languages.js');\nvar versionsJSONFile = join(CWD, 'versions.json');\nvar versionsFile = join(CWD, 'pages/en/versions.js');\n\nvar Translation = /*#__PURE__*/function () {\n  function Translation() {\n    var _this = this;\n\n    _classCallCheck(this, Translation);\n\n    _defineProperty(this, \"enabledLanguages\", function () {\n      return _this.languages.filter(function (lang) {\n        return lang.enabled;\n      });\n    });\n\n    this.enabled = false;\n    this.languages = [{\n      enabled: true,\n      name: 'English',\n      tag: 'en'\n    }];\n    this.load();\n  }\n\n  _createClass(Translation, [{\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(languagesFile)) {\n        this.enabled = true;\n        this.languages = require(languagesFile);\n      }\n    }\n  }]);\n\n  return Translation;\n}();\n\nvar Versioning = /*#__PURE__*/function () {\n  function Versioning() {\n    _classCallCheck(this, Versioning);\n\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n    this.load();\n  }\n\n  _createClass(Versioning, [{\n    key: \"printMissingVersionsPageError\",\n    value: function printMissingVersionsPageError() {\n      console.error(\"\".concat(chalk.yellow('No versions.js file found!')) + \"\\nYou should create your versions.js file in pages/en directory.\" + \"\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.\");\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      if (fs.existsSync(versionsJSONFile)) {\n        this.enabled = true;\n        this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n        this.latestVersion = this.versions[0];\n        this.defaultVersion = siteConfig.defaultVersionShown ? siteConfig.defaultVersionShown : this.latestVersion; // otherwise show the latest version (other than next/master)\n      }\n\n      if (!fs.existsSync(versionsFile)) {\n        this.missingVersionsPage = true;\n      }\n    }\n  }]);\n\n  return Versioning;\n}();\n\nvar env = {\n  translation: new Translation(),\n  versioning: new Versioning()\n};\nmodule.exports = env;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudi5qcyJdLCJuYW1lcyI6WyJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZnMiLCJyZXF1aXJlIiwicGF0aCIsImNoYWxrIiwic2l0ZUNvbmZpZyIsImpvaW4iLCJsYW5ndWFnZXNGaWxlIiwidmVyc2lvbnNKU09ORmlsZSIsInZlcnNpb25zRmlsZSIsIlRyYW5zbGF0aW9uIiwibGFuZ3VhZ2VzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwibG9hZCIsImV4aXN0c1N5bmMiLCJWZXJzaW9uaW5nIiwibGF0ZXN0VmVyc2lvbiIsImRlZmF1bHRWZXJzaW9uIiwidmVyc2lvbnMiLCJtaXNzaW5nVmVyc2lvbnNQYWdlIiwiY29uc29sZSIsImVycm9yIiwieWVsbG93IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiZGVmYXVsdFZlcnNpb25TaG93biIsImVudiIsInRyYW5zbGF0aW9uIiwidmVyc2lvbmluZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUNBLElBQU1DLEVBQUUsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRSxLQUFLLEdBQUdGLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLElBQU1HLFVBQVUsR0FBR0gsT0FBTyxXQUFJSixHQUFKLG9CQUExQjs7QUFFQSxJQUFNUSxJQUFJLEdBQUdILElBQUksQ0FBQ0csSUFBbEI7QUFFQSxJQUFNQyxhQUFhLEdBQUdELElBQUksQ0FBQ1IsR0FBRCxFQUFNLGNBQU4sQ0FBMUI7QUFDQSxJQUFNVSxnQkFBZ0IsR0FBR0YsSUFBSSxDQUFDUixHQUFELEVBQU0sZUFBTixDQUE3QjtBQUNBLElBQU1XLFlBQVksR0FBR0gsSUFBSSxDQUFDUixHQUFELEVBQU0sc0JBQU4sQ0FBekI7O0lBRU1ZLFc7QUFDSix5QkFBYztBQUFBOztBQUFBOztBQUFBLDhDQWFLO0FBQUEsYUFBTSxLQUFJLENBQUNDLFNBQUwsQ0FBZUMsTUFBZixDQUFzQixVQUFDQyxJQUFEO0FBQUEsZUFBVUEsSUFBSSxDQUFDQyxPQUFmO0FBQUEsT0FBdEIsQ0FBTjtBQUFBLEtBYkw7O0FBQ1osU0FBS0EsT0FBTCxHQUFlLEtBQWY7QUFDQSxTQUFLSCxTQUFMLEdBQWlCLENBQ2Y7QUFDRUcsTUFBQUEsT0FBTyxFQUFFLElBRFg7QUFFRUMsTUFBQUEsSUFBSSxFQUFFLFNBRlI7QUFHRUMsTUFBQUEsR0FBRyxFQUFFO0FBSFAsS0FEZSxDQUFqQjtBQVFBLFNBQUtDLElBQUw7QUFDRDs7OzsyQkFJTTtBQUNMLFVBQUloQixFQUFFLENBQUNpQixVQUFILENBQWNYLGFBQWQsQ0FBSixFQUFrQztBQUNoQyxhQUFLTyxPQUFMLEdBQWUsSUFBZjtBQUNBLGFBQUtILFNBQUwsR0FBaUJULE9BQU8sQ0FBQ0ssYUFBRCxDQUF4QjtBQUNEO0FBQ0Y7Ozs7OztJQUdHWSxVO0FBQ0osd0JBQWM7QUFBQTs7QUFDWixTQUFLTCxPQUFMLEdBQWUsS0FBZjtBQUNBLFNBQUtNLGFBQUwsR0FBcUIsSUFBckI7QUFDQSxTQUFLQyxjQUFMLEdBQXNCLElBQXRCO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNBLFNBQUtDLG1CQUFMLEdBQTJCLEtBQTNCO0FBRUEsU0FBS04sSUFBTDtBQUNEOzs7O29EQUUrQjtBQUM5Qk8sTUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQ0UsVUFBR3JCLEtBQUssQ0FBQ3NCLE1BQU4sQ0FBYSw0QkFBYixDQUFILDJJQURGO0FBS0Q7OzsyQkFFTTtBQUNMLFVBQUl6QixFQUFFLENBQUNpQixVQUFILENBQWNWLGdCQUFkLENBQUosRUFBcUM7QUFDbkMsYUFBS00sT0FBTCxHQUFlLElBQWY7QUFDQSxhQUFLUSxRQUFMLEdBQWdCSyxJQUFJLENBQUNDLEtBQUwsQ0FBVzNCLEVBQUUsQ0FBQzRCLFlBQUgsQ0FBZ0JyQixnQkFBaEIsRUFBa0MsTUFBbEMsQ0FBWCxDQUFoQjtBQUNBLGFBQUtZLGFBQUwsR0FBcUIsS0FBS0UsUUFBTCxDQUFjLENBQWQsQ0FBckI7QUFDQSxhQUFLRCxjQUFMLEdBQXNCaEIsVUFBVSxDQUFDeUIsbUJBQVgsR0FDbEJ6QixVQUFVLENBQUN5QixtQkFETyxHQUVsQixLQUFLVixhQUZULENBSm1DLENBTVg7QUFDekI7O0FBRUQsVUFBSSxDQUFDbkIsRUFBRSxDQUFDaUIsVUFBSCxDQUFjVCxZQUFkLENBQUwsRUFBa0M7QUFDaEMsYUFBS2MsbUJBQUwsR0FBMkIsSUFBM0I7QUFDRDtBQUNGOzs7Ozs7QUFHSCxJQUFNUSxHQUFHLEdBQUc7QUFDVkMsRUFBQUEsV0FBVyxFQUFFLElBQUl0QixXQUFKLEVBREg7QUFFVnVCLEVBQUFBLFVBQVUsRUFBRSxJQUFJZCxVQUFKO0FBRkYsQ0FBWjtBQUtBZSxNQUFNLENBQUNDLE9BQVAsR0FBaUJKLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBjaGFsayA9IHJlcXVpcmUoJ2NoYWxrJyk7XG5cbmNvbnN0IHNpdGVDb25maWcgPSByZXF1aXJlKGAke0NXRH0vc2l0ZUNvbmZpZy5qc2ApO1xuXG5jb25zdCBqb2luID0gcGF0aC5qb2luO1xuXG5jb25zdCBsYW5ndWFnZXNGaWxlID0gam9pbihDV0QsICdsYW5ndWFnZXMuanMnKTtcbmNvbnN0IHZlcnNpb25zSlNPTkZpbGUgPSBqb2luKENXRCwgJ3ZlcnNpb25zLmpzb24nKTtcbmNvbnN0IHZlcnNpb25zRmlsZSA9IGpvaW4oQ1dELCAncGFnZXMvZW4vdmVyc2lvbnMuanMnKTtcblxuY2xhc3MgVHJhbnNsYXRpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVuYWJsZWQgPSBmYWxzZTtcbiAgICB0aGlzLmxhbmd1YWdlcyA9IFtcbiAgICAgIHtcbiAgICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICAgICAgbmFtZTogJ0VuZ2xpc2gnLFxuICAgICAgICB0YWc6ICdlbicsXG4gICAgICB9LFxuICAgIF07XG5cbiAgICB0aGlzLmxvYWQoKTtcbiAgfVxuXG4gIGVuYWJsZWRMYW5ndWFnZXMgPSAoKSA9PiB0aGlzLmxhbmd1YWdlcy5maWx0ZXIoKGxhbmcpID0+IGxhbmcuZW5hYmxlZCk7XG5cbiAgbG9hZCgpIHtcbiAgICBpZiAoZnMuZXhpc3RzU3luYyhsYW5ndWFnZXNGaWxlKSkge1xuICAgICAgdGhpcy5lbmFibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMubGFuZ3VhZ2VzID0gcmVxdWlyZShsYW5ndWFnZXNGaWxlKTtcbiAgICB9XG4gIH1cbn1cblxuY2xhc3MgVmVyc2lvbmluZyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZW5hYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMubGF0ZXN0VmVyc2lvbiA9IG51bGw7XG4gICAgdGhpcy5kZWZhdWx0VmVyc2lvbiA9IG51bGw7XG4gICAgdGhpcy52ZXJzaW9ucyA9IFtdO1xuICAgIHRoaXMubWlzc2luZ1ZlcnNpb25zUGFnZSA9IGZhbHNlO1xuXG4gICAgdGhpcy5sb2FkKCk7XG4gIH1cblxuICBwcmludE1pc3NpbmdWZXJzaW9uc1BhZ2VFcnJvcigpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgYCR7Y2hhbGsueWVsbG93KCdObyB2ZXJzaW9ucy5qcyBmaWxlIGZvdW5kIScpfWAgK1xuICAgICAgICBgXFxuWW91IHNob3VsZCBjcmVhdGUgeW91ciB2ZXJzaW9ucy5qcyBmaWxlIGluIHBhZ2VzL2VuIGRpcmVjdG9yeS5gICtcbiAgICAgICAgYFxcblBsZWFzZSByZWZlciB0byBodHRwczovL2RvY3VzYXVydXMuaW8vZG9jcy9lbi92ZXJzaW9uaW5nLmh0bWwuYCxcbiAgICApO1xuICB9XG5cbiAgbG9hZCgpIHtcbiAgICBpZiAoZnMuZXhpc3RzU3luYyh2ZXJzaW9uc0pTT05GaWxlKSkge1xuICAgICAgdGhpcy5lbmFibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMudmVyc2lvbnMgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyh2ZXJzaW9uc0pTT05GaWxlLCAndXRmOCcpKTtcbiAgICAgIHRoaXMubGF0ZXN0VmVyc2lvbiA9IHRoaXMudmVyc2lvbnNbMF07XG4gICAgICB0aGlzLmRlZmF1bHRWZXJzaW9uID0gc2l0ZUNvbmZpZy5kZWZhdWx0VmVyc2lvblNob3duXG4gICAgICAgID8gc2l0ZUNvbmZpZy5kZWZhdWx0VmVyc2lvblNob3duXG4gICAgICAgIDogdGhpcy5sYXRlc3RWZXJzaW9uOyAvLyBvdGhlcndpc2Ugc2hvdyB0aGUgbGF0ZXN0IHZlcnNpb24gKG90aGVyIHRoYW4gbmV4dC9tYXN0ZXIpXG4gICAgfVxuXG4gICAgaWYgKCFmcy5leGlzdHNTeW5jKHZlcnNpb25zRmlsZSkpIHtcbiAgICAgIHRoaXMubWlzc2luZ1ZlcnNpb25zUGFnZSA9IHRydWU7XG4gICAgfVxuICB9XG59XG5cbmNvbnN0IGVudiA9IHtcbiAgdHJhbnNsYXRpb246IG5ldyBUcmFuc2xhdGlvbigpLFxuICB2ZXJzaW9uaW5nOiBuZXcgVmVyc2lvbmluZygpLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbnY7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "env.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "path",
        "chalk",
        "siteConfig",
        "join",
        "languagesFile",
        "versionsJSONFile",
        "versionsFile",
        "Translation",
        "languages",
        "filter",
        "lang",
        "enabled",
        "name",
        "tag",
        "load",
        "existsSync",
        "Versioning",
        "latestVersion",
        "defaultVersion",
        "versions",
        "missingVersionsPage",
        "console",
        "error",
        "yellow",
        "JSON",
        "parse",
        "readFileSync",
        "defaultVersionShown",
        "env",
        "translation",
        "versioning",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMG,UAAU,GAAGH,OAAO,WAAIJ,GAAJ,oBAA1B;;AAEA,IAAMQ,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEA,IAAMC,aAAa,GAAGD,IAAI,CAACR,GAAD,EAAM,cAAN,CAA1B;AACA,IAAMU,gBAAgB,GAAGF,IAAI,CAACR,GAAD,EAAM,eAAN,CAA7B;AACA,IAAMW,YAAY,GAAGH,IAAI,CAACR,GAAD,EAAM,sBAAN,CAAzB;;IAEMY,W;AACJ,yBAAc;AAAA;;AAAA;;AAAA,8CAaK;AAAA,aAAM,KAAI,CAACC,SAAL,CAAeC,MAAf,CAAsB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,OAAf;AAAA,OAAtB,CAAN;AAAA,KAbL;;AACZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKH,SAAL,GAAiB,CACf;AACEG,MAAAA,OAAO,EAAE,IADX;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,GAAG,EAAE;AAHP,KADe,CAAjB;AAQA,SAAKC,IAAL;AACD;;;;2BAIM;AACL,UAAIhB,EAAE,CAACiB,UAAH,CAAcX,aAAd,CAAJ,EAAkC;AAChC,aAAKO,OAAL,GAAe,IAAf;AACA,aAAKH,SAAL,GAAiBT,OAAO,CAACK,aAAD,CAAxB;AACD;AACF;;;;;;IAGGY,U;AACJ,wBAAc;AAAA;;AACZ,SAAKL,OAAL,GAAe,KAAf;AACA,SAAKM,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,mBAAL,GAA2B,KAA3B;AAEA,SAAKN,IAAL;AACD;;;;oDAE+B;AAC9BO,MAAAA,OAAO,CAACC,KAAR,CACE,UAAGrB,KAAK,CAACsB,MAAN,CAAa,4BAAb,CAAH,2IADF;AAKD;;;2BAEM;AACL,UAAIzB,EAAE,CAACiB,UAAH,CAAcV,gBAAd,CAAJ,EAAqC;AACnC,aAAKM,OAAL,GAAe,IAAf;AACA,aAAKQ,QAAL,GAAgBK,IAAI,CAACC,KAAL,CAAW3B,EAAE,CAAC4B,YAAH,CAAgBrB,gBAAhB,EAAkC,MAAlC,CAAX,CAAhB;AACA,aAAKY,aAAL,GAAqB,KAAKE,QAAL,CAAc,CAAd,CAArB;AACA,aAAKD,cAAL,GAAsBhB,UAAU,CAACyB,mBAAX,GAClBzB,UAAU,CAACyB,mBADO,GAElB,KAAKV,aAFT,CAJmC,CAMX;AACzB;;AAED,UAAI,CAACnB,EAAE,CAACiB,UAAH,CAAcT,YAAd,CAAL,EAAkC;AAChC,aAAKc,mBAAL,GAA2B,IAA3B;AACD;AACF;;;;;;AAGH,IAAMQ,GAAG,GAAG;AACVC,EAAAA,WAAW,EAAE,IAAItB,WAAJ,EADH;AAEVuB,EAAAA,UAAU,EAAE,IAAId,UAAJ;AAFF,CAAZ;AAKAe,MAAM,CAACC,OAAP,GAAiBJ,GAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\n\nconst siteConfig = require(`${CWD}/siteConfig.js`);\n\nconst join = path.join;\n\nconst languagesFile = join(CWD, 'languages.js');\nconst versionsJSONFile = join(CWD, 'versions.json');\nconst versionsFile = join(CWD, 'pages/en/versions.js');\n\nclass Translation {\n  constructor() {\n    this.enabled = false;\n    this.languages = [\n      {\n        enabled: true,\n        name: 'English',\n        tag: 'en',\n      },\n    ];\n\n    this.load();\n  }\n\n  enabledLanguages = () => this.languages.filter((lang) => lang.enabled);\n\n  load() {\n    if (fs.existsSync(languagesFile)) {\n      this.enabled = true;\n      this.languages = require(languagesFile);\n    }\n  }\n}\n\nclass Versioning {\n  constructor() {\n    this.enabled = false;\n    this.latestVersion = null;\n    this.defaultVersion = null;\n    this.versions = [];\n    this.missingVersionsPage = false;\n\n    this.load();\n  }\n\n  printMissingVersionsPageError() {\n    console.error(\n      `${chalk.yellow('No versions.js file found!')}` +\n        `\\nYou should create your versions.js file in pages/en directory.` +\n        `\\nPlease refer to https://docusaurus.io/docs/en/versioning.html.`,\n    );\n  }\n\n  load() {\n    if (fs.existsSync(versionsJSONFile)) {\n      this.enabled = true;\n      this.versions = JSON.parse(fs.readFileSync(versionsJSONFile, 'utf8'));\n      this.latestVersion = this.versions[0];\n      this.defaultVersion = siteConfig.defaultVersionShown\n        ? siteConfig.defaultVersionShown\n        : this.latestVersion; // otherwise show the latest version (other than next/master)\n    }\n\n    if (!fs.existsSync(versionsFile)) {\n      this.missingVersionsPage = true;\n    }\n  }\n}\n\nconst env = {\n  translation: new Translation(),\n  versioning: new Versioning(),\n};\n\nmodule.exports = env;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/blog.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/blog.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/blog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/blog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "blog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar path = require('path');\n\nvar fs = require('fs-extra');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar _require = require('./utils.js'),\n    replaceAssetsLink = _require.replaceAssetsLink;\n\nvar _require2 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require2.renderToStaticMarkupWithDoctype;\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n\n  return path.basename(file).replace('-', '/').replace('-', '/').replace('-', '/').replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  var BlogPageLayout = require('../core/BlogPageLayout.js');\n\n  var blogPages = {};\n  var perPage = 10;\n\n  for (var page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    var metadata = {\n      page: page,\n      perPage: perPage\n    };\n    var blogPageComp = /*#__PURE__*/React.createElement(BlogPageLayout, {\n      metadata: metadata,\n      language: \"en\",\n      config: siteConfig\n    });\n    var str = renderToStaticMarkupWithDoctype(blogPageComp);\n    var pagePath = \"\".concat(page > 0 ? \"page\".concat(page + 1) : '', \"/index.html\");\n    blogPages[pagePath] = str;\n  }\n\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n\n  var result = metadataUtils.extractMetadata(fs.readFileSync(file, {\n    encoding: 'utf8'\n  }));\n  var metadata = Object.assign({\n    path: fileToUrl(file),\n    content: replaceAssetsLink(result.rawContent, \"\".concat(siteConfig.baseUrl, \"blog\"))\n  }, result.metadata);\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  var metadata = getMetadata(file, siteConfig);\n\n  if (!metadata) {\n    return null;\n  }\n\n  var BlogPostLayout = require('../core/BlogPostLayout.js');\n\n  var blogPostComp = /*#__PURE__*/React.createElement(BlogPostLayout, {\n    metadata: metadata,\n    language: \"en\",\n    config: siteConfig\n  }, metadata.content);\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl: fileToUrl,\n  getMetadata: getMetadata,\n  getPagesMarkup: getPagesMarkup,\n  getPostMarkup: getPostMarkup,\n  urlToSource: urlToSource\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2cuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicGF0aCIsImZzIiwibWV0YWRhdGFVdGlscyIsInJlcGxhY2VBc3NldHNMaW5rIiwicmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZSIsInVybFRvU291cmNlIiwidXJsIiwicmVwbGFjZSIsImZpbGVUb1VybCIsImZpbGUiLCJleGlzdHNTeW5jIiwiYmFzZW5hbWUiLCJnZXRQYWdlc01hcmt1cCIsIm51bU9mQmxvZyIsInNpdGVDb25maWciLCJCbG9nUGFnZUxheW91dCIsImJsb2dQYWdlcyIsInBlclBhZ2UiLCJwYWdlIiwiTWF0aCIsImNlaWwiLCJtZXRhZGF0YSIsImJsb2dQYWdlQ29tcCIsInN0ciIsInBhZ2VQYXRoIiwiZ2V0TWV0YWRhdGEiLCJyZXN1bHQiLCJleHRyYWN0TWV0YWRhdGEiLCJyZWFkRmlsZVN5bmMiLCJlbmNvZGluZyIsIk9iamVjdCIsImFzc2lnbiIsImNvbnRlbnQiLCJyYXdDb250ZW50IiwiYmFzZVVybCIsImlkIiwidGl0bGUiLCJnZXRQb3N0TWFya3VwIiwiQmxvZ1Bvc3RMYXlvdXQiLCJibG9nUG9zdENvbXAiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRSxFQUFFLEdBQUdGLE9BQU8sQ0FBQyxVQUFELENBQWxCOztBQUNBLElBQU1HLGFBQWEsR0FBR0gsT0FBTyxDQUFDLGlCQUFELENBQTdCOztlQUM0QkEsT0FBTyxDQUFDLFlBQUQsQztJQUE1QkksaUIsWUFBQUEsaUI7O2dCQUNtQ0osT0FBTyxDQUFDLGVBQUQsQztJQUExQ0ssK0IsYUFBQUEsK0I7O0FBRVAsU0FBU0MsV0FBVCxDQUFxQkMsR0FBckIs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QU1PLFFBQVEsR0FBR0ksV0FBVyxDQUFDaEIsSUFBRCxFQUFPSyxVQUFQLENBQTVCOztBQUNBLE1BQUksQ0FBQ08sUUFBTCxFQUFlO0FBQ2IsV0FBTyxJQUFQO0FBQ0Q7O0FBQ0QsTUFBTWlCLGNBQWMsR0FBR3ZDLE9BQU8sQ0FBQywyQkFBRCxDQUE5Qjs7QUFDQSxNQUFNd0MsWUFBWSxnQkFDaEIsb0JBQUMsY0FBRDtBQUFnQixJQUFBLFFBQVEsRUFBRWxCLFFBQTFCO0FBQW9DLElBQUEsUUFBUSxFQUFDLElBQTdDO0FBQWtELElBQUEsTUFBTSxFQUFFUDtBQUExRCxLQUNHTyxRQUFRLENBQUNXLE9BRFosQ0FERjtBQUtBLFNBQU81QiwrQkFBK0IsQ0FBQ21DLFlBQUQsQ0FBdEM7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZqQyxFQUFBQSxTQUFTLEVBQVRBLFNBRGU7QUFFZmlCLEVBQUFBLFdBQVcsRUFBWEEsV0FGZTtBQUdmYixFQUFBQSxjQUFjLEVBQWRBLGNBSGU7QUFJZnlCLEVBQUFBLGFBQWEsRUFBYkEsYUFKZTtBQUtmaEMsRUFBQUEsV0FBVyxFQUFYQTtBQUxlLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcbmNvbnN0IG1ldGFkYXRhVXRpbHMgPSByZXF1aXJlKCcuL21ldGFkYXRhVXRpbHMnKTtcbmNvbnN0IHtyZXBsYWNlQXNzZXRzTGlua30gPSByZXF1aXJlKCcuL3V0aWxzLmpzJyk7XG5jb25zdCB7cmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZX0gPSByZXF1aXJlKCcuL3JlbmRlclV0aWxzJyk7XG5cbmZ1bmN0aW9uIHVybFRvU291cmNlKHVybCkge1xuICBpZiAoIXVybCB8fCB0eXBlb2YgdXJsICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiB1cmwucmVwbGFjZSgvKFxcL2luZGV4KT9cXC5odG1sJC8sICcubWQnKS5yZXBsYWNlKC9cXC8vZywgJy0nKTtcbn1cblxuZnVuY3Rpb24gZmlsZVRvVXJsKGZpbGUpIHtcbiAgaWYgKCFmaWxlIHx8ICFmcy5leGlzdHNTeW5jKGZpbGUpIHx8IHR5cGVvZiBmaWxlICE9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHJldHVybiBwYXRoXG4gICAgLmJhc2VuYW1lKGZpbGUpXG4gICAgLnJlcGxhY2UoJy0nLCAnLycpXG4gICAgLnJlcGxhY2UoJy0nLCAnLycpXG4gICAgLnJlcGxhY2UoJy0nLCAnLycpXG4gICAgLnJlcGxhY2UoL1xcLm1kJC8sICcuaHRtbCcpO1xufVxuXG5mdW5jdGlvbiBnZXRQYWdlc01hcmt1cChudW1PZkJsb2csIHNpdGVDb25maWcpIHtcbiAgY29uc3QgQmxvZ1BhZ2VMYXlvdXQgPSByZXF1aXJlKCcuLi9jb3JlL0Jsb2dQYWdlTGF5b3V0LmpzJyk7XG4gIGNvbnN0IGJsb2dQYWdlcyA9IHt9O1xuICBjb25zdCBwZXJQYWdlID0gMTA7XG4gIGZvciAobGV0IHBhZ2UgPSAwOyBwYWdlIDwgTWF0aC5jZWlsKG51bU9mQmxvZyAvIHBlclBhZ2UpOyBwYWdlKyspIHtcbiAgICBjb25zdCBtZXRhZGF0YSA9IHtwYWdlLCBwZXJQYWdlfTtcbiAgICBjb25zdCBibG9nUGFnZUNvbXAgPSAoXG4gICAgICA8QmxvZ1BhZ2VMYXlvdXQgbWV0YWRhdGE9e21ldGFkYXRhfSBsYW5ndWFnZT1cImVuXCIgY29uZmlnPXtzaXRlQ29uZmlnfSAvPlxuICAgICk7XG4gICAgY29uc3Qgc3RyID0gcmVuZGVyVG9TdGF0aWNNYXJrdXBXaXRoRG9jdHlwZShibG9nUGFnZUNvbXApO1xuICAgIGNvbnN0IHBhZ2VQYXRoID0gYCR7cGFnZSA+IDAgPyBgcGFnZSR7cGFnZSArIDF9YCA6ICcnfS9pbmRleC5odG1sYDtcbiAgICBibG9nUGFnZXNbcGFnZVBhdGhdID0gc3RyO1xuICB9XG4gIHJldHVybiBibG9nUGFnZXM7XG59XG5cbmZ1bmN0aW9uIGdldE1ldGFkYXRhKGZpbGUsIHNpdGVDb25maWcpIHtcbiAgaWYgKCFmaWxlIHx8ICFmcy5leGlzdHNTeW5jKGZpbGUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgcmVzdWx0ID0gbWV0YWRhdGFVdGlscy5leHRyYWN0TWV0YWRhdGEoXG4gICAgZnMucmVhZEZpbGVTeW5jKGZpbGUsIHtlbmNvZGluZzogJ3V0ZjgnfSksXG4gICk7XG4gIGNvbnN0IG1ldGFkYXRhID0gT2JqZWN0LmFzc2lnbihcbiAgICB7XG4gICAgICBwYXRoOiBmaWxlVG9VcmwoZmlsZSksXG4gICAgICBjb250ZW50OiByZXBsYWNlQXNzZXRzTGluayhcbiAgICAgICAgcmVzdWx0LnJhd0NvbnRlbnQsXG4gICAgICAgIGAke3NpdGVDb25maWcuYmFzZVVybH1ibG9nYCxcbiAgICAgICksXG4gICAgfSxcbiAgICByZXN1bHQubWV0YWRhdGEsXG4gICk7XG4gIG1ldGFkYXRhLmlkID0gbWV0YWRhdGEudGl0bGU7XG4gIHJldHVybiBtZXRhZGF0YTtcbn1cblxuZnVuY3Rpb24gZ2V0UG9zdE1hcmt1cChmaWxlLCBzaXRlQ29uZmlnKSB7XG4gIGNvbnN0IG1ldGFkYXRhID0gZ2V0TWV0YWRhdGEoZmlsZSwgc2l0ZUNvbmZpZyk7XG4gIGlmICghbWV0YWRhdGEpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBCbG9nUG9zdExheW91dCA9IHJlcXVpcmUoJy4uL2NvcmUvQmxvZ1Bvc3RMYXlvdXQuanMnKTtcbiAgY29uc3QgYmxvZ1Bvc3RDb21wID0gKFxuICAgIDxCbG9nUG9zdExheW91dCBtZXRhZGF0YT17bWV0YWRhdGF9IGxhbmd1YWdlPVwiZW5cIiBjb25maWc9e3NpdGVDb25maWd9PlxuICAgICAge21ldGFkYXRhLmNvbnRlbnR9XG4gICAgPC9CbG9nUG9zdExheW91dD5cbiAgKTtcbiAgcmV0dXJuIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoYmxvZ1Bvc3RDb21wKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGZpbGVUb1VybCxcbiAgZ2V0TWV0YWRhdGEsXG4gIGdldFBhZ2VzTWFya3VwLFxuICBnZXRQb3N0TWFya3VwLFxuICB1cmxUb1NvdXJjZSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "blog.js"
      ],
      "names": [
        "React",
        "require",
        "path",
        "fs",
        "metadataUtils",
        "replaceAssetsLink",
        "renderToStaticMarkupWithDoctype",
        "urlToSource",
        "url",
        "replace",
        "fileToUrl",
        "file",
        "existsSync",
        "basename",
        "getPagesMarkup",
        "numOfBlog",
        "siteConfig",
        "BlogPageLayout",
        "blogPages",
        "perPage",
        "page",
        "Math",
        "ceil",
        "metadata",
        "blogPageComp",
        "str",
        "pagePath",
        "getMetadata",
        "result",
        "extractMetadata",
        "readFileSync",
        "encoding",
        "Object",
        "assign",
        "content",
        "rawContent",
        "baseUrl",
        "id",
        "title",
        "getPostMarkup",
        "BlogPostLayout",
        "blogPostComp",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst metadataUtils = require('./metadataUtils');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\n\nfunction urlToSource(url) {\n  if (!url || typeof url !== 'string') {\n    return null;\n  }\n  return url.replace(/(\\/index)?\\.html$/, '.md').replace(/\\//g, '-');\n}\n\nfunction fileToUrl(file) {\n  if (!file || !fs.existsSync(file) || typeof file !== 'string') {\n    return null;\n  }\n  return path\n    .basename(file)\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace('-', '/')\n    .replace(/\\.md$/, '.html');\n}\n\nfunction getPagesMarkup(numOfBlog, siteConfig) {\n  const BlogPageLayout = require('../core/BlogPageLayout.js');\n  const blogPages = {};\n  const perPage = 10;\n  for (let page = 0; page < Math.ceil(numOfBlog / perPage); page++) {\n    const metadata = {page, perPage};\n    const blogPageComp = (\n      <BlogPageLayout metadata={metadata} language=\"en\" config={siteConfig} />\n    );\n    const str = renderToStaticMarkupWithDoctype(blogPageComp);\n    const pagePath = `${page > 0 ? `page${page + 1}` : ''}/index.html`;\n    blogPages[pagePath] = str;\n  }\n  return blogPages;\n}\n\nfunction getMetadata(file, siteConfig) {\n  if (!file || !fs.existsSync(file)) {\n    return null;\n  }\n  const result = metadataUtils.extractMetadata(\n    fs.readFileSync(file, {encoding: 'utf8'}),\n  );\n  const metadata = Object.assign(\n    {\n      path: fileToUrl(file),\n      content: replaceAssetsLink(\n        result.rawContent,\n        `${siteConfig.baseUrl}blog`,\n      ),\n    },\n    result.metadata,\n  );\n  metadata.id = metadata.title;\n  return metadata;\n}\n\nfunction getPostMarkup(file, siteConfig) {\n  const metadata = getMetadata(file, siteConfig);\n  if (!metadata) {\n    return null;\n  }\n  const BlogPostLayout = require('../core/BlogPostLayout.js');\n  const blogPostComp = (\n    <BlogPostLayout metadata={metadata} language=\"en\" config={siteConfig}>\n      {metadata.content}\n    </BlogPostLayout>\n  );\n  return renderToStaticMarkupWithDoctype(blogPostComp);\n}\n\nmodule.exports = {\n  fileToUrl,\n  getMetadata,\n  getPagesMarkup,\n  getPostMarkup,\n  urlToSource,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/utils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/utils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar cssnano = require('cssnano');\n\nvar autoprefixer = require('autoprefixer');\n\nvar postcss = require('postcss');\n\nvar path = require('path');\n\nvar escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  var subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  var separator = escapeStringRegexp(path.sep);\n  var baseDir = escapeStringRegexp(path.basename(refDir));\n  var regexSubFolder = new RegExp(\"\".concat(baseDir).concat(separator, \"(.*?)\").concat(separator, \".*\"));\n  var match = regexSubFolder.exec(file); // Avoid misinterpreting subdirectory as language\n\n  var env = require('./env.js');\n\n  if (match && env.translation.enabled) {\n    var enabledLanguages = env.translation.enabledLanguages().map(function (language) {\n      return language.tag;\n    });\n\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n\n  for (var i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano.process(cssContent, {\n    preset: 'default',\n    zindex: false,\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer]).process(cssContent, {\n    from: undefined\n  }).then(function (result) {\n    return result.css;\n  });\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  var fencedBlock = false;\n  var lines = oldContent.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    return fencedBlock ? line : line.replace(/\\]\\(assets\\//g, \"](\".concat(location, \"/assets/\"));\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir: getSubDir,\n  getLanguage: getLanguage,\n  isSeparateCss: isSeparateCss,\n  minifyCss: minifyCss,\n  autoPrefixCss: autoPrefixCss,\n  replaceAssetsLink: replaceAssetsLink\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbImNzc25hbm8iLCJyZXF1aXJlIiwiYXV0b3ByZWZpeGVyIiwicG9zdGNzcyIsInBhdGgiLCJlc2NhcGVTdHJpbmdSZWdleHAiLCJnZXRTdWJEaXIiLCJmaWxlIiwicmVmRGlyIiwic3ViRGlyIiwiZGlybmFtZSIsInJlbGF0aXZlIiwicmVwbGFjZSIsImluY2x1ZGVzIiwiZ2V0TGFuZ3VhZ2UiLCJzZXBhcmF0b3IiLCJzZXAiLCJiYXNlRGlyIiwiYmFzZW5hbWUiLCJyZWdleFN1YkZvbGRlciIsIlJlZ0V4cCIsIm1hdGNoIiwiZXhlYyIsImVudiIsInRyYW5zbGF0aW9uIiwiZW5hYmxlZCIsImVuYWJsZWRMYW5ndWFnZXMiLCJtYXAiLCJsYW5ndWFnZSIsInRhZyIsImluZGV4T2YiLCJpc1NlcGFyYXRlQ3NzIiwic2VwYXJhdGVEaXJzIiwiaSIsImxlbmd0aCIsIm1pbmlmeUNzcyIsImNzc0NvbnRlbnQiLCJwcm9jZXNzIiwicHJlc2V0IiwiemluZGV4IiwiZnJvbSIsInVuZGVmaW5lZCIsInRoZW4iLCJyZXN1bHQiLCJjc3MiLCJhdXRvUHJlZml4Q3NzIiwicmVwbGFjZUFzc2V0c0xpbmsiLCJvbGRDb250ZW50IiwibG9jYXRpb24iLCJmZW5jZWRCbG9jayIsImxpbmVzIiwic3BsaXQiLCJsaW5lIiwidHJpbSIsInN0YXJ0c1dpdGgiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLFlBQVksR0FBR0QsT0FBTyxDQUFDLGNBQUQsQ0FBNUI7O0FBQ0EsSUFBTUUsT0FBTyxHQUFHRixPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNRyxJQUFJLEdBQUdILE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1JLGtCQUFrQixHQUFHSixP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QUEyQkMsVUFBM0IsRUFBdUNDLFFBQXZDLEVBQWlEO0FBQy9DLE1BQUlDLFdBQVcsR0FBRyxLQUFsQjtBQUNBLE1BQU1DLEtBQUssR0FBR0gsVUFBVSxDQUFDSSxLQUFYLENBQWlCLElBQWpCLEVBQXVCeEIsR0FBdkIsQ0FBMkIsVUFBQ3lCLElBQUQsRUFBVTtBQUNqRCxRQUFJQSxJQUFJLENBQUNDLElBQUwsR0FBWUMsVUFBWixDQUF1QixLQUF2QixDQUFKLEVBQW1DO0FBQ2pDTCxNQUFBQSxXQUFXLEdBQUcsQ0FBQ0EsV0FBZjtBQUNEOztBQUNELFdBQU9BLFdBQVcsR0FDZEcsSUFEYyxHQUVkQSxJQUFJLENBQUN4QyxPQUFMLENBQWEsZUFBYixjQUFtQ29DLFFBQW5DLGNBRko7QUFHRCxHQVBhLENBQWQ7QUFRQSxTQUFPRSxLQUFLLENBQUNLLElBQU4sQ0FBVyxJQUFYLENBQVA7QUFDRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZuRCxFQUFBQSxTQUFTLEVBQVRBLFNBRGU7QUFFZlEsRUFBQUEsV0FBVyxFQUFYQSxXQUZlO0FBR2ZpQixFQUFBQSxhQUFhLEVBQWJBLGFBSGU7QUFJZkksRUFBQUEsU0FBUyxFQUFUQSxTQUplO0FBS2ZVLEVBQUFBLGFBQWEsRUFBYkEsYUFMZTtBQU1mQyxFQUFBQSxpQkFBaUIsRUFBakJBO0FBTmUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuY29uc3QgY3NzbmFubyA9IHJlcXVpcmUoJ2Nzc25hbm8nKTtcbmNvbnN0IGF1dG9wcmVmaXhlciA9IHJlcXVpcmUoJ2F1dG9wcmVmaXhlcicpO1xuY29uc3QgcG9zdGNzcyA9IHJlcXVpcmUoJ3Bvc3Rjc3MnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBlc2NhcGVTdHJpbmdSZWdleHAgPSByZXF1aXJlKCdlc2NhcGUtc3RyaW5nLXJlZ2V4cCcpO1xuXG5mdW5jdGlvbiBnZXRTdWJEaXIoZmlsZSwgcmVmRGlyKSB7XG4gIGNvbnN0IHN1YkRpciA9IHBhdGguZGlybmFtZShwYXRoLnJlbGF0aXZlKHJlZkRpciwgZmlsZSkpLnJlcGxhY2UoL1xcXFwvZywgJy8nKTtcbiAgcmV0dXJuIHN1YkRpciAhPT0gJy4nICYmICFzdWJEaXIuaW5jbHVkZXMoJy4uJykgPyBzdWJEaXIgOiBudWxsO1xufVxuXG5mdW5jdGlvbiBnZXRMYW5ndWFnZShmaWxlLCByZWZEaXIpIHtcbiAgY29uc3Qgc2VwYXJhdG9yID0gZXNjYXBlU3RyaW5nUmVnZXhwKHBhdGguc2VwKTtcbiAgY29uc3QgYmFzZURpciA9IGVzY2FwZVN0cmluZ1JlZ2V4cChwYXRoLmJhc2VuYW1lKHJlZkRpcikpO1xuICBjb25zdCByZWdleFN1YkZvbGRlciA9IG5ldyBSZWdFeHAoXG4gICAgYCR7YmFzZURpcn0ke3NlcGFyYXRvcn0oLio/KSR7c2VwYXJhdG9yfS4qYCxcbiAgKTtcbiAgY29uc3QgbWF0Y2ggPSByZWdleFN1YkZvbGRlci5leGVjKGZpbGUpO1xuXG4gIC8vIEF2b2lkIG1pc2ludGVycHJldGluZyBzdWJkaXJlY3RvcnkgYXMgbGFuZ3VhZ2VcbiAgY29uc3QgZW52ID0gcmVxdWlyZSgnLi9lbnYuanMnKTtcbiAgaWYgKG1hdGNoICYmIGVudi50cmFuc2xhdGlvbi5lbmFibGVkKSB7XG4gICAgY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGVudi50cmFuc2xhdGlvblxuICAgICAgLmVuYWJsZWRMYW5ndWFnZXMoKVxuICAgICAgLm1hcCgobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLnRhZyk7XG4gICAgaWYgKGVuYWJsZWRMYW5ndWFnZXMuaW5kZXhPZihtYXRjaFsxXSkgIT09IC0xKSB7XG4gICAgICByZXR1cm4gbWF0Y2hbMV07XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5mdW5jdGlvbiBpc1NlcGFyYXRlQ3NzKGZpbGUsIHNlcGFyYXRlRGlycykge1xuICBpZiAoIXNlcGFyYXRlRGlycykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlcGFyYXRlRGlycy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChmaWxlLmluY2x1ZGVzKHNlcGFyYXRlRGlyc1tpXSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIG1pbmlmeUNzcyhjc3NDb250ZW50KSB7XG4gIHJldHVybiBjc3NuYW5vXG4gICAgLnByb2Nlc3MoY3NzQ29udGVudCwge1xuICAgICAgcHJlc2V0OiAnZGVmYXVsdCcsXG4gICAgICB6aW5kZXg6IGZhbHNlLFxuICAgICAgZnJvbTogdW5kZWZpbmVkLFxuICAgIH0pXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4gcmVzdWx0LmNzcyk7XG59XG5cbmZ1bmN0aW9uIGF1dG9QcmVmaXhDc3MoY3NzQ29udGVudCkge1xuICByZXR1cm4gcG9zdGNzcyhbYXV0b3ByZWZpeGVyXSlcbiAgICAucHJvY2Vzcyhjc3NDb250ZW50LCB7XG4gICAgICBmcm9tOiB1bmRlZmluZWQsXG4gICAgfSlcbiAgICAudGhlbigocmVzdWx0KSA9PiByZXN1bHQuY3NzKTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZUFzc2V0c0xpbmsob2xkQ29udGVudCwgbG9jYXRpb24pIHtcbiAgbGV0IGZlbmNlZEJsb2NrID0gZmFsc2U7XG4gIGNvbnN0IGxpbmVzID0gb2xkQ29udGVudC5zcGxpdCgnXFxuJykubWFwKChsaW5lKSA9PiB7XG4gICAgaWYgKGxpbmUudHJpbSgpLnN0YXJ0c1dpdGgoJ2BgYCcpKSB7XG4gICAgICBmZW5jZWRCbG9jayA9ICFmZW5jZWRCbG9jaztcbiAgICB9XG4gICAgcmV0dXJuIGZlbmNlZEJsb2NrXG4gICAgICA/IGxpbmVcbiAgICAgIDogbGluZS5yZXBsYWNlKC9cXF1cXChhc3NldHNcXC8vZywgYF0oJHtsb2NhdGlvbn0vYXNzZXRzL2ApO1xuICB9KTtcbiAgcmV0dXJuIGxpbmVzLmpvaW4oJ1xcbicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0U3ViRGlyLFxuICBnZXRMYW5ndWFnZSxcbiAgaXNTZXBhcmF0ZUNzcyxcbiAgbWluaWZ5Q3NzLFxuICBhdXRvUHJlZml4Q3NzLFxuICByZXBsYWNlQXNzZXRzTGluayxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "cssnano",
        "require",
        "autoprefixer",
        "postcss",
        "path",
        "escapeStringRegexp",
        "getSubDir",
        "file",
        "refDir",
        "subDir",
        "dirname",
        "relative",
        "replace",
        "includes",
        "getLanguage",
        "separator",
        "sep",
        "baseDir",
        "basename",
        "regexSubFolder",
        "RegExp",
        "match",
        "exec",
        "env",
        "translation",
        "enabled",
        "enabledLanguages",
        "map",
        "language",
        "tag",
        "indexOf",
        "isSeparateCss",
        "separateDirs",
        "i",
        "length",
        "minifyCss",
        "cssContent",
        "process",
        "preset",
        "zindex",
        "from",
        "undefined",
        "then",
        "result",
        "css",
        "autoPrefixCss",
        "replaceAssetsLink",
        "oldContent",
        "location",
        "fencedBlock",
        "lines",
        "split",
        "line",
        "trim",
        "startsWith",
        "join",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst cssnano = require('cssnano');\nconst autoprefixer = require('autoprefixer');\nconst postcss = require('postcss');\nconst path = require('path');\nconst escapeStringRegexp = require('escape-string-regexp');\n\nfunction getSubDir(file, refDir) {\n  const subDir = path.dirname(path.relative(refDir, file)).replace(/\\\\/g, '/');\n  return subDir !== '.' && !subDir.includes('..') ? subDir : null;\n}\n\nfunction getLanguage(file, refDir) {\n  const separator = escapeStringRegexp(path.sep);\n  const baseDir = escapeStringRegexp(path.basename(refDir));\n  const regexSubFolder = new RegExp(\n    `${baseDir}${separator}(.*?)${separator}.*`,\n  );\n  const match = regexSubFolder.exec(file);\n\n  // Avoid misinterpreting subdirectory as language\n  const env = require('./env.js');\n  if (match && env.translation.enabled) {\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .map((language) => language.tag);\n    if (enabledLanguages.indexOf(match[1]) !== -1) {\n      return match[1];\n    }\n  }\n  return null;\n}\n\nfunction isSeparateCss(file, separateDirs) {\n  if (!separateDirs) {\n    return false;\n  }\n  for (let i = 0; i < separateDirs.length; i++) {\n    if (file.includes(separateDirs[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction minifyCss(cssContent) {\n  return cssnano\n    .process(cssContent, {\n      preset: 'default',\n      zindex: false,\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction autoPrefixCss(cssContent) {\n  return postcss([autoprefixer])\n    .process(cssContent, {\n      from: undefined,\n    })\n    .then((result) => result.css);\n}\n\nfunction replaceAssetsLink(oldContent, location) {\n  let fencedBlock = false;\n  const lines = oldContent.split('\\n').map((line) => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    return fencedBlock\n      ? line\n      : line.replace(/\\]\\(assets\\//g, `](${location}/assets/`);\n  });\n  return lines.join('\\n');\n}\n\nmodule.exports = {\n  getSubDir,\n  getLanguage,\n  isSeparateCss,\n  minifyCss,\n  autoPrefixCss,\n  replaceAssetsLink,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/renderUtils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/renderUtils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/renderUtils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/renderUtils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "renderUtils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\n\n\nfunction renderToStaticMarkupWithDoctype() {\n  return \"<!DOCTYPE html>\".concat(renderToStaticMarkup.apply(void 0, arguments));\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype: renderToStaticMarkupWithDoctype\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbmRlclV0aWxzLmpzIl0sIm5hbWVzIjpbInJlbmRlclRvU3RhdGljTWFya3VwIiwicmVxdWlyZSIsInJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLG9CQUFvQixHQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBUCxDQUE0QkQsb0JBQXpEO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsU0FBU0UsK0JBQVQsR0FBa0Q7QUFDaEQsa0NBQXlCRixvQkFBb0IsTUFBcEIsbUJBQXpCO0FBQ0Q7O0FBRURHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmRixFQUFBQSwrQkFBK0IsRUFBL0JBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCByZW5kZXJUb1N0YXRpY01hcmt1cCA9IHJlcXVpcmUoJ3JlYWN0LWRvbS9zZXJ2ZXInKS5yZW5kZXJUb1N0YXRpY01hcmt1cDtcblxuLyoqXG4gKiBDdXN0b20gZnVuY3Rpb24gdGhhdCB3cmFwcyByZW5kZXJUb1N0YXRpY01hcmt1cCBzbyB0aGF0IHdlIGNhbiBpbmplY3RcbiAqIGRvY3R5cGUgYmVmb3JlIFJlYWN0IHJlbmRlcnMgdGhlIGNvbnRlbnRzLiBBbGwgaW5zdGFuY2Ugb2YgZnVsbC1wYWdlXG4gKiByZW5kZXJpbmcgd2l0aGluIERvY3VzYXVydXMgc2hvdWxkIHVzZSB0aGlzIGZ1bmN0aW9uIGluc3RlYWQuXG4gKi9cbmZ1bmN0aW9uIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUoLi4uYXJncykge1xuICByZXR1cm4gYDwhRE9DVFlQRSBodG1sPiR7cmVuZGVyVG9TdGF0aWNNYXJrdXAoLi4uYXJncyl9YDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlbmRlclRvU3RhdGljTWFya3VwV2l0aERvY3R5cGUsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "renderUtils.js"
      ],
      "names": [
        "renderToStaticMarkup",
        "require",
        "renderToStaticMarkupWithDoctype",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,oBAAoB,GAAGC,OAAO,CAAC,kBAAD,CAAP,CAA4BD,oBAAzD;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASE,+BAAT,GAAkD;AAChD,kCAAyBF,oBAAoB,MAApB,mBAAzB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfF,EAAAA,+BAA+B,EAA/BA;AADe,CAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst renderToStaticMarkup = require('react-dom/server').renderToStaticMarkup;\n\n/**\n * Custom function that wraps renderToStaticMarkup so that we can inject\n * doctype before React renders the contents. All instance of full-page\n * rendering within Docusaurus should use this function instead.\n */\nfunction renderToStaticMarkupWithDoctype(...args) {\n  return `<!DOCTYPE html>${renderToStaticMarkup(...args)}`;\n}\n\nmodule.exports = {\n  renderToStaticMarkupWithDoctype,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/config.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/config.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath) {\n  var deleteCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n\n  var config = {};\n\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n  /* Fill default value */\n\n\n  var defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs'\n  };\n  Object.keys(defaultConfig).forEach(function (field) {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n  return config;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9hZENvbmZpZyIsImNvbmZpZ1BhdGgiLCJkZWxldGVDYWNoZSIsImNhY2hlIiwiY29uZmlnIiwiZXhpc3RzU3luYyIsImRlZmF1bHRDb25maWciLCJjdXN0b21Eb2NzUGF0aCIsImRvY3NVcmwiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImZpZWxkIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBbEI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxVQUFULENBQW9CQyxVQUFwQixFQUFvRDtBQUFBLE1BQXBCQyxXQUFvQix1RUFBTixJQUFNOztBQUNuRSxNQUFJQSxXQUFKLEVBQWlCO0FBQ2YsV0FBT0wsT0FBTyxDQUFDTSxLQUFSLENBQWNGLFVBQWQsQ0FBUDtBQUNEOztBQUNELE1BQUlHLE1BQU0sR0FBRyxFQUFiOztBQUNBLE1BQUlSLEVBQUUsQ0FBQ1MsVUFBSCxDQUFjSixVQUFkLENBQUosRUFBK0I7QUFDN0JHLElBQUFBLE1BQU0sR0FBR1AsT0FBTyxDQUFDSSxVQUFELENBQWhCLENBRDZCLENBQ0M7QUFDL0I7QUFFRDs7O0FBQ0EsTUFBTUssYUFBYSxHQUFHO0FBQ3BCQyxJQUFBQSxjQUFjLEVBQUUsTUFESTtBQUVwQkMsSUFBQUEsT0FBTyxFQUFFO0FBRlcsR0FBdEI7QUFJQUMsRUFBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVlKLGFBQVosRUFBMkJLLE9BQTNCLENBQW1DLFVBQUNDLEtBQUQsRUFBVztBQUM1QyxRQUFJLEVBQUVBLEtBQUssSUFBSVIsTUFBWCxDQUFKLEVBQXdCO0FBQ3RCQSxNQUFBQSxNQUFNLENBQUNRLEtBQUQsQ0FBTixHQUFnQk4sYUFBYSxDQUFDTSxLQUFELENBQTdCO0FBQ0Q7QUFDRixHQUpEO0FBTUEsU0FBT1IsTUFBUDtBQUNELENBckJEIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcy1leHRyYScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGxvYWRDb25maWcoY29uZmlnUGF0aCwgZGVsZXRlQ2FjaGUgPSB0cnVlKSB7XG4gIGlmIChkZWxldGVDYWNoZSkge1xuICAgIGRlbGV0ZSByZXF1aXJlLmNhY2hlW2NvbmZpZ1BhdGhdO1xuICB9XG4gIGxldCBjb25maWcgPSB7fTtcbiAgaWYgKGZzLmV4aXN0c1N5bmMoY29uZmlnUGF0aCkpIHtcbiAgICBjb25maWcgPSByZXF1aXJlKGNvbmZpZ1BhdGgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH1cblxuICAvKiBGaWxsIGRlZmF1bHQgdmFsdWUgKi9cbiAgY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgICBjdXN0b21Eb2NzUGF0aDogJ2RvY3MnLFxuICAgIGRvY3NVcmw6ICdkb2NzJyxcbiAgfTtcbiAgT2JqZWN0LmtleXMoZGVmYXVsdENvbmZpZykuZm9yRWFjaCgoZmllbGQpID0+IHtcbiAgICBpZiAoIShmaWVsZCBpbiBjb25maWcpKSB7XG4gICAgICBjb25maWdbZmllbGRdID0gZGVmYXVsdENvbmZpZ1tmaWVsZF07XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "fs",
        "require",
        "module",
        "exports",
        "loadConfig",
        "configPath",
        "deleteCache",
        "cache",
        "config",
        "existsSync",
        "defaultConfig",
        "customDocsPath",
        "docsUrl",
        "Object",
        "keys",
        "forEach",
        "field"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAoBC,UAApB,EAAoD;AAAA,MAApBC,WAAoB,uEAAN,IAAM;;AACnE,MAAIA,WAAJ,EAAiB;AACf,WAAOL,OAAO,CAACM,KAAR,CAAcF,UAAd,CAAP;AACD;;AACD,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAIR,EAAE,CAACS,UAAH,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BG,IAAAA,MAAM,GAAGP,OAAO,CAACI,UAAD,CAAhB,CAD6B,CACC;AAC/B;AAED;;;AACA,MAAMK,aAAa,GAAG;AACpBC,IAAAA,cAAc,EAAE,MADI;AAEpBC,IAAAA,OAAO,EAAE;AAFW,GAAtB;AAIAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,OAA3B,CAAmC,UAACC,KAAD,EAAW;AAC5C,QAAI,EAAEA,KAAK,IAAIR,MAAX,CAAJ,EAAwB;AACtBA,MAAAA,MAAM,CAACQ,KAAD,CAAN,GAAgBN,aAAa,CAACM,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOR,MAAP;AACD,CArBD",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nmodule.exports = function loadConfig(configPath, deleteCache = true) {\n  if (deleteCache) {\n    delete require.cache[configPath];\n  }\n  let config = {};\n  if (fs.existsSync(configPath)) {\n    config = require(configPath); // eslint-disable-line\n  }\n\n  /* Fill default value */\n  const defaultConfig = {\n    customDocsPath: 'docs',\n    docsUrl: 'docs',\n  };\n  Object.keys(defaultConfig).forEach((field) => {\n    if (!(field in config)) {\n      config[field] = defaultConfig[field];\n    }\n  });\n\n  return config;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/versionFallback.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/versionFallback.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/versionFallback.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/versionFallback.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "versionFallback.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar glob = require('glob');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar metadataUtils = require('./metadataUtils');\n\nvar env = require('./env.js');\n\nvar utils = require('./utils.js');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\nvar ENABLE_TRANSLATION = fs.existsSync(\"\".concat(CWD, \"/languages.js\"));\nvar versions;\n\nif (fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n  versions = require(\"\".concat(CWD, \"/versions.json\"));\n} else {\n  versions = [];\n}\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar versionFolder = \"\".concat(CWD, \"/versioned_docs/\"); // available stores doc ids of documents that are available for\n// each version\n\nvar available = {}; // versionFiles is used to keep track of what file to use with a\n// given version/id of a document\n\nvar versionFiles = {};\nvar files = glob.sync(\"\".concat(versionFolder, \"**\"));\nfiles.forEach(function (file) {\n  var ext = path.extname(file);\n\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n\n  var res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  var metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"No 'original_id' field found in \".concat(file, \". Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  }\n\n  if (!metadata.id) {\n    console.error(\"No 'id' field found in \".concat(file, \".\"));\n    throw new Error(\"No 'id' field found in \".concat(file, \".\"));\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n    throw new Error(\"The 'id' field in \".concat(file, \" is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?\"));\n  } // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n\n\n  var version = metadata.id.substring(metadata.id.indexOf('version-') + 8, // version- is 8 characters\n  metadata.id.lastIndexOf(\"-\".concat(metadata.original_id))); // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n\n  var subDir = utils.getSubDir(file, path.join(versionFolder, \"version-\".concat(version)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n\n  versionFiles[version][metadata.original_id] = file;\n}); // returns the version to use for a document based on its id and\n// what the requested version is\n\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  } // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n\n\n  var requestedFound = false;\n  var availableVersion = null;\n  var deletedDocs = null;\n\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach(function (deletedDocVersion) {\n      deletedDocs[deletedDocVersion] = new Set(siteConfig.deletedDocs[deletedDocVersion]);\n    });\n  }\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (deletedDocs && deletedDocs[versions[i]] && deletedDocs[versions[i]].has(id)) {\n        return null;\n      }\n\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i]; // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n\n  return availableVersion;\n} // returns whether a given file has content that differ from the\n// document with the given id\n\n\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version;\n\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n\n  if (!version) {\n    return true;\n  }\n\n  var latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return metadataUtils.extractMetadata(fs.readFileSync(latestFile, 'utf8')).rawContent.trim() !== metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).rawContent.trim();\n} // return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\n\n\nfunction processVersionMetadata(file, version, useVersion, language) {\n  var metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8')).metadata; // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n\n  var subDir = utils.getSubDir(file, path.join(CWD, 'versioned_docs', \"version-\".concat(useVersion)));\n\n  if (subDir) {\n    metadata.original_id = \"\".concat(subDir, \"/\").concat(metadata.original_id);\n    metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(useVersion, \"-\").concat(subDir, \"/\"));\n  }\n\n  metadata.source = subDir ? \"version-\".concat(useVersion, \"/\").concat(subDir, \"/\").concat(path.basename(file)) : \"version-\".concat(useVersion, \"/\").concat(path.basename(file));\n  var latestVersion = versions[0];\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n  var versionPart = \"\".concat(version !== latestVersion ? \"\".concat(version, \"/\") : '');\n\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = \"\".concat(docsPart).concat(versionPart).concat(metadata.original_id, \".html\");\n  } else {\n    metadata.permalink = \"\".concat(docsPart).concat(language, \"/\").concat(versionPart).concat(metadata.original_id, \".html\");\n  }\n\n  metadata.id = metadata.id.replace(\"version-\".concat(useVersion, \"-\"), \"version-\".concat(version, \"-\"));\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? \"\".concat(language, \"-\") : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n  return metadata;\n} // return all metadata of versioned documents\n\n\nfunction docData() {\n  var allIds = new Set();\n  Object.keys(versionFiles).forEach(function (version) {\n    Object.keys(versionFiles[version]).forEach(function (id) {\n      allIds.add(id);\n    });\n  });\n  var metadatas = [];\n  languages.filter(function (language) {\n    return language.enabled;\n  }).forEach(function (language) {\n    versions.forEach(function (version) {\n      allIds.forEach(function (id) {\n        var useVersion;\n\n        try {\n          useVersion = docVersion(id, version);\n        } catch (e) {\n          console.log(e);\n          process.exit(1);\n        }\n\n        if (!useVersion) {\n          return;\n        }\n\n        var file = versionFiles[useVersion][id];\n        metadatas.push(processVersionMetadata(file, version, useVersion, language.tag));\n      });\n    });\n  });\n  return metadatas;\n} // return the version of the sidebar to use given a requested version\n\n\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  var requestedFound = false;\n\n  for (var i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n\n    if (requestedFound && fs.existsSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(versions[i], \"-sidebars.json\"))) {\n      return versions[i];\n    }\n  }\n\n  throw new Error(\"No sidebar file available to use for version \".concat(reqVersion, \". Verify that 'version-\").concat(reqVersion, \"-sidebars.json' exists.\"));\n} // return whether or not the current sidebars.json file differs from the\n// latest versioned one\n\n\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  var latest = versions[0];\n  var version = sidebarVersion(latest);\n  var latestSidebar = \"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\");\n\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n\n  var currentSidebar = \"\".concat(CWD, \"/sidebars.json\"); // if no current sidebar file, return false so no sidebar file gets copied\n\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  } // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n\n\n  return JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), '') !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')));\n} // return all versioned sidebar data\n\n\nfunction sidebarData() {\n  var allSidebars = {};\n\n  for (var i = 0; i < versions.length; i++) {\n    var version = sidebarVersion(versions[i]);\n    var sidebar = JSON.parse(fs.readFileSync(\"\".concat(CWD, \"/versioned_sidebars/version-\").concat(version, \"-sidebars.json\"), 'utf8').replace(new RegExp(\"version-\".concat(version, \"-\"), 'g'), \"version-\".concat(versions[i], \"-\")));\n    Object.assign(allSidebars, sidebar);\n  }\n\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion: docVersion,\n  diffLatestDoc: diffLatestDoc,\n  processVersionMetadata: processVersionMetadata,\n  docData: docData,\n  sidebarVersion: sidebarVersion,\n  diffLatestSidebar: diffLatestSidebar,\n  sidebarData: sidebarData\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "versionFallback.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "glob",
        "require",
        "fs",
        "path",
        "metadataUtils",
        "env",
        "utils",
        "loadConfig",
        "siteConfig",
        "ENABLE_TRANSLATION",
        "existsSync",
        "versions",
        "languages",
        "enabled",
        "name",
        "tag",
        "versionFolder",
        "available",
        "versionFiles",
        "files",
        "sync",
        "forEach",
        "file",
        "ext",
        "extname",
        "res",
        "extractMetadata",
        "readFileSync",
        "metadata",
        "original_id",
        "console",
        "error",
        "Error",
        "id",
        "indexOf",
        "version",
        "substring",
        "lastIndexOf",
        "subDir",
        "getSubDir",
        "join",
        "Set",
        "add",
        "docVersion",
        "reqVersion",
        "requestedFound",
        "availableVersion",
        "deletedDocs",
        "Object",
        "keys",
        "deletedDocVersion",
        "i",
        "length",
        "has",
        "diffLatestDoc",
        "latest",
        "e",
        "exit",
        "latestFile",
        "rawContent",
        "trim",
        "processVersionMetadata",
        "useVersion",
        "language",
        "replace",
        "source",
        "basename",
        "latestVersion",
        "docsPart",
        "docsUrl",
        "versionPart",
        "useEnglishUrl",
        "permalink",
        "localized_id",
        "translation",
        "docData",
        "allIds",
        "metadatas",
        "filter",
        "log",
        "push",
        "sidebarVersion",
        "diffLatestSidebar",
        "latestSidebar",
        "currentSidebar",
        "JSON",
        "stringify",
        "parse",
        "RegExp",
        "sidebarData",
        "allSidebars",
        "sidebar",
        "assign",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\nconst glob = require('glob');\nconst fs = require('fs');\nconst path = require('path');\n\nconst metadataUtils = require('./metadataUtils');\n\nconst env = require('./env.js');\nconst utils = require('./utils.js');\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst ENABLE_TRANSLATION = fs.existsSync(`${CWD}/languages.js`);\n\nlet versions;\nif (fs.existsSync(`${CWD}/versions.json`)) {\n  versions = require(`${CWD}/versions.json`);\n} else {\n  versions = [];\n}\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst versionFolder = `${CWD}/versioned_docs/`;\n\n// available stores doc ids of documents that are available for\n// each version\nconst available = {};\n// versionFiles is used to keep track of what file to use with a\n// given version/id of a document\nconst versionFiles = {};\nconst files = glob.sync(`${versionFolder}**`);\nfiles.forEach((file) => {\n  const ext = path.extname(file);\n  if (ext !== '.md' && ext !== '.markdown') {\n    return;\n  }\n  const res = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'));\n  const metadata = res.metadata;\n\n  if (!metadata.original_id) {\n    console.error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `No 'original_id' field found in ${file}. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n  if (!metadata.id) {\n    console.error(`No 'id' field found in ${file}.`);\n    throw new Error(`No 'id' field found in ${file}.`);\n  } else if (metadata.id.indexOf('version-') === -1) {\n    console.error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n    throw new Error(\n      `The 'id' field in ${file} is missing the expected 'version-XX-' prefix. Perhaps you forgot to add it when importing prior versions of your docs?`,\n    );\n  }\n\n  // The version will be between \"version-\" and \"-<metadata.original_id>\"\n  // e.g. version-1.0.0-beta.2-doc1 => 1.0.0-beta.2\n  // e.g. version-1.0.0-doc2 => 1.0.0\n  // e.g. version-1.0.0-getting-started => 1.0.0\n  const version = metadata.id.substring(\n    metadata.id.indexOf('version-') + 8, // version- is 8 characters\n    metadata.id.lastIndexOf(`-${metadata.original_id}`),\n  );\n\n  // the original_id should be namespaced according to subdir to allow duplicate id in different subfolder\n  const subDir = utils.getSubDir(\n    file,\n    path.join(versionFolder, `version-${version}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n  }\n\n  if (!(metadata.original_id in available)) {\n    available[metadata.original_id] = new Set();\n  }\n  available[metadata.original_id].add(version);\n\n  if (!(version in versionFiles)) {\n    versionFiles[version] = {};\n  }\n  versionFiles[version][metadata.original_id] = file;\n});\n\n// returns the version to use for a document based on its id and\n// what the requested version is\nfunction docVersion(id, reqVersion) {\n  if (!available[id]) {\n    return null;\n  }\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  let availableVersion = null;\n  let deletedDocs = null;\n  if (siteConfig.deletedDocs) {\n    // Config file may have either Array or Set for each version. Convert\n    // all to Set to make the check faster in the versions loop below.\n    deletedDocs = {};\n    Object.keys(siteConfig.deletedDocs).forEach((deletedDocVersion) => {\n      deletedDocs[deletedDocVersion] = new Set(\n        siteConfig.deletedDocs[deletedDocVersion],\n      );\n    });\n  }\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (requestedFound) {\n      // If this ID is deleted as of any version equal to or prior to\n      // the requested, return null.\n      if (\n        deletedDocs &&\n        deletedDocs[versions[i]] &&\n        deletedDocs[versions[i]].has(id)\n      ) {\n        return null;\n      }\n      if (!availableVersion && available[id].has(versions[i])) {\n        availableVersion = versions[i];\n        // Note the fallback version but keep looping in case this ID\n        // was deleted as of a previous version.\n        //\n        // If `deletedDocs` config isn't used, we can return immediately\n        // and avoid unnecessary looping.\n        if (!deletedDocs) {\n          break;\n        }\n      }\n    }\n  }\n  return availableVersion;\n}\n\n// returns whether a given file has content that differ from the\n// document with the given id\nfunction diffLatestDoc(file, id) {\n  if (versions.length === 0) {\n    return true;\n  }\n\n  const latest = versions[0];\n\n  let version;\n  try {\n    version = docVersion(id, latest);\n  } catch (e) {\n    console.error(e);\n    process.exit(1);\n  }\n  if (!version) {\n    return true;\n  }\n  const latestFile = versionFiles[version][id];\n\n  if (!latestFile || !fs.existsSync(latestFile)) {\n    return true;\n  }\n\n  return (\n    metadataUtils\n      .extractMetadata(fs.readFileSync(latestFile, 'utf8'))\n      .rawContent.trim() !==\n    metadataUtils\n      .extractMetadata(fs.readFileSync(file, 'utf8'))\n      .rawContent.trim()\n  );\n}\n\n// return metadata for a versioned file given the file, its version (requested),\n// the version of the file to be used, and its language\nfunction processVersionMetadata(file, version, useVersion, language) {\n  const metadata = metadataUtils.extractMetadata(fs.readFileSync(file, 'utf8'))\n    .metadata;\n\n  // Add subdirectory information to versioned_doc metadata\n  // Example: `versioned_docs/version-1.1.6/projectA/readme.md` file with id `version-1.1.6-readme`\n  // and original_id `readme` will have metadata id of `version-1.1.6-projectA/readme` and original_id `projectA/readme`\n  const subDir = utils.getSubDir(\n    file,\n    path.join(CWD, 'versioned_docs', `version-${useVersion}`),\n  );\n  if (subDir) {\n    metadata.original_id = `${subDir}/${metadata.original_id}`;\n    metadata.id = metadata.id.replace(\n      `version-${useVersion}-`,\n      `version-${useVersion}-${subDir}/`,\n    );\n  }\n\n  metadata.source = subDir\n    ? `version-${useVersion}/${subDir}/${path.basename(file)}`\n    : `version-${useVersion}/${path.basename(file)}`;\n\n  const latestVersion = versions[0];\n\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  const versionPart = `${version !== latestVersion ? `${version}/` : ''}`;\n  if (!ENABLE_TRANSLATION && !siteConfig.useEnglishUrl) {\n    metadata.permalink = `${docsPart}${versionPart}${metadata.original_id}.html`;\n  } else {\n    metadata.permalink = `${docsPart}${language}/${versionPart}${metadata.original_id}.html`;\n  }\n  metadata.id = metadata.id.replace(\n    `version-${useVersion}-`,\n    `version-${version}-`,\n  );\n  metadata.localized_id = metadata.id;\n  metadata.id = (env.translation.enabled ? `${language}-` : '') + metadata.id;\n  metadata.language = language;\n  metadata.version = version;\n\n  return metadata;\n}\n\n// return all metadata of versioned documents\nfunction docData() {\n  const allIds = new Set();\n  Object.keys(versionFiles).forEach((version) => {\n    Object.keys(versionFiles[version]).forEach((id) => {\n      allIds.add(id);\n    });\n  });\n\n  const metadatas = [];\n\n  languages\n    .filter((language) => language.enabled)\n    .forEach((language) => {\n      versions.forEach((version) => {\n        allIds.forEach((id) => {\n          let useVersion;\n          try {\n            useVersion = docVersion(id, version);\n          } catch (e) {\n            console.log(e);\n            process.exit(1);\n          }\n          if (!useVersion) {\n            return;\n          }\n          const file = versionFiles[useVersion][id];\n\n          metadatas.push(\n            processVersionMetadata(file, version, useVersion, language.tag),\n          );\n        });\n      });\n    });\n\n  return metadatas;\n}\n\n// return the version of the sidebar to use given a requested version\nfunction sidebarVersion(reqVersion) {\n  // iterate through versions until a version less than or equal to the requested\n  // is found, then check if that version has an available file to use\n  let requestedFound = false;\n  for (let i = 0; i < versions.length; i++) {\n    if (versions[i] === reqVersion) {\n      requestedFound = true;\n    }\n    if (\n      requestedFound &&\n      fs.existsSync(\n        `${CWD}/versioned_sidebars/version-${versions[i]}-sidebars.json`,\n      )\n    ) {\n      return versions[i];\n    }\n  }\n  throw new Error(\n    `No sidebar file available to use for version ${reqVersion}. Verify that 'version-${reqVersion}-sidebars.json' exists.`,\n  );\n}\n\n// return whether or not the current sidebars.json file differs from the\n// latest versioned one\nfunction diffLatestSidebar() {\n  if (versions.length === 0) {\n    return true;\n  }\n  const latest = versions[0];\n\n  const version = sidebarVersion(latest);\n  const latestSidebar = `${CWD}/versioned_sidebars/version-${version}-sidebars.json`;\n  if (!fs.existsSync(latestSidebar)) {\n    return true;\n  }\n  const currentSidebar = `${CWD}/sidebars.json`;\n  // if no current sidebar file, return false so no sidebar file gets copied\n  if (!fs.existsSync(currentSidebar)) {\n    return false;\n  }\n\n  // compare for equality between latest version sidebar with version prefixes\n  // stripped and current sidebar\n  return (\n    JSON.stringify(JSON.parse(fs.readFileSync(latestSidebar, 'utf8'))).replace(\n      new RegExp(`version-${version}-`, 'g'),\n      '',\n    ) !== JSON.stringify(JSON.parse(fs.readFileSync(currentSidebar, 'utf8')))\n  );\n}\n\n// return all versioned sidebar data\nfunction sidebarData() {\n  const allSidebars = {};\n\n  for (let i = 0; i < versions.length; i++) {\n    const version = sidebarVersion(versions[i]);\n    const sidebar = JSON.parse(\n      fs\n        .readFileSync(\n          `${CWD}/versioned_sidebars/version-${version}-sidebars.json`,\n          'utf8',\n        )\n        .replace(\n          new RegExp(`version-${version}-`, 'g'),\n          `version-${versions[i]}-`,\n        ),\n    );\n    Object.assign(allSidebars, sidebar);\n  }\n  return allSidebars;\n}\n\nmodule.exports = {\n  docVersion,\n  diffLatestDoc,\n  processVersionMetadata,\n  docData,\n  sidebarVersion,\n  diffLatestSidebar,\n  sidebarData,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596045545000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/docs.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/docs.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/docs.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/docs.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "docs.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar _require = require('path'),\n    join = _require.join;\n\nvar _require2 = require('url'),\n    resolve = _require2.resolve;\n\nvar fs = require('fs-extra');\n\nvar React = require('react');\n\nvar env = require('./env.js');\n\nvar _require3 = require('./renderUtils'),\n    renderToStaticMarkupWithDoctype = _require3.renderToStaticMarkupWithDoctype;\n\nvar readMetadata = require('./readMetadata.js');\n\nvar _require4 = require('../core/toc.js'),\n    insertTOC = _require4.insertTOC;\n\nvar _require5 = require('./utils.js'),\n    replaceAssetsLink = _require5.replaceAssetsLink;\n\nvar _require6 = require('../core/utils.js'),\n    getPath = _require6.getPath;\n\nfunction getFilePath(metadata) {\n  if (!metadata) {\n    return null;\n  }\n\n  var file;\n\n  if (env.versioning.enabled && metadata.original_id) {\n    if (env.translation.enabled && metadata.language !== 'en') {\n      file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n    } else {\n      file = join(CWD, 'versioned_docs', metadata.source);\n    }\n  } else if (env.translation.enabled && metadata.language !== 'en') {\n    file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n  } else {\n    file = join(CWD, '..', readMetadata.getDocsPath(), metadata.source);\n  }\n\n  return file;\n}\n\nfunction getFile(metadata) {\n  if (!metadata) {\n    return null;\n  }\n\n  var file = getFilePath(metadata);\n\n  if (!fs.existsSync(file)) {\n    return null;\n  }\n\n  return fs.readFileSync(file, 'utf8');\n}\n\nfunction mdToHtmlify(oldContent, mdToHtml, metadata, siteConfig) {\n  /* Store broken links */\n  var mdBrokenLinks = [];\n  var content = oldContent;\n  /* Replace internal markdown linking (except in fenced blocks) */\n\n  var fencedBlock = false;\n  var lines = content.split('\\n').map(function (line) {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n\n    if (fencedBlock) return line;\n    var modifiedLine = line;\n    /* Replace inline-style links or reference-style links e.g:\n    This is [Document 1](doc1.md) -> we replace this doc1.md with correct link\n    [doc1]: doc1.md -> we replace this doc1.md with correct link\n    */\n\n    var mdRegex = /(?:(?:\\]\\()|(?:\\]:\\s?))(?!https)([^'\")\\]\\s>]+\\.md)/g;\n    var mdMatch = mdRegex.exec(modifiedLine);\n\n    while (mdMatch !== null) {\n      /* Replace it to correct html link */\n      var docsSource = metadata.version ? metadata.source.replace(/version-.*?\\//, '') : metadata.source;\n      var htmlLink = mdToHtml[resolve(docsSource, mdMatch[1])] || mdToHtml[mdMatch[1]];\n\n      if (htmlLink) {\n        htmlLink = getPath(htmlLink, siteConfig.cleanUrl);\n        htmlLink = htmlLink.replace('/en/', \"/\".concat(metadata.language, \"/\"));\n        htmlLink = htmlLink.replace('/VERSION/', metadata.version && metadata.version !== env.versioning.latestVersion ? \"/\".concat(metadata.version, \"/\") : '/');\n        modifiedLine = modifiedLine.replace(mdMatch[1], htmlLink);\n      } else {\n        mdBrokenLinks.push(mdMatch[1]);\n      }\n\n      mdMatch = mdRegex.exec(modifiedLine);\n    }\n\n    return modifiedLine;\n  });\n  content = lines.join('\\n');\n\n  if (mdBrokenLinks.length) {\n    console.log(\"[WARN] unresolved links in file '\".concat(metadata.source, \"' >\"), mdBrokenLinks);\n  }\n\n  return content;\n}\n\nfunction getMarkup(rawContent, mdToHtml, metadata, siteConfig) {\n  // generate table of contents\n  var content = insertTOC(rawContent, siteConfig.slugPreprocessor); // replace any links to markdown files to their website html links\n\n  content = mdToHtmlify(content, mdToHtml, metadata, siteConfig); // replace any relative links to static assets (not in fenced code blocks) to absolute links\n\n  var docsAssetsLocation = siteConfig.docsUrl ? \"\".concat(siteConfig.baseUrl).concat(siteConfig.docsUrl) : siteConfig.baseUrl.substring(0, siteConfig.baseUrl.length - 1);\n  content = replaceAssetsLink(content, docsAssetsLocation);\n\n  var DocsLayout = require('../core/DocsLayout.js');\n\n  return renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(DocsLayout, {\n    metadata: metadata,\n    language: metadata.language,\n    config: siteConfig\n  }, content));\n}\n\nfunction getRedirectMarkup(metadata, siteConfig) {\n  var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n\n  if (!env.translation.enabled || !metadata.permalink.includes(\"\".concat(docsPart, \"en\"))) {\n    return null;\n  }\n\n  var Redirect = require('../core/Redirect.js');\n\n  var redirectlink = getPath(metadata.permalink, siteConfig.cleanUrl);\n  return renderToStaticMarkupWithDoctype( /*#__PURE__*/React.createElement(Redirect, {\n    metadata: metadata,\n    language: metadata.language,\n    config: siteConfig,\n    redirect: siteConfig.baseUrl + redirectlink\n  }));\n}\n\nmodule.exports = {\n  getMarkup: getMarkup,\n  getFile: getFile,\n  getFilePath: getFilePath,\n  getRedirectMarkup: getRedirectMarkup,\n  mdToHtmlify: mdToHtmlify\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "docs.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "require",
        "join",
        "resolve",
        "fs",
        "React",
        "env",
        "renderToStaticMarkupWithDoctype",
        "readMetadata",
        "insertTOC",
        "replaceAssetsLink",
        "getPath",
        "getFilePath",
        "metadata",
        "file",
        "versioning",
        "enabled",
        "original_id",
        "translation",
        "language",
        "source",
        "getDocsPath",
        "getFile",
        "existsSync",
        "readFileSync",
        "mdToHtmlify",
        "oldContent",
        "mdToHtml",
        "siteConfig",
        "mdBrokenLinks",
        "content",
        "fencedBlock",
        "lines",
        "split",
        "map",
        "line",
        "trim",
        "startsWith",
        "modifiedLine",
        "mdRegex",
        "mdMatch",
        "exec",
        "docsSource",
        "version",
        "replace",
        "htmlLink",
        "cleanUrl",
        "latestVersion",
        "push",
        "length",
        "console",
        "log",
        "getMarkup",
        "rawContent",
        "slugPreprocessor",
        "docsAssetsLocation",
        "docsUrl",
        "baseUrl",
        "substring",
        "DocsLayout",
        "getRedirectMarkup",
        "docsPart",
        "permalink",
        "includes",
        "Redirect",
        "redirectlink",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst CWD = process.cwd();\nconst {join} = require('path');\nconst {resolve} = require('url');\nconst fs = require('fs-extra');\nconst React = require('react');\n\nconst env = require('./env.js');\nconst {renderToStaticMarkupWithDoctype} = require('./renderUtils');\nconst readMetadata = require('./readMetadata.js');\nconst {insertTOC} = require('../core/toc.js');\nconst {replaceAssetsLink} = require('./utils.js');\nconst {getPath} = require('../core/utils.js');\n\nfunction getFilePath(metadata) {\n  if (!metadata) {\n    return null;\n  }\n  let file;\n  if (env.versioning.enabled && metadata.original_id) {\n    if (env.translation.enabled && metadata.language !== 'en') {\n      file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n    } else {\n      file = join(CWD, 'versioned_docs', metadata.source);\n    }\n  } else if (env.translation.enabled && metadata.language !== 'en') {\n    file = join(CWD, 'translated_docs', metadata.language, metadata.source);\n  } else {\n    file = join(CWD, '..', readMetadata.getDocsPath(), metadata.source);\n  }\n  return file;\n}\n\nfunction getFile(metadata) {\n  if (!metadata) {\n    return null;\n  }\n  const file = getFilePath(metadata);\n  if (!fs.existsSync(file)) {\n    return null;\n  }\n  return fs.readFileSync(file, 'utf8');\n}\n\nfunction mdToHtmlify(oldContent, mdToHtml, metadata, siteConfig) {\n  /* Store broken links */\n  const mdBrokenLinks = [];\n\n  let content = oldContent;\n  /* Replace internal markdown linking (except in fenced blocks) */\n  let fencedBlock = false;\n  const lines = content.split('\\n').map((line) => {\n    if (line.trim().startsWith('```')) {\n      fencedBlock = !fencedBlock;\n    }\n    if (fencedBlock) return line;\n\n    let modifiedLine = line;\n    /* Replace inline-style links or reference-style links e.g:\n    This is [Document 1](doc1.md) -> we replace this doc1.md with correct link\n    [doc1]: doc1.md -> we replace this doc1.md with correct link\n    */\n    const mdRegex = /(?:(?:\\]\\()|(?:\\]:\\s?))(?!https)([^'\")\\]\\s>]+\\.md)/g;\n    let mdMatch = mdRegex.exec(modifiedLine);\n    while (mdMatch !== null) {\n      /* Replace it to correct html link */\n      const docsSource = metadata.version\n        ? metadata.source.replace(/version-.*?\\//, '')\n        : metadata.source;\n      let htmlLink =\n        mdToHtml[resolve(docsSource, mdMatch[1])] || mdToHtml[mdMatch[1]];\n      if (htmlLink) {\n        htmlLink = getPath(htmlLink, siteConfig.cleanUrl);\n        htmlLink = htmlLink.replace('/en/', `/${metadata.language}/`);\n        htmlLink = htmlLink.replace(\n          '/VERSION/',\n          metadata.version && metadata.version !== env.versioning.latestVersion\n            ? `/${metadata.version}/`\n            : '/',\n        );\n        modifiedLine = modifiedLine.replace(mdMatch[1], htmlLink);\n      } else {\n        mdBrokenLinks.push(mdMatch[1]);\n      }\n      mdMatch = mdRegex.exec(modifiedLine);\n    }\n    return modifiedLine;\n  });\n  content = lines.join('\\n');\n\n  if (mdBrokenLinks.length) {\n    console.log(\n      `[WARN] unresolved links in file '${metadata.source}' >`,\n      mdBrokenLinks,\n    );\n  }\n  return content;\n}\n\nfunction getMarkup(rawContent, mdToHtml, metadata, siteConfig) {\n  // generate table of contents\n  let content = insertTOC(rawContent, siteConfig.slugPreprocessor);\n\n  // replace any links to markdown files to their website html links\n  content = mdToHtmlify(content, mdToHtml, metadata, siteConfig);\n\n  // replace any relative links to static assets (not in fenced code blocks) to absolute links\n  const docsAssetsLocation = siteConfig.docsUrl\n    ? `${siteConfig.baseUrl}${siteConfig.docsUrl}`\n    : siteConfig.baseUrl.substring(0, siteConfig.baseUrl.length - 1);\n  content = replaceAssetsLink(content, docsAssetsLocation);\n\n  const DocsLayout = require('../core/DocsLayout.js');\n  return renderToStaticMarkupWithDoctype(\n    <DocsLayout\n      metadata={metadata}\n      language={metadata.language}\n      config={siteConfig}>\n      {content}\n    </DocsLayout>,\n  );\n}\n\nfunction getRedirectMarkup(metadata, siteConfig) {\n  const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n  if (\n    !env.translation.enabled ||\n    !metadata.permalink.includes(`${docsPart}en`)\n  ) {\n    return null;\n  }\n  const Redirect = require('../core/Redirect.js');\n  const redirectlink = getPath(metadata.permalink, siteConfig.cleanUrl);\n  return renderToStaticMarkupWithDoctype(\n    <Redirect\n      metadata={metadata}\n      language={metadata.language}\n      config={siteConfig}\n      redirect={siteConfig.baseUrl + redirectlink}\n    />,\n  );\n}\n\nmodule.exports = {\n  getMarkup,\n  getFile,\n  getFilePath,\n  getRedirectMarkup,\n  mdToHtmlify,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596460761000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toc.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toc.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toc.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "toc.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _require = require('remarkable'),\n    Remarkable = _require.Remarkable;\n\nvar mdToc = require('markdown-toc');\n\nvar GithubSlugger = require('github-slugger');\n\nvar toSlug = require('./toSlug');\n\nvar tocRegex = new RegExp('<AUTOGENERATED_TABLE_OF_CONTENTS>', 'i');\n/**\n * Returns a table of content from the headings\n *\n * @return array\n * Array of heading objects with `hashLink`, `content` and `children` fields\n *\n */\n\nfunction getTOC(content) {\n  var headingTags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'h2';\n  var subHeadingTags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'h3';\n  var slugPreprocessor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n\n  var tagToLevel = function tagToLevel(tag) {\n    return Number(tag.slice(1));\n  };\n\n  var headingLevels = [].concat(headingTags).map(tagToLevel);\n  var subHeadingLevels = subHeadingTags ? [].concat(subHeadingTags).map(tagToLevel) : [];\n  var allowedHeadingLevels = headingLevels.concat(subHeadingLevels);\n  var md = new Remarkable({\n    // Enable HTML tags in source (same as './renderMarkdown.js')\n    html: true\n  });\n  var headings = mdToc(content).json;\n  var toc = [];\n  var slugger = new GithubSlugger();\n  var current;\n  headings.forEach(function (heading) {\n    var rawContent = heading.content;\n    var rendered = md.renderInline(rawContent);\n    var slugBase = slugPreprocessor && typeof slugPreprocessor === 'function' ? slugPreprocessor(rawContent) : rawContent;\n    var hashLink = toSlug(slugBase, slugger);\n\n    if (!allowedHeadingLevels.includes(heading.lvl)) {\n      return;\n    }\n\n    var entry = {\n      hashLink: hashLink,\n      rawContent: rawContent,\n      content: rendered,\n      children: []\n    };\n\n    if (headingLevels.includes(heading.lvl)) {\n      toc.push(entry);\n      current = entry;\n    } else if (current) {\n      current.children.push(entry);\n    }\n  });\n  return toc;\n} // takes the content of a doc article and returns the content with a table of\n// contents inserted\n\n\nfunction insertTOC(rawContent) {\n  var slugPreprocessor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n  if (!rawContent || !tocRegex.test(rawContent)) {\n    return rawContent;\n  }\n\n  var filterRe = /^`[^`]*`/;\n  var headers = getTOC(rawContent, 'h3', null, slugPreprocessor);\n  var tableOfContents = headers.filter(function (header) {\n    return filterRe.test(header.rawContent);\n  }).map(function (header) {\n    return \"  - [\".concat(header.rawContent, \"](#\").concat(header.hashLink, \")\");\n  }).join('\\n');\n  return rawContent.replace(tocRegex, tableOfContents);\n}\n\nmodule.exports = {\n  getTOC: getTOC,\n  insertTOC: insertTOC\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvYy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiUmVtYXJrYWJsZSIsIm1kVG9jIiwiR2l0aHViU2x1Z2dlciIsInRvU2x1ZyIsInRvY1JlZ2V4IiwiUmVnRXhwIiwiZ2V0VE9DIiwiY29udGVudCIsImhlYWRpbmdUYWdzIiwic3ViSGVhZGluZ1RhZ3MiLCJzbHVnUHJlcHJvY2Vzc29yIiwidW5kZWZpbmVkIiwidGFnVG9MZXZlbCIsInRhZyIsIk51bWJlciIsInNsaWNlIiwiaGVhZGluZ0xldmVscyIsImNvbmNhdCIsIm1hcCIsInN1YkhlYWRpbmdMZXZlbHMiLCJhbGxvd2VkSGVhZGluZ0xldmVscyIsIm1kIiwiaHRtbCIsImhlYWRpbmdzIiwianNvbiIsInRvYyIsInNsdWdnZXIiLCJjdXJyZW50IiwiZm9yRWFjaCIsImhlYWRpbmciLCJyYXdDb250ZW50IiwicmVuZGVyZWQiLCJyZW5kZXJJbmxpbmUiLCJzbHVnQmFzZSIsImhhc2hMaW5rIiwiaW5jbHVkZXMiLCJsdmwiLCJlbnRyeSIsImNoaWxkcmVuIiwicHVzaCIsImluc2VydFRPQyIsInRlc3QiLCJmaWx0ZXJSZSIsImhlYWRlcnMiLCJ0YWJsZU9mQ29udGVudHMiLCJmaWx0ZXIiLCJoZWFkZXIiLCJqb2luIiwicmVwbGFjZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO2VBRXFCQSxPQUFPLENBQUMsWUFBRCxDO0lBQXJCQyxVLFlBQUFBLFU7O0FBQ1AsSUFBTUMsS0FBSyxHQUFHRixPQUFPLENBQUMsY0FBRCxDQUFyQjs7QUFDQSxJQUFNRyxhQUFhLEdBQUdILE9BQU8sQ0FBQyxnQkFBRCxDQUE3Qjs7QUFDQSxJQUFNSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQU1LLFFBQVEsR0FBRyxJQUFJQyxNQUFKLENBQVcsbUNBQVgsRUFBZ0QsR0FBaEQsQ0FBakI7QUFFQTtBQUNBO0FBQ0E7QUFD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LEdBQUdELE9BQU8sQ0FDNUJFLE1BRHFCLENBQ2QsVUFBQ0MsTUFBRDtBQUFBLFdBQVlKLFFBQVEsQ0FBQ0QsSUFBVCxDQUFjSyxNQUFNLENBQUNoQixVQUFyQixDQUFaO0FBQUEsR0FEYyxFQUVyQlosR0FGcUIsQ0FFakIsVUFBQzRCLE1BQUQ7QUFBQSwwQkFBb0JBLE1BQU0sQ0FBQ2hCLFVBQTNCLGdCQUEyQ2dCLE1BQU0sQ0FBQ1osUUFBbEQ7QUFBQSxHQUZpQixFQUdyQmEsSUFIcUIsQ0FHaEIsSUFIZ0IsQ0FBeEI7QUFJQSxTQUFPakIsVUFBVSxDQUFDa0IsT0FBWCxDQUFtQjVDLFFBQW5CLEVBQTZCd0MsZUFBN0IsQ0FBUDtBQUNEOztBQUVESyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZjVDLEVBQUFBLE1BQU0sRUFBTkEsTUFEZTtBQUVma0MsRUFBQUEsU0FBUyxFQUFUQTtBQUZlLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHtSZW1hcmthYmxlfSA9IHJlcXVpcmUoJ3JlbWFya2FibGUnKTtcbmNvbnN0IG1kVG9jID0gcmVxdWlyZSgnbWFya2Rvd24tdG9jJyk7XG5jb25zdCBHaXRodWJTbHVnZ2VyID0gcmVxdWlyZSgnZ2l0aHViLXNsdWdnZXInKTtcbmNvbnN0IHRvU2x1ZyA9IHJlcXVpcmUoJy4vdG9TbHVnJyk7XG5cbmNvbnN0IHRvY1JlZ2V4ID0gbmV3IFJlZ0V4cCgnPEFVVE9HRU5FUkFURURfVEFCTEVfT0ZfQ09OVEVOVFM+JywgJ2knKTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgdGFibGUgb2YgY29udGVudCBmcm9tIHRoZSBoZWFkaW5nc1xuICpcbiAqIEByZXR1cm4gYXJyYXlcbiAqIEFycmF5IG9mIGhlYWRpbmcgb2JqZWN0cyB3aXRoIGBoYXNoTGlua2AsIGBjb250ZW50YCBhbmQgYGNoaWxkcmVuYCBmaWVsZHNcbiAqXG4gKi9cbmZ1bmN0aW9uIGdldFRPQyhcbiAgY29udGVudCxcbiAgaGVhZGluZ1RhZ3MgPSAnaDInLFxuICBzdWJIZWFkaW5nVGFncyA9ICdoMycsXG4gIHNsdWdQcmVwcm9jZXNzb3IgPSB1bmRlZmluZWQsXG4pIHtcbiAgY29uc3QgdGFnVG9MZXZlbCA9ICh0YWcpID0+IE51bWJlcih0YWcuc2xpY2UoMSkpO1xuICBjb25zdCBoZWFkaW5nTGV2ZWxzID0gW10uY29uY2F0KGhlYWRpbmdUYWdzKS5tYXAodGFnVG9MZXZlbCk7XG4gIGNvbnN0IHN1YkhlYWRpbmdMZXZlbHMgPSBzdWJIZWFkaW5nVGFnc1xuICAgID8gW10uY29uY2F0KHN1YkhlYWRpbmdUYWdzKS5tYXAodGFnVG9MZXZlbClcbiAgICA6IFtdO1xuICBjb25zdCBhbGxvd2VkSGVhZGluZ0xldmVscyA9IGhlYWRpbmdMZXZlbHMuY29uY2F0KHN1YkhlYWRpbmdMZXZlbHMpO1xuICBjb25zdCBtZCA9IG5ldyBSZW1hcmthYmxlKHtcbiAgICAvLyBFbmFibGUgSFRNTCB0YWdzIGluIHNvdXJjZSAoc2FtZSBhcyAnLi9yZW5kZXJNYXJrZG93bi5qcycpXG4gICAgaHRtbDogdHJ1ZSxcbiAgfSk7XG4gIGNvbnN0IGhlYWRpbmdzID0gbWRUb2MoY29udGVudCkuanNvbjtcbiAgY29uc3QgdG9jID0gW107XG4gIGNvbnN0IHNsdWdnZXIgPSBuZXcgR2l0aHViU2x1Z2dlcigpO1xuICBsZXQgY3VycmVudDtcblxuICBoZWFkaW5ncy5mb3JFYWNoKChoZWFkaW5nKSA9PiB7XG4gICAgY29uc3QgcmF3Q29udGVudCA9IGhlYWRpbmcuY29udGVudDtcbiAgICBjb25zdCByZW5kZXJlZCA9IG1kLnJlbmRlcklubGluZShyYXdDb250ZW50KTtcbiAgICBjb25zdCBzbHVnQmFzZSA9XG4gICAgICBzbHVnUHJlcHJvY2Vzc29yICYmIHR5cGVvZiBzbHVnUHJlcHJvY2Vzc29yID09PSAnZnVuY3Rpb24nXG4gICAgICAgID8gc2x1Z1ByZXByb2Nlc3NvcihyYXdDb250ZW50KVxuICAgICAgICA6IHJhd0NvbnRlbnQ7XG4gICAgY29uc3QgaGFzaExpbmsgPSB0b1NsdWcoc2x1Z0Jhc2UsIHNsdWdnZXIpO1xuICAgIGlmICghYWxsb3dlZEhlYWRpbmdMZXZlbHMuaW5jbHVkZXMoaGVhZGluZy5sdmwpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGVudHJ5ID0ge1xuICAgICAgaGFzaExpbmssXG4gICAgICByYXdDb250ZW50LFxuICAgICAgY29udGVudDogcmVuZGVyZWQsXG4gICAgICBjaGlsZHJlbjogW10sXG4gICAgfTtcbiAgICBpZiAoaGVhZGluZ0xldmVscy5pbmNsdWRlcyhoZWFkaW5nLmx2bCkpIHtcbiAgICAgIHRvYy5wdXNoKGVudHJ5KTtcbiAgICAgIGN1cnJlbnQgPSBlbnRyeTtcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnQpIHtcbiAgICAgIGN1cnJlbnQuY2hpbGRyZW4ucHVzaChlbnRyeSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHRvYztcbn1cblxuLy8gdGFrZXMgdGhlIGNvbnRlbnQgb2YgYSBkb2MgYXJ0aWNsZSBhbmQgcmV0dXJucyB0aGUgY29udGVudCB3aXRoIGEgdGFibGUgb2Zcbi8vIGNvbnRlbnRzIGluc2VydGVkXG5mdW5jdGlvbiBpbnNlcnRUT0MocmF3Q29udGVudCwgc2x1Z1ByZXByb2Nlc3NvciA9IHVuZGVmaW5lZCkge1xuICBpZiAoIXJhd0NvbnRlbnQgfHwgIXRvY1JlZ2V4LnRlc3QocmF3Q29udGVudCkpIHtcbiAgICByZXR1cm4gcmF3Q29udGVudDtcbiAgfVxuICBjb25zdCBmaWx0ZXJSZSA9IC9eYFteYF0qYC87XG4gIGNvbnN0IGhlYWRlcnMgPSBnZXRUT0MocmF3Q29udGVudCwgJ2gzJywgbnVsbCwgc2x1Z1ByZXByb2Nlc3Nvcik7XG4gIGNvbnN0IHRhYmxlT2ZDb250ZW50cyA9IGhlYWRlcnNcbiAgICAuZmlsdGVyKChoZWFkZXIpID0+IGZpbHRlclJlLnRlc3QoaGVhZGVyLnJhd0NvbnRlbnQpKVxuICAgIC5tYXAoKGhlYWRlcikgPT4gYCAgLSBbJHtoZWFkZXIucmF3Q29udGVudH1dKCMke2hlYWRlci5oYXNoTGlua30pYClcbiAgICAuam9pbignXFxuJyk7XG4gIHJldHVybiByYXdDb250ZW50LnJlcGxhY2UodG9jUmVnZXgsIHRhYmxlT2ZDb250ZW50cyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRUT0MsXG4gIGluc2VydFRPQyxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "toc.js"
      ],
      "names": [
        "require",
        "Remarkable",
        "mdToc",
        "GithubSlugger",
        "toSlug",
        "tocRegex",
        "RegExp",
        "getTOC",
        "content",
        "headingTags",
        "subHeadingTags",
        "slugPreprocessor",
        "undefined",
        "tagToLevel",
        "tag",
        "Number",
        "slice",
        "headingLevels",
        "concat",
        "map",
        "subHeadingLevels",
        "allowedHeadingLevels",
        "md",
        "html",
        "headings",
        "json",
        "toc",
        "slugger",
        "current",
        "forEach",
        "heading",
        "rawContent",
        "rendered",
        "renderInline",
        "slugBase",
        "hashLink",
        "includes",
        "lvl",
        "entry",
        "children",
        "push",
        "insertTOC",
        "test",
        "filterRe",
        "headers",
        "tableOfContents",
        "filter",
        "header",
        "join",
        "replace",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst {Remarkable} = require('remarkable');\nconst mdToc = require('markdown-toc');\nconst GithubSlugger = require('github-slugger');\nconst toSlug = require('./toSlug');\n\nconst tocRegex = new RegExp('<AUTOGENERATED_TABLE_OF_CONTENTS>', 'i');\n\n/**\n * Returns a table of content from the headings\n *\n * @return array\n * Array of heading objects with `hashLink`, `content` and `children` fields\n *\n */\nfunction getTOC(\n  content,\n  headingTags = 'h2',\n  subHeadingTags = 'h3',\n  slugPreprocessor = undefined,\n) {\n  const tagToLevel = (tag) => Number(tag.slice(1));\n  const headingLevels = [].concat(headingTags).map(tagToLevel);\n  const subHeadingLevels = subHeadingTags\n    ? [].concat(subHeadingTags).map(tagToLevel)\n    : [];\n  const allowedHeadingLevels = headingLevels.concat(subHeadingLevels);\n  const md = new Remarkable({\n    // Enable HTML tags in source (same as './renderMarkdown.js')\n    html: true,\n  });\n  const headings = mdToc(content).json;\n  const toc = [];\n  const slugger = new GithubSlugger();\n  let current;\n\n  headings.forEach((heading) => {\n    const rawContent = heading.content;\n    const rendered = md.renderInline(rawContent);\n    const slugBase =\n      slugPreprocessor && typeof slugPreprocessor === 'function'\n        ? slugPreprocessor(rawContent)\n        : rawContent;\n    const hashLink = toSlug(slugBase, slugger);\n    if (!allowedHeadingLevels.includes(heading.lvl)) {\n      return;\n    }\n    const entry = {\n      hashLink,\n      rawContent,\n      content: rendered,\n      children: [],\n    };\n    if (headingLevels.includes(heading.lvl)) {\n      toc.push(entry);\n      current = entry;\n    } else if (current) {\n      current.children.push(entry);\n    }\n  });\n  return toc;\n}\n\n// takes the content of a doc article and returns the content with a table of\n// contents inserted\nfunction insertTOC(rawContent, slugPreprocessor = undefined) {\n  if (!rawContent || !tocRegex.test(rawContent)) {\n    return rawContent;\n  }\n  const filterRe = /^`[^`]*`/;\n  const headers = getTOC(rawContent, 'h3', null, slugPreprocessor);\n  const tableOfContents = headers\n    .filter((header) => filterRe.test(header.rawContent))\n    .map((header) => `  - [${header.rawContent}](#${header.hashLink})`)\n    .join('\\n');\n  return rawContent.replace(tocRegex, tableOfContents);\n}\n\nmodule.exports = {\n  getTOC,\n  insertTOC,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596460761000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toSlug.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toSlug.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toSlug.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/toSlug.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "toSlug.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar GitHubSlugger = require('github-slugger');\n/**\n * Converts a string to a slug, that can be used in heading anchors\n *\n * @param  {string} string\n * @param  {() => string} [slugger] - reused slugger to track used slugs and\n *                                 ensure that new slug will be unique\n *\n * @return {string}\n */\n\n\nmodule.exports = function (string) {\n  var slugger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new GitHubSlugger();\n  return slugger.slug(string);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvU2x1Zy5qcyJdLCJuYW1lcyI6WyJHaXRIdWJTbHVnZ2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHJpbmciLCJzbHVnZ2VyIiwic2x1ZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUE3QjtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxNQUFELEVBQTJDO0FBQUEsTUFBbENDLE9BQWtDLHVFQUF4QixJQUFJTCxhQUFKLEVBQXdCO0FBQzFELFNBQU9LLE9BQU8sQ0FBQ0MsSUFBUixDQUFhRixNQUFiLENBQVA7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IEdpdEh1YlNsdWdnZXIgPSByZXF1aXJlKCdnaXRodWItc2x1Z2dlcicpO1xuXG4vKipcbiAqIENvbnZlcnRzIGEgc3RyaW5nIHRvIGEgc2x1ZywgdGhhdCBjYW4gYmUgdXNlZCBpbiBoZWFkaW5nIGFuY2hvcnNcbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0cmluZ1xuICogQHBhcmFtICB7KCkgPT4gc3RyaW5nfSBbc2x1Z2dlcl0gLSByZXVzZWQgc2x1Z2dlciB0byB0cmFjayB1c2VkIHNsdWdzIGFuZFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnN1cmUgdGhhdCBuZXcgc2x1ZyB3aWxsIGJlIHVuaXF1ZVxuICpcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSAoc3RyaW5nLCBzbHVnZ2VyID0gbmV3IEdpdEh1YlNsdWdnZXIoKSkgPT4ge1xuICByZXR1cm4gc2x1Z2dlci5zbHVnKHN0cmluZyk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "toSlug.js"
      ],
      "names": [
        "GitHubSlugger",
        "require",
        "module",
        "exports",
        "string",
        "slugger",
        "slug"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAACC,MAAD,EAA2C;AAAA,MAAlCC,OAAkC,uEAAxB,IAAIL,aAAJ,EAAwB;AAC1D,SAAOK,OAAO,CAACC,IAAR,CAAaF,MAAb,CAAP;AACD,CAFD",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst GitHubSlugger = require('github-slugger');\n\n/**\n * Converts a string to a slug, that can be used in heading anchors\n *\n * @param  {string} string\n * @param  {() => string} [slugger] - reused slugger to track used slugs and\n *                                 ensure that new slug will be unique\n *\n * @return {string}\n */\nmodule.exports = (string, slugger = new GitHubSlugger()) => {\n  return slugger.slug(string);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/utils.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/utils.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/utils.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/utils.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "utils.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar shell = require('shelljs');\n\nvar TRUNCATE_MARKER = /<!--\\s*truncate\\s*-->/;\n\nfunction blogPostHasTruncateMarker(content) {\n  return TRUNCATE_MARKER.test(content);\n}\n\nfunction extractBlogPostBeforeTruncate(content) {\n  return content.split(TRUNCATE_MARKER)[0];\n}\n\nfunction removeExtension(pathStr) {\n  return pathStr.replace(/\\.[^/.]+$/, '');\n}\n\nfunction getPath(pathStr) {\n  var cleanUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (!pathStr || !cleanUrl || !pathStr.endsWith('.html')) {\n    return pathStr;\n  }\n\n  return pathStr.endsWith('/index.html') ? pathStr.replace(/index\\.html$/, '') : removeExtension(pathStr);\n}\n\nfunction idx(target, keyPaths) {\n  return target && (Array.isArray(keyPaths) ? keyPaths.reduce(function (obj, key) {\n    return obj && obj[key];\n  }, target) : target[keyPaths]);\n}\n\nfunction getGitLastUpdated(filepath) {\n  var timestampAndAuthorRegex = /^(\\d+), (.+)$/;\n\n  function isTimestampAndAuthor(str) {\n    return timestampAndAuthorRegex.test(str);\n  }\n\n  function getTimestampAndAuthor(str) {\n    if (!str) {\n      return null;\n    }\n\n    var temp = str.match(timestampAndAuthorRegex);\n    return !temp || temp.length < 3 ? null : {\n      timestamp: temp[1],\n      author: temp[2]\n    };\n  } // Wrap in try/catch in case the shell commands fail (e.g. project doesn't use Git, etc).\n\n\n  try {\n    // To differentiate between content change and file renaming / moving, use --summary\n    // To follow the file history until before it is moved (when we create new version), use\n    // --follow.\n    var silentState = shell.config.silent; // Save old silent state.\n\n    shell.config.silent = true;\n    var result = shell.exec(\"git log --follow --summary --format=\\\"%ct, %an\\\" \\\"\".concat(filepath, \"\\\"\")).stdout.trim();\n    shell.config.silent = silentState; // Format the log results to be\n    // ['1234567890, Yangshun Tay', 'rename ...', '1234567880,\n    //  'Joel Marcey', 'move ...', '1234567870', '1234567860']\n\n    var records = result.toString('utf-8').replace(/\\n\\s*\\n/g, '\\n').split('\\n').filter(String);\n    var lastContentModifierCommit = records.find(function (item, index, arr) {\n      var currentItemIsTimestampAndAuthor = isTimestampAndAuthor(item);\n      var isLastTwoItem = index + 2 >= arr.length;\n      var nextItemIsTimestampAndAuthor = isTimestampAndAuthor(arr[index + 1]);\n      return currentItemIsTimestampAndAuthor && (isLastTwoItem || nextItemIsTimestampAndAuthor);\n    });\n    return lastContentModifierCommit ? getTimestampAndAuthor(lastContentModifierCommit) : null;\n  } catch (error) {\n    console.error(error);\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedTime(filepath) {\n  var commit = getGitLastUpdated(filepath);\n\n  if (commit && commit.timestamp) {\n    var date = new Date(parseInt(commit.timestamp, 10) * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedBy(filepath) {\n  var commit = getGitLastUpdated(filepath);\n  return commit ? commit.author : null;\n}\n\nmodule.exports = {\n  blogPostHasTruncateMarker: blogPostHasTruncateMarker,\n  extractBlogPostBeforeTruncate: extractBlogPostBeforeTruncate,\n  getGitLastUpdatedTime: getGitLastUpdatedTime,\n  getGitLastUpdatedBy: getGitLastUpdatedBy,\n  getPath: getPath,\n  removeExtension: removeExtension,\n  idx: idx\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzLmpzIl0sIm5hbWVzIjpbInNoZWxsIiwicmVxdWlyZSIsIlRSVU5DQVRFX01BUktFUiIsImJsb2dQb3N0SGFzVHJ1bmNhdGVNYXJrZXIiLCJjb250ZW50IiwidGVzdCIsImV4dHJhY3RCbG9nUG9zdEJlZm9yZVRydW5jYXRlIiwic3BsaXQiLCJyZW1vdmVFeHRlbnNpb24iLCJwYXRoU3RyIiwicmVwbGFjZSIsImdldFBhdGgiLCJjbGVhblVybCIsImVuZHNXaXRoIiwiaWR4IiwidGFyZ2V0Iiwia2V5UGF0aHMiLCJBcnJheSIsImlzQXJyYXkiLCJyZWR1Y2UiLCJvYmoiLCJrZXkiLCJnZXRHaXRMYXN0VXBkYXRlZCIsImZpbGVwYXRoIiwidGltZXN0YW1wQW5kQXV0aG9yUmVnZXgiLCJpc1RpbWVzdGFtcEFuZEF1dGhvciIsInN0ciIsImdldFRpbWVzdGFtcEFuZEF1dGhvciIsInRlbXAiLCJtYXRjaCIsImxlbmd0aCIsInRpbWVzdGFtcCIsImF1dGhvciIsInNpbGVudFN0YXRlIiwiY29uZmlnIiwic2lsZW50IiwicmVzdWx0IiwiZXhlYyIsInN0ZG91dCIsInRyaW0iLCJyZWNvcmRzIiwidG9TdHJpbmciLCJmaWx0ZXIiLCJTdHJpbmciLCJsYXN0Q29udGVudE1vZGlmaWVyQ29tbWl0IiwiZmluZCIsIml0ZW0iLCJpbmRleCIsImFyciIsImN1cnJlbnRJdGVtSXNUaW1lc3RhbXBBbmRBdXRob3IiLCJpc0xhc3RUd29JdGVtIiwibmV4dEl0ZW1Jc1RpbWVzdGFtcEFuZEF1dGhvciIsImVycm9yIiwiY29uc29sZSIsImdldEdpdExhc3RVcGRhdGVkVGltZSIsImNvbW1pdCIsImRhdGUiLCJEYXRlIiwicGFyc2VJbnQiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJnZXRHaXRMYXN0VXBkYXRlZEJ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFNQSxLQUFLLEdBQUdD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T2dDLE1BQU0sR0FBR0EsTUFBTSxDQUFDdkIsTUFBVixHQUFtQixJQUFoQztBQUNEOztBQUVENkIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2YzRCxFQUFBQSx5QkFBeUIsRUFBekJBLHlCQURlO0FBRWZHLEVBQUFBLDZCQUE2QixFQUE3QkEsNkJBRmU7QUFHZmdELEVBQUFBLHFCQUFxQixFQUFyQkEscUJBSGU7QUFJZk0sRUFBQUEsbUJBQW1CLEVBQW5CQSxtQkFKZTtBQUtmakQsRUFBQUEsT0FBTyxFQUFQQSxPQUxlO0FBTWZILEVBQUFBLGVBQWUsRUFBZkEsZUFOZTtBQU9mTSxFQUFBQSxHQUFHLEVBQUhBO0FBUGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbmNvbnN0IHNoZWxsID0gcmVxdWlyZSgnc2hlbGxqcycpO1xuXG5jb25zdCBUUlVOQ0FURV9NQVJLRVIgPSAvPCEtLVxccyp0cnVuY2F0ZVxccyotLT4vO1xuXG5mdW5jdGlvbiBibG9nUG9zdEhhc1RydW5jYXRlTWFya2VyKGNvbnRlbnQpIHtcbiAgcmV0dXJuIFRSVU5DQVRFX01BUktFUi50ZXN0KGNvbnRlbnQpO1xufVxuXG5mdW5jdGlvbiBleHRyYWN0QmxvZ1Bvc3RCZWZvcmVUcnVuY2F0ZShjb250ZW50KSB7XG4gIHJldHVybiBjb250ZW50LnNwbGl0KFRSVU5DQVRFX01BUktFUilbMF07XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUV4dGVuc2lvbihwYXRoU3RyKSB7XG4gIHJldHVybiBwYXRoU3RyLnJlcGxhY2UoL1xcLlteLy5dKyQvLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGdldFBhdGgocGF0aFN0ciwgY2xlYW5VcmwgPSBmYWxzZSkge1xuICBpZiAoIXBhdGhTdHIgfHwgIWNsZWFuVXJsIHx8ICFwYXRoU3RyLmVuZHNXaXRoKCcuaHRtbCcpKSB7XG4gICAgcmV0dXJuIHBhdGhTdHI7XG4gIH1cbiAgcmV0dXJuIHBhdGhTdHIuZW5kc1dpdGgoJy9pbmRleC5odG1sJylcbiAgICA/IHBhdGhTdHIucmVwbGFjZSgvaW5kZXhcXC5odG1sJC8sICcnKVxuICAgIDogcmVtb3ZlRXh0ZW5zaW9uKHBhdGhTdHIpO1xufVxuXG5mdW5jdGlvbiBpZHgodGFyZ2V0LCBrZXlQYXRocykge1xuICByZXR1cm4gKFxuICAgIHRhcmdldCAmJlxuICAgIChBcnJheS5pc0FycmF5KGtleVBhdGhzKVxuICAgICAgPyBrZXlQYXRocy5yZWR1Y2UoKG9iaiwga2V5KSA9PiBvYmogJiYgb2JqW2tleV0sIHRhcmdldClcbiAgICAgIDogdGFyZ2V0W2tleVBhdGhzXSlcbiAgKTtcbn1cblxuZnVuY3Rpb24gZ2V0R2l0TGFzdFVwZGF0ZWQoZmlsZXBhdGgpIHtcbiAgY29uc3QgdGltZXN0YW1wQW5kQXV0aG9yUmVnZXggPSAvXihcXGQrKSwgKC4rKSQvO1xuXG4gIGZ1bmN0aW9uIGlzVGltZXN0YW1wQW5kQXV0aG9yKHN0cikge1xuICAgIHJldHVybiB0aW1lc3RhbXBBbmRBdXRob3JSZWdleC50ZXN0KHN0cik7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRUaW1lc3RhbXBBbmRBdXRob3Ioc3RyKSB7XG4gICAgaWYgKCFzdHIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGNvbnN0IHRlbXAgPSBzdHIubWF0Y2godGltZXN0YW1wQW5kQXV0aG9yUmVnZXgpO1xuICAgIHJldHVybiAhdGVtcCB8fCB0ZW1wLmxlbmd0aCA8IDNcbiAgICAgID8gbnVsbFxuICAgICAgOiB7dGltZXN0YW1wOiB0ZW1wWzFdLCBhdXRob3I6IHRlbXBbMl19O1xuICB9XG5cbiAgLy8gV3JhcCBpbiB0cnkvY2F0Y2ggaW4gY2FzZSB0aGUgc2hlbGwgY29tbWFuZHMgZmFpbCAoZS5nLiBwcm9qZWN0IGRvZXNuJ3QgdXNlIEdpdCwgZXRjKS5cbiAgdHJ5IHtcbiAgICAvLyBUbyBkaWZmZXJlbnRpYXRlIGJldHdlZW4gY29udGVudCBjaGFuZ2UgYW5kIGZpbGUgcmVuYW1pbmcgLyBtb3ZpbmcsIHVzZSAtLXN1bW1hcnlcbiAgICAvLyBUbyBmb2xsb3cgdGhlIGZpbGUgaGlzdG9yeSB1bnRpbCBiZWZvcmUgaXQgaXMgbW92ZWQgKHdoZW4gd2UgY3JlYXRlIG5ldyB2ZXJzaW9uKSwgdXNlXG4gICAgLy8gLS1mb2xsb3cuXG4gICAgY29uc3Qgc2lsZW50U3RhdGUgPSBzaGVsbC5jb25maWcuc2lsZW50OyAvLyBTYXZlIG9sZCBzaWxlbnQgc3RhdGUuXG4gICAgc2hlbGwuY29uZmlnLnNpbGVudCA9IHRydWU7XG4gICAgY29uc3QgcmVzdWx0ID0gc2hlbGxcbiAgICAgIC5leGVjKGBnaXQgbG9nIC0tZm9sbG93IC0tc3VtbWFyeSAtLWZvcm1hdD1cIiVjdCwgJWFuXCIgXCIke2ZpbGVwYXRofVwiYClcbiAgICAgIC5zdGRvdXQudHJpbSgpO1xuICAgIHNoZWxsLmNvbmZpZy5zaWxlbnQgPSBzaWxlbnRTdGF0ZTtcblxuICAgIC8vIEZvcm1hdCB0aGUgbG9nIHJlc3VsdHMgdG8gYmVcbiAgICAvLyBbJzEyMzQ1Njc4OTAsIFlhbmdzaHVuIFRheScsICdyZW5hbWUgLi4uJywgJzEyMzQ1Njc4ODAsXG4gICAgLy8gICdKb2VsIE1hcmNleScsICdtb3ZlIC4uLicsICcxMjM0NTY3ODcwJywgJzEyMzQ1Njc4NjAnXVxuICAgIGNvbnN0IHJlY29yZHMgPSByZXN1bHRcbiAgICAgIC50b1N0cmluZygndXRmLTgnKVxuICAgICAgLnJlcGxhY2UoL1xcblxccypcXG4vZywgJ1xcbicpXG4gICAgICAuc3BsaXQoJ1xcbicpXG4gICAgICAuZmlsdGVyKFN0cmluZyk7XG4gICAgY29uc3QgbGFzdENvbnRlbnRNb2RpZmllckNvbW1pdCA9IHJlY29yZHMuZmluZCgoaXRlbSwgaW5kZXgsIGFycikgPT4ge1xuICAgICAgY29uc3QgY3VycmVudEl0ZW1Jc1RpbWVzdGFtcEFuZEF1dGhvciA9IGlzVGltZXN0YW1wQW5kQXV0aG9yKGl0ZW0pO1xuICAgICAgY29uc3QgaXNMYXN0VHdvSXRlbSA9IGluZGV4ICsgMiA+PSBhcnIubGVuZ3RoO1xuICAgICAgY29uc3QgbmV4dEl0ZW1Jc1RpbWVzdGFtcEFuZEF1dGhvciA9IGlzVGltZXN0YW1wQW5kQXV0aG9yKGFycltpbmRleCArIDFdKTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIGN1cnJlbnRJdGVtSXNUaW1lc3RhbXBBbmRBdXRob3IgJiZcbiAgICAgICAgKGlzTGFzdFR3b0l0ZW0gfHwgbmV4dEl0ZW1Jc1RpbWVzdGFtcEFuZEF1dGhvcilcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbGFzdENvbnRlbnRNb2RpZmllckNvbW1pdFxuICAgICAgPyBnZXRUaW1lc3RhbXBBbmRBdXRob3IobGFzdENvbnRlbnRNb2RpZmllckNvbW1pdClcbiAgICAgIDogbnVsbDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0R2l0TGFzdFVwZGF0ZWRUaW1lKGZpbGVwYXRoKSB7XG4gIGNvbnN0IGNvbW1pdCA9IGdldEdpdExhc3RVcGRhdGVkKGZpbGVwYXRoKTtcblxuICBpZiAoY29tbWl0ICYmIGNvbW1pdC50aW1lc3RhbXApIHtcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUocGFyc2VJbnQoY29tbWl0LnRpbWVzdGFtcCwgMTApICogMTAwMCk7XG4gICAgcmV0dXJuIGRhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0R2l0TGFzdFVwZGF0ZWRCeShmaWxlcGF0aCkge1xuICBjb25zdCBjb21taXQgPSBnZXRHaXRMYXN0VXBkYXRlZChmaWxlcGF0aCk7XG4gIHJldHVybiBjb21taXQgPyBjb21taXQuYXV0aG9yIDogbnVsbDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGJsb2dQb3N0SGFzVHJ1bmNhdGVNYXJrZXIsXG4gIGV4dHJhY3RCbG9nUG9zdEJlZm9yZVRydW5jYXRlLFxuICBnZXRHaXRMYXN0VXBkYXRlZFRpbWUsXG4gIGdldEdpdExhc3RVcGRhdGVkQnksXG4gIGdldFBhdGgsXG4gIHJlbW92ZUV4dGVuc2lvbixcbiAgaWR4LFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "utils.js"
      ],
      "names": [
        "shell",
        "require",
        "TRUNCATE_MARKER",
        "blogPostHasTruncateMarker",
        "content",
        "test",
        "extractBlogPostBeforeTruncate",
        "split",
        "removeExtension",
        "pathStr",
        "replace",
        "getPath",
        "cleanUrl",
        "endsWith",
        "idx",
        "target",
        "keyPaths",
        "Array",
        "isArray",
        "reduce",
        "obj",
        "key",
        "getGitLastUpdated",
        "filepath",
        "timestampAndAuthorRegex",
        "isTimestampAndAuthor",
        "str",
        "getTimestampAndAuthor",
        "temp",
        "match",
        "length",
        "timestamp",
        "author",
        "silentState",
        "config",
        "silent",
        "result",
        "exec",
        "stdout",
        "trim",
        "records",
        "toString",
        "filter",
        "String",
        "lastContentModifierCommit",
        "find",
        "item",
        "index",
        "arr",
        "currentItemIsTimestampAndAuthor",
        "isLastTwoItem",
        "nextItemIsTimestampAndAuthor",
        "error",
        "console",
        "getGitLastUpdatedTime",
        "commit",
        "date",
        "Date",
        "parseInt",
        "toLocaleDateString",
        "getGitLastUpdatedBy",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst shell = require('shelljs');\n\nconst TRUNCATE_MARKER = /<!--\\s*truncate\\s*-->/;\n\nfunction blogPostHasTruncateMarker(content) {\n  return TRUNCATE_MARKER.test(content);\n}\n\nfunction extractBlogPostBeforeTruncate(content) {\n  return content.split(TRUNCATE_MARKER)[0];\n}\n\nfunction removeExtension(pathStr) {\n  return pathStr.replace(/\\.[^/.]+$/, '');\n}\n\nfunction getPath(pathStr, cleanUrl = false) {\n  if (!pathStr || !cleanUrl || !pathStr.endsWith('.html')) {\n    return pathStr;\n  }\n  return pathStr.endsWith('/index.html')\n    ? pathStr.replace(/index\\.html$/, '')\n    : removeExtension(pathStr);\n}\n\nfunction idx(target, keyPaths) {\n  return (\n    target &&\n    (Array.isArray(keyPaths)\n      ? keyPaths.reduce((obj, key) => obj && obj[key], target)\n      : target[keyPaths])\n  );\n}\n\nfunction getGitLastUpdated(filepath) {\n  const timestampAndAuthorRegex = /^(\\d+), (.+)$/;\n\n  function isTimestampAndAuthor(str) {\n    return timestampAndAuthorRegex.test(str);\n  }\n\n  function getTimestampAndAuthor(str) {\n    if (!str) {\n      return null;\n    }\n\n    const temp = str.match(timestampAndAuthorRegex);\n    return !temp || temp.length < 3\n      ? null\n      : {timestamp: temp[1], author: temp[2]};\n  }\n\n  // Wrap in try/catch in case the shell commands fail (e.g. project doesn't use Git, etc).\n  try {\n    // To differentiate between content change and file renaming / moving, use --summary\n    // To follow the file history until before it is moved (when we create new version), use\n    // --follow.\n    const silentState = shell.config.silent; // Save old silent state.\n    shell.config.silent = true;\n    const result = shell\n      .exec(`git log --follow --summary --format=\"%ct, %an\" \"${filepath}\"`)\n      .stdout.trim();\n    shell.config.silent = silentState;\n\n    // Format the log results to be\n    // ['1234567890, Yangshun Tay', 'rename ...', '1234567880,\n    //  'Joel Marcey', 'move ...', '1234567870', '1234567860']\n    const records = result\n      .toString('utf-8')\n      .replace(/\\n\\s*\\n/g, '\\n')\n      .split('\\n')\n      .filter(String);\n    const lastContentModifierCommit = records.find((item, index, arr) => {\n      const currentItemIsTimestampAndAuthor = isTimestampAndAuthor(item);\n      const isLastTwoItem = index + 2 >= arr.length;\n      const nextItemIsTimestampAndAuthor = isTimestampAndAuthor(arr[index + 1]);\n      return (\n        currentItemIsTimestampAndAuthor &&\n        (isLastTwoItem || nextItemIsTimestampAndAuthor)\n      );\n    });\n\n    return lastContentModifierCommit\n      ? getTimestampAndAuthor(lastContentModifierCommit)\n      : null;\n  } catch (error) {\n    console.error(error);\n  }\n  return null;\n}\n\nfunction getGitLastUpdatedTime(filepath) {\n  const commit = getGitLastUpdated(filepath);\n\n  if (commit && commit.timestamp) {\n    const date = new Date(parseInt(commit.timestamp, 10) * 1000);\n    return date.toLocaleDateString();\n  }\n\n  return null;\n}\n\nfunction getGitLastUpdatedBy(filepath) {\n  const commit = getGitLastUpdated(filepath);\n  return commit ? commit.author : null;\n}\n\nmodule.exports = {\n  blogPostHasTruncateMarker,\n  extractBlogPostBeforeTruncate,\n  getGitLastUpdatedTime,\n  getGitLastUpdatedBy,\n  getPath,\n  removeExtension,\n  idx,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596045545000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Site.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Site.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Site.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Site.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "Site.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar fs = require('fs');\n\nvar classNames = require('classnames');\n\nvar HeaderNav = require('./nav/HeaderNav.js');\n\nvar Head = require('./Head.js');\n\nvar Footer = require(\"\".concat(process.cwd(), \"/core/Footer.js\"));\n\nvar translation = require('../server/translation.js');\n\nvar env = require('../server/env.js');\n\nvar liveReloadServer = require('../server/liveReloadServer.js');\n\nvar _require = require('./utils.js'),\n    idx = _require.idx,\n    getPath = _require.getPath;\n\nvar CWD = process.cwd(); // Component used to provide same head, header, footer, other scripts to all pages\n\nvar Site = /*#__PURE__*/function (_React$Component) {\n  _inherits(Site, _React$Component);\n\n  var _super = _createSuper(Site);\n\n  function Site() {\n    _classCallCheck(this, Site);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Site, [{\n    key: \"mobileNavHasOneRow\",\n    value: function mobileNavHasOneRow(headerLinks) {\n      var hasLanguageDropdown = env.translation.enabled && env.translation.enabledLanguages().length > 1;\n      var hasOrdinaryHeaderLinks = headerLinks.some(function (link) {\n        return !(link.languages || link.search);\n      });\n      return !(hasLanguageDropdown || hasOrdinaryHeaderLinks);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tagline = idx(translation, [this.props.language, 'localized-strings', 'tagline']) || this.props.config.tagline;\n      var title = this.props.title ? \"\".concat(this.props.title, \" \\xB7 \").concat(this.props.config.title) : !this.props.config.disableTitleTagline && \"\".concat(this.props.config.title, \" \\xB7 \").concat(tagline) || this.props.config.title;\n      var description = this.props.description || tagline;\n      var path = getPath(this.props.config.baseUrl + (this.props.url || 'index.html'), this.props.config.cleanUrl);\n      var url = this.props.config.url + path;\n      var docsVersion = this.props.version;\n      var liveReloadScriptUrl = liveReloadServer.getReloadScriptUrl();\n\n      if (!docsVersion && fs.existsSync(\"\".concat(CWD, \"/versions.json\"))) {\n        var latestVersion = require(\"\".concat(CWD, \"/versions.json\"))[0];\n\n        docsVersion = latestVersion;\n      }\n\n      var navPusherClasses = classNames('navPusher', {\n        singleRowMobileNav: this.mobileNavHasOneRow(this.props.config.headerLinks)\n      });\n      return /*#__PURE__*/React.createElement(\"html\", {\n        lang: this.props.language\n      }, /*#__PURE__*/React.createElement(Head, {\n        config: this.props.config,\n        description: description,\n        title: title,\n        url: url,\n        language: this.props.language,\n        version: this.props.version\n      }), /*#__PURE__*/React.createElement(\"body\", {\n        className: this.props.className\n      }, /*#__PURE__*/React.createElement(HeaderNav, {\n        config: this.props.config,\n        baseUrl: this.props.config.baseUrl,\n        title: this.props.config.title,\n        language: this.props.language,\n        version: this.props.version,\n        current: this.props.metadata\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: navPusherClasses\n      }, this.props.children, /*#__PURE__*/React.createElement(Footer, {\n        config: this.props.config,\n        language: this.props.language\n      })), this.props.config.algolia && /*#__PURE__*/React.createElement(\"script\", {\n        type: \"text/javascript\",\n        src: \"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js\"\n      }), this.props.config.facebookAppId && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"window.fbAsyncInit = function() {FB.init({appId:'\".concat(this.props.config.facebookAppId, \"',xfbml:true,version:'v2.7'});};(function(d, s, id){var js, fjs = d.getElementsByTagName(s)[0];if (d.getElementById(id)) {return;}js = d.createElement(s); js.id = id;js.src = '//connect.facebook.net/en_US/sdk.js';fjs.parentNode.insertBefore(js, fjs);}(document, 'script','facebook-jssdk'));\\n                \")\n        }\n      }), this.props.config.facebookPixelId && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              !function(f,b,e,v,n,t,s)\\n              {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\\n              n.callMethod.apply(n,arguments):n.queue.push(arguments)};\\n              if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\\n              n.queue=[];t=b.createElement(e);t.async=!0;\\n              t.src=v;s=b.getElementsByTagName(e)[0];\\n              s.parentNode.insertBefore(t,s)}(window, document,'script',\\n              'https://connect.facebook.net/en_US/fbevents.js');\\n              fbq('init', '\".concat(this.props.config.facebookPixelId, \"');\\n              fbq('track', 'PageView');\\n                \")\n        }\n      }), (this.props.config.twitter || this.props.config.twitterUsername) && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"window.twttr=(function(d,s, id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src='https://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js, fjs);t._e = [];t.ready = function(f) {t._e.push(f);};return t;}(document, 'script', 'twitter-wjs'));\"\n        }\n      }), this.props.config.algolia && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n                document.addEventListener('keyup', function(e) {\\n                  if (e.target !== document.body) {\\n                    return;\\n                  }\\n                  // keyCode for '/' (slash)\\n                  if (e.keyCode === 191) {\\n                    const search = document.getElementById('search_input_react');\\n                    search && search.focus();\\n                  }\\n                });\\n              \"\n        }\n      }), this.props.config.algolia && (this.props.config.algolia.algoliaOptions ? /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              var search = docsearch({\\n                \".concat(this.props.config.algolia.appId ? \"appId: '\".concat(this.props.config.algolia.appId, \"',\") : '', \"\\n                apiKey: '\").concat(this.props.config.algolia.apiKey, \"',\\n                indexName: '\").concat(this.props.config.algolia.indexName, \"',\\n                inputSelector: '#search_input_react',\\n                algoliaOptions: \").concat(JSON.stringify(this.props.config.algolia.algoliaOptions).replace('VERSION', docsVersion).replace('LANGUAGE', this.props.language), \"\\n              });\\n            \")\n        }\n      }) : /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              var search = docsearch({\\n                \".concat(this.props.config.algolia.appId ? \"appId: '\".concat(this.props.config.algolia.appId, \"',\") : '', \"\\n                apiKey: '\").concat(this.props.config.algolia.apiKey, \"',\\n                indexName: '\").concat(this.props.config.algolia.indexName, \"',\\n                inputSelector: '#search_input_react'\\n              });\\n            \")\n        }\n      })), process.env.NODE_ENV === 'development' && liveReloadScriptUrl && /*#__PURE__*/React.createElement(\"script\", {\n        src: liveReloadScriptUrl\n      })));\n    }\n  }]);\n\n  return Site;\n}(React.Component);\n\nmodule.exports = Site;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Site.js"
      ],
      "names": [
        "React",
        "require",
        "fs",
        "classNames",
        "HeaderNav",
        "Head",
        "Footer",
        "process",
        "cwd",
        "translation",
        "env",
        "liveReloadServer",
        "idx",
        "getPath",
        "CWD",
        "Site",
        "headerLinks",
        "hasLanguageDropdown",
        "enabled",
        "enabledLanguages",
        "length",
        "hasOrdinaryHeaderLinks",
        "some",
        "link",
        "languages",
        "search",
        "tagline",
        "props",
        "language",
        "config",
        "title",
        "disableTitleTagline",
        "description",
        "path",
        "baseUrl",
        "url",
        "cleanUrl",
        "docsVersion",
        "version",
        "liveReloadScriptUrl",
        "getReloadScriptUrl",
        "existsSync",
        "latestVersion",
        "navPusherClasses",
        "singleRowMobileNav",
        "mobileNavHasOneRow",
        "className",
        "metadata",
        "children",
        "algolia",
        "facebookAppId",
        "__html",
        "facebookPixelId",
        "twitter",
        "twitterUsername",
        "algoliaOptions",
        "appId",
        "apiKey",
        "indexName",
        "JSON",
        "stringify",
        "replace",
        "NODE_ENV",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst fs = require('fs');\nconst classNames = require('classnames');\n\nconst HeaderNav = require('./nav/HeaderNav.js');\nconst Head = require('./Head.js');\n\nconst Footer = require(`${process.cwd()}/core/Footer.js`);\nconst translation = require('../server/translation.js');\nconst env = require('../server/env.js');\nconst liveReloadServer = require('../server/liveReloadServer.js');\nconst {idx, getPath} = require('./utils.js');\n\nconst CWD = process.cwd();\n\n// Component used to provide same head, header, footer, other scripts to all pages\nclass Site extends React.Component {\n  mobileNavHasOneRow(headerLinks) {\n    const hasLanguageDropdown =\n      env.translation.enabled && env.translation.enabledLanguages().length > 1;\n    const hasOrdinaryHeaderLinks = headerLinks.some(\n      (link) => !(link.languages || link.search),\n    );\n    return !(hasLanguageDropdown || hasOrdinaryHeaderLinks);\n  }\n\n  render() {\n    const tagline =\n      idx(translation, [this.props.language, 'localized-strings', 'tagline']) ||\n      this.props.config.tagline;\n    const title = this.props.title\n      ? `${this.props.title} · ${this.props.config.title}`\n      : (!this.props.config.disableTitleTagline &&\n          `${this.props.config.title} · ${tagline}`) ||\n        this.props.config.title;\n    const description = this.props.description || tagline;\n    const path = getPath(\n      this.props.config.baseUrl + (this.props.url || 'index.html'),\n      this.props.config.cleanUrl,\n    );\n    const url = this.props.config.url + path;\n    let docsVersion = this.props.version;\n\n    const liveReloadScriptUrl = liveReloadServer.getReloadScriptUrl();\n\n    if (!docsVersion && fs.existsSync(`${CWD}/versions.json`)) {\n      const latestVersion = require(`${CWD}/versions.json`)[0];\n      docsVersion = latestVersion;\n    }\n\n    const navPusherClasses = classNames('navPusher', {\n      singleRowMobileNav: this.mobileNavHasOneRow(\n        this.props.config.headerLinks,\n      ),\n    });\n\n    return (\n      <html lang={this.props.language}>\n        <Head\n          config={this.props.config}\n          description={description}\n          title={title}\n          url={url}\n          language={this.props.language}\n          version={this.props.version}\n        />\n        <body className={this.props.className}>\n          <HeaderNav\n            config={this.props.config}\n            baseUrl={this.props.config.baseUrl}\n            title={this.props.config.title}\n            language={this.props.language}\n            version={this.props.version}\n            current={this.props.metadata}\n          />\n          <div className={navPusherClasses}>\n            {this.props.children}\n            <Footer config={this.props.config} language={this.props.language} />\n          </div>\n          {this.props.config.algolia && (\n            <script\n              type=\"text/javascript\"\n              src=\"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.js\"\n            />\n          )}\n          {this.props.config.facebookAppId && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `window.fbAsyncInit = function() {FB.init({appId:'${this.props.config.facebookAppId}',xfbml:true,version:'v2.7'});};(function(d, s, id){var js, fjs = d.getElementsByTagName(s)[0];if (d.getElementById(id)) {return;}js = d.createElement(s); js.id = id;js.src = '//connect.facebook.net/en_US/sdk.js';fjs.parentNode.insertBefore(js, fjs);}(document, 'script','facebook-jssdk'));\n                `,\n              }}\n            />\n          )}\n          {this.props.config.facebookPixelId && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `\n              !function(f,b,e,v,n,t,s)\n              {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n              n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n              if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n              n.queue=[];t=b.createElement(e);t.async=!0;\n              t.src=v;s=b.getElementsByTagName(e)[0];\n              s.parentNode.insertBefore(t,s)}(window, document,'script',\n              'https://connect.facebook.net/en_US/fbevents.js');\n              fbq('init', '${this.props.config.facebookPixelId}');\n              fbq('track', 'PageView');\n                `,\n              }}\n            />\n          )}\n          {(this.props.config.twitter || this.props.config.twitterUsername) && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `window.twttr=(function(d,s, id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src='https://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js, fjs);t._e = [];t.ready = function(f) {t._e.push(f);};return t;}(document, 'script', 'twitter-wjs'));`,\n              }}\n            />\n          )}\n          {this.props.config.algolia && (\n            <script\n              dangerouslySetInnerHTML={{\n                __html: `\n                document.addEventListener('keyup', function(e) {\n                  if (e.target !== document.body) {\n                    return;\n                  }\n                  // keyCode for '/' (slash)\n                  if (e.keyCode === 191) {\n                    const search = document.getElementById('search_input_react');\n                    search && search.focus();\n                  }\n                });\n              `,\n              }}\n            />\n          )}\n          {this.props.config.algolia &&\n            (this.props.config.algolia.algoliaOptions ? (\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `\n              var search = docsearch({\n                ${\n                  this.props.config.algolia.appId\n                    ? `appId: '${this.props.config.algolia.appId}',`\n                    : ''\n                }\n                apiKey: '${this.props.config.algolia.apiKey}',\n                indexName: '${this.props.config.algolia.indexName}',\n                inputSelector: '#search_input_react',\n                algoliaOptions: ${JSON.stringify(\n                  this.props.config.algolia.algoliaOptions,\n                )\n                  .replace('VERSION', docsVersion)\n                  .replace('LANGUAGE', this.props.language)}\n              });\n            `,\n                }}\n              />\n            ) : (\n              <script\n                dangerouslySetInnerHTML={{\n                  __html: `\n              var search = docsearch({\n                ${\n                  this.props.config.algolia.appId\n                    ? `appId: '${this.props.config.algolia.appId}',`\n                    : ''\n                }\n                apiKey: '${this.props.config.algolia.apiKey}',\n                indexName: '${this.props.config.algolia.indexName}',\n                inputSelector: '#search_input_react'\n              });\n            `,\n                }}\n              />\n            ))}\n\n          {process.env.NODE_ENV === 'development' && liveReloadScriptUrl && (\n            <script src={liveReloadScriptUrl} />\n          )}\n        </body>\n      </html>\n    );\n  }\n}\nmodule.exports = Site;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/HeaderNav.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/HeaderNav.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/HeaderNav.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/HeaderNav.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
        "sourceFileName": "HeaderNav.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar CWD = process.cwd();\n\nvar React = require('react');\n\nvar fs = require('fs');\n\nvar classNames = require('classnames');\n\nvar loadConfig = require('../../server/config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar translation = require('../../server/translation.js');\n\nvar env = require('../../server/env.js');\n\nvar translate = require('../../server/translate.js').translate;\n\nvar setLanguage = require('../../server/translate.js').setLanguage;\n\nvar readMetadata = require('../../server/readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\n\nvar Metadata = require('../metadata.js');\n\nvar _require = require('../utils.js'),\n    idx = _require.idx,\n    getPath = _require.getPath;\n\nvar extension = siteConfig.cleanUrl ? '' : '.html'; // language dropdown nav item for when translations are enabled\n\nvar LanguageDropDown = /*#__PURE__*/function (_React$Component) {\n  _inherits(LanguageDropDown, _React$Component);\n\n  var _super = _createSuper(LanguageDropDown);\n\n  function LanguageDropDown() {\n    _classCallCheck(this, LanguageDropDown);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LanguageDropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      setLanguage(this.props.language || 'en');\n      var helpTranslateString = translate('Help Translate|recruit community translators for your project');\n      var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : ''); // add all enabled languages to dropdown\n\n      var enabledLanguages = env.translation.enabledLanguages().filter(function (lang) {\n        return lang.tag !== _this.props.language;\n      }).map(function (lang) {\n        // build the href so that we try to stay in current url but change the language.\n        var href = siteConfig.baseUrl + lang.tag;\n\n        if (_this.props.current && _this.props.current.permalink && _this.props.language) {\n          href = siteConfig.baseUrl + _this.props.current.permalink.replace(new RegExp(\"^\".concat(docsPart).concat(_this.props.language, \"/\")), \"\".concat(docsPart).concat(lang.tag, \"/\"));\n        } else if (_this.props.current.id && _this.props.current.id !== 'index') {\n          href = \"\".concat(siteConfig.baseUrl + lang.tag, \"/\").concat(_this.props.current.id);\n        }\n\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: lang.tag\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: getPath(href, _this.props.cleanUrl)\n        }, lang.name));\n      }); // if no languages are enabled besides English, return null\n\n      if (enabledLanguages.length < 1) {\n        return null;\n      } // Get the current language full name for display in the header nav\n\n\n      var currentLanguage = env.translation.enabledLanguages().filter(function (lang) {\n        return lang.tag === _this.props.language;\n      }).map(function (lang) {\n        return lang.name;\n      }); // add Crowdin project recruiting link\n\n      if (siteConfig.translationRecruitingLink) {\n        enabledLanguages.push( /*#__PURE__*/React.createElement(\"li\", {\n          key: \"recruiting\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: siteConfig.translationRecruitingLink,\n          target: \"_blank\",\n          rel: \"noreferrer noopener\"\n        }, helpTranslateString)));\n      }\n\n      return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"li\", {\n        key: \"languages\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        id: \"languages-menu\",\n        href: \"#\"\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"languages-icon\",\n        src: \"\".concat(this.props.baseUrl, \"img/language.svg\"),\n        alt: \"Languages icon\"\n      }), currentLanguage), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"languages-dropdown\",\n        className: \"hide\"\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        id: \"languages-dropdown-items\"\n      }, enabledLanguages))), /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n        const languagesMenuItem = document.getElementById(\\\"languages-menu\\\");\\n        const languagesDropDown = document.getElementById(\\\"languages-dropdown\\\");\\n        languagesMenuItem.addEventListener(\\\"click\\\", function(event) {\\n          event.preventDefault();\\n\\n          if (languagesDropDown.className == \\\"hide\\\") {\\n            languagesDropDown.className = \\\"visible\\\";\\n          } else {\\n            languagesDropDown.className = \\\"hide\\\";\\n          }\\n        });\\n      \"\n        }\n      }));\n    }\n  }]);\n\n  return LanguageDropDown;\n}(React.Component); // header navbar used by all pages generated with docusaurus\n\n\nvar HeaderNav = /*#__PURE__*/function (_React$Component2) {\n  _inherits(HeaderNav, _React$Component2);\n\n  var _super2 = _createSuper(HeaderNav);\n\n  function HeaderNav() {\n    _classCallCheck(this, HeaderNav);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(HeaderNav, [{\n    key: \"makeLinks\",\n    // function to generate each header link, used with each object in siteConfig.headerLinks\n    value: function makeLinks(link) {\n      var href;\n      var docItemActive = false;\n      var docGroupActive = false;\n\n      if (link.search && this.props.config.algolia) {\n        // return algolia search bar\n        var placeholder = this.props.config.algolia.placeholder || 'Search';\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"navSearchWrapper reactNavSearchWrapper\",\n          key: \"search\"\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          id: \"search_input_react\",\n          type: \"text\",\n          placeholder: placeholder,\n          title: placeholder\n        }));\n      }\n\n      if (link.languages) {\n        if (env.translation.enabled && env.translation.enabledLanguages().length > 1) {\n          return /*#__PURE__*/React.createElement(LanguageDropDown, {\n            baseUrl: this.props.baseUrl,\n            language: this.props.language,\n            current: this.props.current,\n            cleanUrl: this.props.config.cleanUrl,\n            key: \"languagedropdown\"\n          });\n        }\n\n        return null;\n      }\n\n      if (link.doc) {\n        // set link to document with current page's language/version\n        var langPart = env.translation.enabled ? \"\".concat(this.props.language || 'en', \"-\") : '';\n        var versionPart = env.versioning.enabled && this.props.version !== 'next' ? \"version-\".concat(this.props.version || env.versioning.defaultVersion, \"-\") : '';\n        var id = langPart + versionPart + link.doc;\n\n        if (!Metadata[id]) {\n          var errorStr = \"Processing the following `doc` field in `headerLinks` within `siteConfig.js`: '\".concat(link.doc, \"'\");\n\n          if (id === link.doc) {\n            errorStr += ' It looks like there is no document with that id that exists in your docs directory. Please double check the spelling of your `doc` field and the `id` fields of your docs.';\n          } else {\n            errorStr += \"\".concat('. Check the spelling of your `doc` field. If that seems sane, and a document in your docs folder exists with that `id` value, \\nthen this is likely a bug in Docusaurus.' + ' Docusaurus thinks one or both of translations (currently set to: ').concat(env.translation.enabled, \") or versioning (currently set to: \").concat(env.versioning.enabled, \") is enabled when maybe they should not be. \\nThus my internal id for this doc is: '\").concat(id, \"'. Please file an issue for this possible bug on GitHub.\");\n          }\n\n          throw new Error(errorStr);\n        }\n\n        href = this.props.config.baseUrl + getPath(Metadata[id].permalink, this.props.config.cleanUrl);\n        var _this$props$current = this.props.current,\n            currentID = _this$props$current.id,\n            sidebar = _this$props$current.sidebar;\n        docItemActive = currentID && currentID === id;\n        docGroupActive = sidebar && sidebar === Metadata[id].sidebar;\n      } else if (link.page) {\n        // set link to page with current page's language if appropriate\n        var language = this.props.language || '';\n\n        if (fs.existsSync(\"\".concat(CWD, \"/pages/en/\").concat(link.page, \".js\"))) {\n          href = siteConfig.baseUrl + (env.translation.enabled ? \"\".concat(language, \"/\") : '') + link.page + extension;\n        } else {\n          href = siteConfig.baseUrl + link.page + extension;\n        }\n      } else if (link.href) {\n        // set link to specified href\n        href = link.href;\n      } else if (link.blog) {\n        // set link to blog url\n        href = \"\".concat(this.props.baseUrl, \"blog/\");\n      }\n\n      var itemClasses = classNames({\n        siteNavGroupActive: link.doc && docGroupActive || link.blog && this.props.current.blog,\n        siteNavItemActive: docItemActive || link.blog && this.props.current.blogListing || link.page && link.page === this.props.current.id\n      });\n      var i18n = translation[this.props.language];\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: \"\".concat(link.label, \"page\"),\n        className: itemClasses\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: href,\n        target: link.external ? '_blank' : '_self'\n      }, idx(i18n, ['localized-strings', 'links', link.label]) || link.label));\n    }\n  }, {\n    key: \"renderResponsiveNav\",\n    value: function renderResponsiveNav() {\n      var headerLinks = this.props.config.headerLinks; // add language drop down to end if location not specified\n\n      var languages = false;\n      headerLinks.forEach(function (link) {\n        if (link.languages) {\n          languages = true;\n        }\n      });\n\n      if (!languages) {\n        headerLinks.push({\n          languages: true\n        });\n      }\n\n      var search = false;\n      headerLinks.forEach(function (link) {\n        if (link.doc && !fs.existsSync(\"\".concat(CWD, \"/../\").concat(readMetadata.getDocsPath(), \"/\"))) {\n          throw new Error(\"You have 'doc' in your headerLinks, but no '\".concat(readMetadata.getDocsPath(), \"' folder exists one level up from \") + \"'website' folder. Did you run `docusaurus-init` or `npm run examples`? If so, \" + \"make sure you rename 'docs-examples-from-docusaurus' to 'docs'.\");\n        }\n\n        if (link.blog && !fs.existsSync(\"\".concat(CWD, \"/blog/\"))) {\n          throw new Error(\"You have 'blog' in your headerLinks, but no 'blog' folder exists in your \" + \"'website' folder. Did you run `docusaurus-init` or `npm run examples`? If so, \" + \"make sure you rename 'blog-examples-from-docusaurus' to 'blog'.\");\n        }\n\n        if (link.page && !fs.existsSync(\"\".concat(CWD, \"/pages/\"))) {\n          throw new Error(\"You have 'page' in your headerLinks, but no 'pages' folder exists in your \" + \"'website' folder.\");\n        } // We will add search bar to end if location not specified\n\n\n        if (link.search) {\n          search = true;\n        }\n      });\n\n      if (!search && this.props.config.algolia) {\n        headerLinks.push({\n          search: true\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navigationWrapper navigationSlider\"\n      }, /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"slidingNav\"\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav-site nav-site-internal\"\n      }, headerLinks.map(this.makeLinks, this))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var headerClass = siteConfig.headerIcon ? 'headerTitleWithLogo' : 'headerTitle';\n      var versionsLink = this.props.baseUrl + (env.translation.enabled ? \"\".concat(this.props.language, \"/versions\").concat(extension) : \"versions\".concat(extension));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fixedHeaderContainer\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"headerWrapper wrapper\"\n      }, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.baseUrl + (env.translation.enabled ? this.props.language : '')\n      }, siteConfig.headerIcon && /*#__PURE__*/React.createElement(\"img\", {\n        className: \"logo\",\n        src: this.props.baseUrl + siteConfig.headerIcon,\n        alt: siteConfig.title\n      }), !this.props.config.disableHeaderTitle && /*#__PURE__*/React.createElement(\"h2\", {\n        className: headerClass\n      }, this.props.title)), env.versioning.enabled && /*#__PURE__*/React.createElement(\"a\", {\n        href: versionsLink\n      }, /*#__PURE__*/React.createElement(\"h3\", null, this.props.version || env.versioning.defaultVersion)), this.renderResponsiveNav())));\n    }\n  }]);\n\n  return HeaderNav;\n}(React.Component);\n\nHeaderNav.defaultProps = {\n  current: {}\n};\nmodule.exports = HeaderNav;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "HeaderNav.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "React",
        "require",
        "fs",
        "classNames",
        "loadConfig",
        "siteConfig",
        "translation",
        "env",
        "translate",
        "setLanguage",
        "readMetadata",
        "generateMetadataDocs",
        "Metadata",
        "idx",
        "getPath",
        "extension",
        "cleanUrl",
        "LanguageDropDown",
        "props",
        "language",
        "helpTranslateString",
        "docsPart",
        "docsUrl",
        "enabledLanguages",
        "filter",
        "lang",
        "tag",
        "map",
        "href",
        "baseUrl",
        "current",
        "permalink",
        "replace",
        "RegExp",
        "id",
        "name",
        "length",
        "currentLanguage",
        "translationRecruitingLink",
        "push",
        "__html",
        "Component",
        "HeaderNav",
        "link",
        "docItemActive",
        "docGroupActive",
        "search",
        "config",
        "algolia",
        "placeholder",
        "languages",
        "enabled",
        "doc",
        "langPart",
        "versionPart",
        "versioning",
        "version",
        "defaultVersion",
        "errorStr",
        "Error",
        "currentID",
        "sidebar",
        "page",
        "existsSync",
        "blog",
        "itemClasses",
        "siteNavGroupActive",
        "siteNavItemActive",
        "blogListing",
        "i18n",
        "label",
        "external",
        "headerLinks",
        "forEach",
        "getDocsPath",
        "makeLinks",
        "headerClass",
        "headerIcon",
        "versionsLink",
        "title",
        "disableHeaderTitle",
        "renderResponsiveNav",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAMG,UAAU,GAAGH,OAAO,CAAC,qBAAD,CAA1B;;AAEA,IAAMI,UAAU,GAAGD,UAAU,WAAIP,GAAJ,oBAA7B;;AACA,IAAMS,WAAW,GAAGL,OAAO,CAAC,6BAAD,CAA3B;;AACA,IAAMM,GAAG,GAAGN,OAAO,CAAC,qBAAD,CAAnB;;AAEA,IAAMO,SAAS,GAAGP,OAAO,CAAC,2BAAD,CAAP,CAAqCO,SAAvD;;AACA,IAAMC,WAAW,GAAGR,OAAO,CAAC,2BAAD,CAAP,CAAqCQ,WAAzD;;AAEA,IAAMC,YAAY,GAAGT,OAAO,CAAC,8BAAD,CAA5B;;AAEAS,YAAY,CAACC,oBAAb;;AACA,IAAMC,QAAQ,GAAGX,OAAO,CAAC,gBAAD,CAAxB;;eACuBA,OAAO,CAAC,aAAD,C;IAAvBY,G,YAAAA,G;IAAKC,O,YAAAA,O;;AAEZ,IAAMC,SAAS,GAAGV,UAAU,CAACW,QAAX,GAAsB,EAAtB,GAA2B,OAA7C,C,CAEA;;IACMC,gB;;;;;;;;;;;;;6BACK;AAAA;;AACPR,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWC,QAAX,IAAuB,IAAxB,CAAX;AACA,UAAMC,mBAAmB,GAAGZ,SAAS,CACnC,+DADmC,CAArC;AAGA,UAAMa,QAAQ,aAAMhB,UAAU,CAACiB,OAAX,aAAwBjB,UAAU,CAACiB,OAAnC,SAAgD,EAAtD,CAAd,CALO,CAMP;;AACA,UAAMC,gBAAgB,GAAGhB,GAAG,CAACD,WAAJ,CACtBiB,gBADsB,GAEtBC,MAFsB,CAEf,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,GAAL,KAAa,KAAI,CAACR,KAAL,CAAWC,QAAlC;AAAA,OAFe,EAGtBQ,GAHsB,CAGlB,UAACF,IAAD,EAAU;AACb;AACA,YAAIG,IAAI,GAAGvB,UAAU,CAACwB,OAAX,GAAqBJ,IAAI,CAACC,GAArC;;AACA,YACE,KAAI,CAACR,KAAL,CAAWY,OAAX,IACA,KAAI,CAACZ,KAAL,CAAWY,OAAX,CAAmBC,SADnB,IAEA,KAAI,CAACb,KAAL,CAAWC,QAHb,EAIE;AACAS,UAAAA,IAAI,GACFvB,UAAU,CAACwB,OAAX,GACA,KAAI,CAACX,KAAL,CAAWY,OAAX,CAAmBC,SAAnB,CAA6BC,OAA7B,CACE,IAAIC,MAAJ,YAAeZ,QAAf,SAA0B,KAAI,CAACH,KAAL,CAAWC,QAArC,OADF,YAEKE,QAFL,SAEgBI,IAAI,CAACC,GAFrB,OAFF;AAMD,SAXD,MAWO,IAAI,KAAI,CAACR,KAAL,CAAWY,OAAX,CAAmBI,EAAnB,IAAyB,KAAI,CAAChB,KAAL,CAAWY,OAAX,CAAmBI,EAAnB,KAA0B,OAAvD,EAAgE;AACrEN,UAAAA,IAAI,aAAMvB,UAAU,CAACwB,OAAX,GAAqBJ,IAAI,CAACC,GAAhC,cAAuC,KAAI,CAACR,KAAL,CAAWY,OAAX,CAAmBI,EAA1D,CAAJ;AACD;;AACD,4BACE;AAAI,UAAA,GAAG,EAAET,IAAI,CAACC;AAAd,wBACE;AAAG,UAAA,IAAI,EAAEZ,OAAO,CAACc,IAAD,EAAO,KAAI,CAACV,KAAL,CAAWF,QAAlB;AAAhB,WAA8CS,IAAI,CAACU,IAAnD,CADF,CADF;AAKD,OAzBsB,CAAzB,CAPO,CAiCP;;AACA,UAAIZ,gBAAgB,CAACa,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,eAAO,IAAP;AACD,OApCM,CAsCP;;;AACA,UAAMC,eAAe,GAAG9B,GAAG,CAACD,WAAJ,CACrBiB,gBADqB,GAErBC,MAFqB,CAEd,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,GAAL,KAAa,KAAI,CAACR,KAAL,CAAWC,QAAlC;AAAA,OAFc,EAGrBQ,GAHqB,CAGjB,UAACF,IAAD;AAAA,eAAUA,IAAI,CAACU,IAAf;AAAA,OAHiB,CAAxB,CAvCO,CA4CP;;AACA,UAAI9B,UAAU,CAACiC,yBAAf,EAA0C;AACxCf,QAAAA,gBAAgB,CAACgB,IAAjB,eACE;AAAI,UAAA,GAAG,EAAC;AAAR,wBACE;AACE,UAAA,IAAI,EAAElC,UAAU,CAACiC,yBADnB;AAEE,UAAA,MAAM,EAAC,QAFT;AAGE,UAAA,GAAG,EAAC;AAHN,WAIGlB,mBAJH,CADF,CADF;AAUD;;AAED,0BACE,+CACE;AAAI,QAAA,GAAG,EAAC;AAAR,sBACE;AAAG,QAAA,EAAE,EAAC,gBAAN;AAAuB,QAAA,IAAI,EAAC;AAA5B,sBACE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,GAAG,YAAK,KAAKF,KAAL,CAAWW,OAAhB,qBAFL;AAGE,QAAA,GAAG,EAAC;AAHN,QADF,EAMGQ,eANH,CADF,eASE;AAAK,QAAA,EAAE,EAAC,oBAAR;AAA6B,QAAA,SAAS,EAAC;AAAvC,sBACE;AAAI,QAAA,EAAE,EAAC;AAAP,SAAmCd,gBAAnC,CADF,CATF,CADF,eAcE;AACE,QAAA,uBAAuB,EAAE;AACvBiB,UAAAA,MAAM;AADiB;AAD3B,QAdF,CADF;AAkCD;;;;EA7F4BxC,KAAK,CAACyC,S,GAgGrC;;;IACMC,S;;;;;;;;;;;;;AACJ;8BACUC,I,EAAM;AACd,UAAIf,IAAJ;AACA,UAAIgB,aAAa,GAAG,KAApB;AACA,UAAIC,cAAc,GAAG,KAArB;;AACA,UAAIF,IAAI,CAACG,MAAL,IAAe,KAAK5B,KAAL,CAAW6B,MAAX,CAAkBC,OAArC,EAA8C;AAC5C;AACA,YAAMC,WAAW,GAAG,KAAK/B,KAAL,CAAW6B,MAAX,CAAkBC,OAAlB,CAA0BC,WAA1B,IAAyC,QAA7D;AACA,4BACE;AAAI,UAAA,SAAS,EAAC,wCAAd;AAAuD,UAAA,GAAG,EAAC;AAA3D,wBACE;AACE,UAAA,EAAE,EAAC,oBADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAEA,WAHf;AAIE,UAAA,KAAK,EAAEA;AAJT,UADF,CADF;AAUD;;AACD,UAAIN,IAAI,CAACO,SAAT,EAAoB;AAClB,YACE3C,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,IACA5C,GAAG,CAACD,WAAJ,CAAgBiB,gBAAhB,GAAmCa,MAAnC,GAA4C,CAF9C,EAGE;AACA,8BACE,oBAAC,gBAAD;AACE,YAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWW,OADtB;AAEE,YAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,QAFvB;AAGE,YAAA,OAAO,EAAE,KAAKD,KAAL,CAAWY,OAHtB;AAIE,YAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAW6B,MAAX,CAAkB/B,QAJ9B;AAKE,YAAA,GAAG,EAAC;AALN,YADF;AASD;;AACD,eAAO,IAAP;AACD;;AACD,UAAI2B,IAAI,CAACS,GAAT,EAAc;AACZ;AACA,YAAMC,QAAQ,GAAG9C,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,aACV,KAAKjC,KAAL,CAAWC,QAAX,IAAuB,IADb,SAEb,EAFJ;AAGA,YAAMmC,WAAW,GACf/C,GAAG,CAACgD,UAAJ,CAAeJ,OAAf,IAA0B,KAAKjC,KAAL,CAAWsC,OAAX,KAAuB,MAAjD,qBACe,KAAKtC,KAAL,CAAWsC,OAAX,IAAsBjD,GAAG,CAACgD,UAAJ,CAAeE,cADpD,SAEI,EAHN;AAIA,YAAMvB,EAAE,GAAGmB,QAAQ,GAAGC,WAAX,GAAyBX,IAAI,CAACS,GAAzC;;AACA,YAAI,CAACxC,QAAQ,CAACsB,EAAD,CAAb,EAAmB;AACjB,cAAIwB,QAAQ,4FAA2Ff,IAAI,CAACS,GAAhG,MAAZ;;AACA,cAAIlB,EAAE,KAAKS,IAAI,CAACS,GAAhB,EAAqB;AACnBM,YAAAA,QAAQ,IACN,6KADF;AAED,WAHD,MAGO;AACLA,YAAAA,QAAQ,cACN,6KACA,oEAFM,SAGLnD,GAAG,CAACD,WAAJ,CAAgB6C,OAHX,gDAIN5C,GAAG,CAACgD,UAAJ,CAAeJ,OAJT,iGAK+EjB,EAL/E,6DAAR;AAMD;;AACD,gBAAM,IAAIyB,KAAJ,CAAUD,QAAV,CAAN;AACD;;AACD9B,QAAAA,IAAI,GACF,KAAKV,KAAL,CAAW6B,MAAX,CAAkBlB,OAAlB,GACAf,OAAO,CAACF,QAAQ,CAACsB,EAAD,CAAR,CAAaH,SAAd,EAAyB,KAAKb,KAAL,CAAW6B,MAAX,CAAkB/B,QAA3C,CAFT;AAzBY,kCA6BqB,KAAKE,KAAL,CAAWY,OA7BhC;AAAA,YA6BD8B,SA7BC,uBA6BL1B,EA7BK;AAAA,YA6BU2B,OA7BV,uBA6BUA,OA7BV;AA8BZjB,QAAAA,aAAa,GAAGgB,SAAS,IAAIA,SAAS,KAAK1B,EAA3C;AACAW,QAAAA,cAAc,GAAGgB,OAAO,IAAIA,OAAO,KAAKjD,QAAQ,CAACsB,EAAD,CAAR,CAAa2B,OAArD;AACD,OAhCD,MAgCO,IAAIlB,IAAI,CAACmB,IAAT,EAAe;AACpB;AACA,YAAM3C,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,IAAuB,EAAxC;;AACA,YAAIjB,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,uBAAiC8C,IAAI,CAACmB,IAAtC,SAAJ,EAAsD;AACpDlC,UAAAA,IAAI,GACFvB,UAAU,CAACwB,OAAX,IACCtB,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,aAA6BhC,QAA7B,SAA2C,EAD5C,IAEAwB,IAAI,CAACmB,IAFL,GAGA/C,SAJF;AAKD,SAND,MAMO;AACLa,UAAAA,IAAI,GAAGvB,UAAU,CAACwB,OAAX,GAAqBc,IAAI,CAACmB,IAA1B,GAAiC/C,SAAxC;AACD;AACF,OAZM,MAYA,IAAI4B,IAAI,CAACf,IAAT,EAAe;AACpB;AACAA,QAAAA,IAAI,GAAGe,IAAI,CAACf,IAAZ;AACD,OAHM,MAGA,IAAIe,IAAI,CAACqB,IAAT,EAAe;AACpB;AACApC,QAAAA,IAAI,aAAM,KAAKV,KAAL,CAAWW,OAAjB,UAAJ;AACD;;AACD,UAAMoC,WAAW,GAAG9D,UAAU,CAAC;AAC7B+D,QAAAA,kBAAkB,EACfvB,IAAI,CAACS,GAAL,IAAYP,cAAb,IAAiCF,IAAI,CAACqB,IAAL,IAAa,KAAK9C,KAAL,CAAWY,OAAX,CAAmBkC,IAFtC;AAG7BG,QAAAA,iBAAiB,EACfvB,aAAa,IACZD,IAAI,CAACqB,IAAL,IAAa,KAAK9C,KAAL,CAAWY,OAAX,CAAmBsC,WADjC,IAECzB,IAAI,CAACmB,IAAL,IAAanB,IAAI,CAACmB,IAAL,KAAc,KAAK5C,KAAL,CAAWY,OAAX,CAAmBI;AANpB,OAAD,CAA9B;AAQA,UAAMmC,IAAI,GAAG/D,WAAW,CAAC,KAAKY,KAAL,CAAWC,QAAZ,CAAxB;AACA,0BACE;AAAI,QAAA,GAAG,YAAKwB,IAAI,CAAC2B,KAAV,SAAP;AAA8B,QAAA,SAAS,EAAEL;AAAzC,sBACE;AAAG,QAAA,IAAI,EAAErC,IAAT;AAAe,QAAA,MAAM,EAAEe,IAAI,CAAC4B,QAAL,GAAgB,QAAhB,GAA2B;AAAlD,SACG1D,GAAG,CAACwD,IAAD,EAAO,CAAC,mBAAD,EAAsB,OAAtB,EAA+B1B,IAAI,CAAC2B,KAApC,CAAP,CAAH,IAAyD3B,IAAI,CAAC2B,KADjE,CADF,CADF;AAOD;;;0CAEqB;AACpB,UAAME,WAAW,GAAG,KAAKtD,KAAL,CAAW6B,MAAX,CAAkByB,WAAtC,CADoB,CAEpB;;AACA,UAAItB,SAAS,GAAG,KAAhB;AACAsB,MAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAC9B,IAAD,EAAU;AAC5B,YAAIA,IAAI,CAACO,SAAT,EAAoB;AAClBA,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF,OAJD;;AAKA,UAAI,CAACA,SAAL,EAAgB;AACdsB,QAAAA,WAAW,CAACjC,IAAZ,CAAiB;AAACW,UAAAA,SAAS,EAAE;AAAZ,SAAjB;AACD;;AACD,UAAIJ,MAAM,GAAG,KAAb;AACA0B,MAAAA,WAAW,CAACC,OAAZ,CAAoB,UAAC9B,IAAD,EAAU;AAC5B,YACEA,IAAI,CAACS,GAAL,IACA,CAAClD,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,iBAA2Ba,YAAY,CAACgE,WAAb,EAA3B,OAFH,EAGE;AACA,gBAAM,IAAIf,KAAJ,CACJ,sDAA+CjD,YAAY,CAACgE,WAAb,EAA/C,8LADI,CAAN;AAKD;;AACD,YAAI/B,IAAI,CAACqB,IAAL,IAAa,CAAC9D,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,YAAlB,EAAiD;AAC/C,gBAAM,IAAI8D,KAAJ,CACJ,8EACE,gFADF,GAEE,iEAHE,CAAN;AAKD;;AACD,YAAIhB,IAAI,CAACmB,IAAL,IAAa,CAAC5D,EAAE,CAAC6D,UAAH,WAAiBlE,GAAjB,aAAlB,EAAkD;AAChD,gBAAM,IAAI8D,KAAJ,CACJ,+EACE,mBAFE,CAAN;AAID,SAvB2B,CAwB5B;;;AACA,YAAIhB,IAAI,CAACG,MAAT,EAAiB;AACfA,UAAAA,MAAM,GAAG,IAAT;AACD;AACF,OA5BD;;AA6BA,UAAI,CAACA,MAAD,IAAW,KAAK5B,KAAL,CAAW6B,MAAX,CAAkBC,OAAjC,EAA0C;AACxCwB,QAAAA,WAAW,CAACjC,IAAZ,CAAiB;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAjB;AACD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAI,QAAA,SAAS,EAAC;AAAd,SACG0B,WAAW,CAAC7C,GAAZ,CAAgB,KAAKgD,SAArB,EAAgC,IAAhC,CADH,CADF,CADF,CADF;AASD;;;6BAEQ;AACP,UAAMC,WAAW,GAAGvE,UAAU,CAACwE,UAAX,GAChB,qBADgB,GAEhB,aAFJ;AAGA,UAAMC,YAAY,GAChB,KAAK5D,KAAL,CAAWW,OAAX,IACCtB,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,aACM,KAAKjC,KAAL,CAAWC,QADjB,sBACqCJ,SADrC,sBAEcA,SAFd,CADD,CADF;AAKA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,iDACE;AACE,QAAA,IAAI,EACF,KAAKG,KAAL,CAAWW,OAAX,IACCtB,GAAG,CAACD,WAAJ,CAAgB6C,OAAhB,GAA0B,KAAKjC,KAAL,CAAWC,QAArC,GAAgD,EADjD;AAFJ,SAKGd,UAAU,CAACwE,UAAX,iBACC;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,GAAG,EAAE,KAAK3D,KAAL,CAAWW,OAAX,GAAqBxB,UAAU,CAACwE,UAFvC;AAGE,QAAA,GAAG,EAAExE,UAAU,CAAC0E;AAHlB,QANJ,EAYG,CAAC,KAAK7D,KAAL,CAAW6B,MAAX,CAAkBiC,kBAAnB,iBACC;AAAI,QAAA,SAAS,EAAEJ;AAAf,SAA6B,KAAK1D,KAAL,CAAW6D,KAAxC,CAbJ,CADF,EAiBGxE,GAAG,CAACgD,UAAJ,CAAeJ,OAAf,iBACC;AAAG,QAAA,IAAI,EAAE2B;AAAT,sBACE,gCAAK,KAAK5D,KAAL,CAAWsC,OAAX,IAAsBjD,GAAG,CAACgD,UAAJ,CAAeE,cAA1C,CADF,CAlBJ,EAsBG,KAAKwB,mBAAL,EAtBH,CADF,CADF,CADF;AA8BD;;;;EAzMqBjF,KAAK,CAACyC,S;;AA4M9BC,SAAS,CAACwC,YAAV,GAAyB;AACvBpD,EAAAA,OAAO,EAAE;AADc,CAAzB;AAIAqD,MAAM,CAACC,OAAP,GAAiB1C,SAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst CWD = process.cwd();\n\nconst React = require('react');\nconst fs = require('fs');\nconst classNames = require('classnames');\n\nconst loadConfig = require('../../server/config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\nconst translation = require('../../server/translation.js');\nconst env = require('../../server/env.js');\n\nconst translate = require('../../server/translate.js').translate;\nconst setLanguage = require('../../server/translate.js').setLanguage;\n\nconst readMetadata = require('../../server/readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\nconst Metadata = require('../metadata.js');\nconst {idx, getPath} = require('../utils.js');\n\nconst extension = siteConfig.cleanUrl ? '' : '.html';\n\n// language dropdown nav item for when translations are enabled\nclass LanguageDropDown extends React.Component {\n  render() {\n    setLanguage(this.props.language || 'en');\n    const helpTranslateString = translate(\n      'Help Translate|recruit community translators for your project',\n    );\n    const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n    // add all enabled languages to dropdown\n    const enabledLanguages = env.translation\n      .enabledLanguages()\n      .filter((lang) => lang.tag !== this.props.language)\n      .map((lang) => {\n        // build the href so that we try to stay in current url but change the language.\n        let href = siteConfig.baseUrl + lang.tag;\n        if (\n          this.props.current &&\n          this.props.current.permalink &&\n          this.props.language\n        ) {\n          href =\n            siteConfig.baseUrl +\n            this.props.current.permalink.replace(\n              new RegExp(`^${docsPart}${this.props.language}/`),\n              `${docsPart}${lang.tag}/`,\n            );\n        } else if (this.props.current.id && this.props.current.id !== 'index') {\n          href = `${siteConfig.baseUrl + lang.tag}/${this.props.current.id}`;\n        }\n        return (\n          <li key={lang.tag}>\n            <a href={getPath(href, this.props.cleanUrl)}>{lang.name}</a>\n          </li>\n        );\n      });\n    // if no languages are enabled besides English, return null\n    if (enabledLanguages.length < 1) {\n      return null;\n    }\n\n    // Get the current language full name for display in the header nav\n    const currentLanguage = env.translation\n      .enabledLanguages()\n      .filter((lang) => lang.tag === this.props.language)\n      .map((lang) => lang.name);\n\n    // add Crowdin project recruiting link\n    if (siteConfig.translationRecruitingLink) {\n      enabledLanguages.push(\n        <li key=\"recruiting\">\n          <a\n            href={siteConfig.translationRecruitingLink}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\">\n            {helpTranslateString}\n          </a>\n        </li>,\n      );\n    }\n\n    return (\n      <span>\n        <li key=\"languages\">\n          <a id=\"languages-menu\" href=\"#\">\n            <img\n              className=\"languages-icon\"\n              src={`${this.props.baseUrl}img/language.svg`}\n              alt=\"Languages icon\"\n            />\n            {currentLanguage}\n          </a>\n          <div id=\"languages-dropdown\" className=\"hide\">\n            <ul id=\"languages-dropdown-items\">{enabledLanguages}</ul>\n          </div>\n        </li>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n        const languagesMenuItem = document.getElementById(\"languages-menu\");\n        const languagesDropDown = document.getElementById(\"languages-dropdown\");\n        languagesMenuItem.addEventListener(\"click\", function(event) {\n          event.preventDefault();\n\n          if (languagesDropDown.className == \"hide\") {\n            languagesDropDown.className = \"visible\";\n          } else {\n            languagesDropDown.className = \"hide\";\n          }\n        });\n      `,\n          }}\n        />\n      </span>\n    );\n  }\n}\n\n// header navbar used by all pages generated with docusaurus\nclass HeaderNav extends React.Component {\n  // function to generate each header link, used with each object in siteConfig.headerLinks\n  makeLinks(link) {\n    let href;\n    let docItemActive = false;\n    let docGroupActive = false;\n    if (link.search && this.props.config.algolia) {\n      // return algolia search bar\n      const placeholder = this.props.config.algolia.placeholder || 'Search';\n      return (\n        <li className=\"navSearchWrapper reactNavSearchWrapper\" key=\"search\">\n          <input\n            id=\"search_input_react\"\n            type=\"text\"\n            placeholder={placeholder}\n            title={placeholder}\n          />\n        </li>\n      );\n    }\n    if (link.languages) {\n      if (\n        env.translation.enabled &&\n        env.translation.enabledLanguages().length > 1\n      ) {\n        return (\n          <LanguageDropDown\n            baseUrl={this.props.baseUrl}\n            language={this.props.language}\n            current={this.props.current}\n            cleanUrl={this.props.config.cleanUrl}\n            key=\"languagedropdown\"\n          />\n        );\n      }\n      return null;\n    }\n    if (link.doc) {\n      // set link to document with current page's language/version\n      const langPart = env.translation.enabled\n        ? `${this.props.language || 'en'}-`\n        : '';\n      const versionPart =\n        env.versioning.enabled && this.props.version !== 'next'\n          ? `version-${this.props.version || env.versioning.defaultVersion}-`\n          : '';\n      const id = langPart + versionPart + link.doc;\n      if (!Metadata[id]) {\n        let errorStr = `Processing the following \\`doc\\` field in \\`headerLinks\\` within \\`siteConfig.js\\`: '${link.doc}'`;\n        if (id === link.doc) {\n          errorStr +=\n            ' It looks like there is no document with that id that exists in your docs directory. Please double check the spelling of your `doc` field and the `id` fields of your docs.';\n        } else {\n          errorStr += `${\n            '. Check the spelling of your `doc` field. If that seems sane, and a document in your docs folder exists with that `id` value, \\nthen this is likely a bug in Docusaurus.' +\n            ' Docusaurus thinks one or both of translations (currently set to: '\n          }${env.translation.enabled}) or versioning (currently set to: ${\n            env.versioning.enabled\n          }) is enabled when maybe they should not be. \\nThus my internal id for this doc is: '${id}'. Please file an issue for this possible bug on GitHub.`;\n        }\n        throw new Error(errorStr);\n      }\n      href =\n        this.props.config.baseUrl +\n        getPath(Metadata[id].permalink, this.props.config.cleanUrl);\n\n      const {id: currentID, sidebar} = this.props.current;\n      docItemActive = currentID && currentID === id;\n      docGroupActive = sidebar && sidebar === Metadata[id].sidebar;\n    } else if (link.page) {\n      // set link to page with current page's language if appropriate\n      const language = this.props.language || '';\n      if (fs.existsSync(`${CWD}/pages/en/${link.page}.js`)) {\n        href =\n          siteConfig.baseUrl +\n          (env.translation.enabled ? `${language}/` : '') +\n          link.page +\n          extension;\n      } else {\n        href = siteConfig.baseUrl + link.page + extension;\n      }\n    } else if (link.href) {\n      // set link to specified href\n      href = link.href;\n    } else if (link.blog) {\n      // set link to blog url\n      href = `${this.props.baseUrl}blog/`;\n    }\n    const itemClasses = classNames({\n      siteNavGroupActive:\n        (link.doc && docGroupActive) || (link.blog && this.props.current.blog),\n      siteNavItemActive:\n        docItemActive ||\n        (link.blog && this.props.current.blogListing) ||\n        (link.page && link.page === this.props.current.id),\n    });\n    const i18n = translation[this.props.language];\n    return (\n      <li key={`${link.label}page`} className={itemClasses}>\n        <a href={href} target={link.external ? '_blank' : '_self'}>\n          {idx(i18n, ['localized-strings', 'links', link.label]) || link.label}\n        </a>\n      </li>\n    );\n  }\n\n  renderResponsiveNav() {\n    const headerLinks = this.props.config.headerLinks;\n    // add language drop down to end if location not specified\n    let languages = false;\n    headerLinks.forEach((link) => {\n      if (link.languages) {\n        languages = true;\n      }\n    });\n    if (!languages) {\n      headerLinks.push({languages: true});\n    }\n    let search = false;\n    headerLinks.forEach((link) => {\n      if (\n        link.doc &&\n        !fs.existsSync(`${CWD}/../${readMetadata.getDocsPath()}/`)\n      ) {\n        throw new Error(\n          `You have 'doc' in your headerLinks, but no '${readMetadata.getDocsPath()}' folder exists one level up from ` +\n            `'website' folder. Did you run \\`docusaurus-init\\` or \\`npm run examples\\`? If so, ` +\n            `make sure you rename 'docs-examples-from-docusaurus' to 'docs'.`,\n        );\n      }\n      if (link.blog && !fs.existsSync(`${CWD}/blog/`)) {\n        throw new Error(\n          \"You have 'blog' in your headerLinks, but no 'blog' folder exists in your \" +\n            \"'website' folder. Did you run `docusaurus-init` or `npm run examples`? If so, \" +\n            \"make sure you rename 'blog-examples-from-docusaurus' to 'blog'.\",\n        );\n      }\n      if (link.page && !fs.existsSync(`${CWD}/pages/`)) {\n        throw new Error(\n          \"You have 'page' in your headerLinks, but no 'pages' folder exists in your \" +\n            \"'website' folder.\",\n        );\n      }\n      // We will add search bar to end if location not specified\n      if (link.search) {\n        search = true;\n      }\n    });\n    if (!search && this.props.config.algolia) {\n      headerLinks.push({search: true});\n    }\n    return (\n      <div className=\"navigationWrapper navigationSlider\">\n        <nav className=\"slidingNav\">\n          <ul className=\"nav-site nav-site-internal\">\n            {headerLinks.map(this.makeLinks, this)}\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n\n  render() {\n    const headerClass = siteConfig.headerIcon\n      ? 'headerTitleWithLogo'\n      : 'headerTitle';\n    const versionsLink =\n      this.props.baseUrl +\n      (env.translation.enabled\n        ? `${this.props.language}/versions${extension}`\n        : `versions${extension}`);\n    return (\n      <div className=\"fixedHeaderContainer\">\n        <div className=\"headerWrapper wrapper\">\n          <header>\n            <a\n              href={\n                this.props.baseUrl +\n                (env.translation.enabled ? this.props.language : '')\n              }>\n              {siteConfig.headerIcon && (\n                <img\n                  className=\"logo\"\n                  src={this.props.baseUrl + siteConfig.headerIcon}\n                  alt={siteConfig.title}\n                />\n              )}\n              {!this.props.config.disableHeaderTitle && (\n                <h2 className={headerClass}>{this.props.title}</h2>\n              )}\n            </a>\n            {env.versioning.enabled && (\n              <a href={versionsLink}>\n                <h3>{this.props.version || env.versioning.defaultVersion}</h3>\n              </a>\n            )}\n            {this.renderResponsiveNav()}\n          </header>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeaderNav.defaultProps = {\n  current: {},\n};\n\nmodule.exports = HeaderNav;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translation.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translation.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translation.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "translation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// translation object contains all translations for each string in i18n/en.json\nvar CWD = process.cwd();\n\nvar fs = require('fs');\n\nvar glob = require('glob');\n\nvar path = require('path');\n\nvar languages;\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar enabledLanguages = languages.filter(function (lang) {\n  return lang.enabled;\n});\nvar translation = {\n  languages: enabledLanguages\n};\nvar files = glob.sync(\"\".concat(CWD, \"/i18n/**\"));\nvar langRegex = /\\/i18n\\/(.*)\\.json$/;\nfiles.forEach(function (file) {\n  var extension = path.extname(file);\n\n  if (extension === '.json') {\n    var match = langRegex.exec(file);\n    var language = match[1];\n    translation[language] = require(file);\n  }\n});\nmodule.exports = translation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0aW9uLmpzIl0sIm5hbWVzIjpbIkNXRCIsInByb2Nlc3MiLCJjd2QiLCJmcyIsInJlcXVpcmUiLCJnbG9iIiwicGF0aCIsImxhbmd1YWdlcyIsImV4aXN0c1N5bmMiLCJlbmFibGVkIiwibmFtZSIsInRhZyIsImVuYWJsZWRMYW5ndWFnZXMiLCJmaWx0ZXIiLCJsYW5nIiwidHJhbnNsYXRpb24iLCJmaWxlcyIsInN5bmMiLCJsYW5nUmVnZXgiLCJmb3JFYWNoIiwiZmlsZSIsImV4dGVuc2lvbiIsImV4dG5hbWUiLCJtYXRjaCIsImV4ZWMiLCJsYW5ndWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQSxJQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUNBLElBQU1DLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBLElBQUlHLFNBQUo7O0FBQ0EsSUFBSUosRUFBRSxDQUFDSyxVQUFILFdBQWlCUixHQUFqQixtQkFBSixFQUEwQztBQUN4Q08sRUFBQUEsU0FBUyxHQUFHSCxPQUFPLFdBQUlKLEdBQUosbUJBQW5CO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xPLEVBQUFBLFNBQVMsR0FBRyxDQUNWO0FBQ0VFLElBQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLElBQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLElBQUFBLEdBQUcsRUFBRTtBQUhQLEdBRFUsQ0FBWjtBQU9EOztBQUVELElBQU1DLGdCQUFnQixHQUFHTCxTQUFTLENBQUNNLE1BQVYsQ0FBaUIsVUFBQ0MsSUFBRDtBQUFBLFNBQVVBLElBQUksQ0FBQ0wsT0FBZjtBQUFBLENBQWpCLENBQXpCO0FBRUEsSUFBTU0sV0FBVyxHQUFHO0FBQUNSLEVBQUFBLFNBQVMsRUFBRUs7QUFBWixDQUFwQjtBQUVBLElBQU1JLEtBQUssR0FBR1gsSUFBSSxDQUFDWSxJQUFMLFdBQWFqQixHQUFiLGNBQWQ7QUFDQSxJQUFNa0IsU0FBUyxHQUFHLHFCQUFsQjtBQUVBRixLQUFLLENBQUNHLE9BQU4sQ0FBYyxVQUFDQyxJQUFELEVBQVU7QUFDdEIsTUFBTUMsU0FBUyxHQUFHZixJQUFJLENBQUNnQixPQUFMLENBQWFGLElBQWIsQ0FBbEI7O0FBQ0EsTUFBSUMsU0FBUyxLQUFLLE9BQWxCLEVBQTJCO0FBQ3pCLFFBQU1FLEtBQUssR0FBR0wsU0FBUyxDQUFDTSxJQUFWLENBQWVKLElBQWYsQ0FBZDtBQUNBLFFBQU1LLFFBQVEsR0FBR0YsS0FBSyxDQUFDLENBQUQsQ0FBdEI7QUFDQVIsSUFBQUEsV0FBVyxDQUFDVSxRQUFELENBQVgsR0FBd0JyQixPQUFPLENBQUNnQixJQUFELENBQS9CO0FBQ0Q7QUFDRixDQVBEO0FBU0FNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlosV0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyB0cmFuc2xhdGlvbiBvYmplY3QgY29udGFpbnMgYWxsIHRyYW5zbGF0aW9ucyBmb3IgZWFjaCBzdHJpbmcgaW4gaTE4bi9lbi5qc29uXG5cbmNvbnN0IENXRCA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBnbG9iID0gcmVxdWlyZSgnZ2xvYicpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubGV0IGxhbmd1YWdlcztcbmlmIChmcy5leGlzdHNTeW5jKGAke0NXRH0vbGFuZ3VhZ2VzLmpzYCkpIHtcbiAgbGFuZ3VhZ2VzID0gcmVxdWlyZShgJHtDV0R9L2xhbmd1YWdlcy5qc2ApO1xufSBlbHNlIHtcbiAgbGFuZ3VhZ2VzID0gW1xuICAgIHtcbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICBuYW1lOiAnRW5nbGlzaCcsXG4gICAgICB0YWc6ICdlbicsXG4gICAgfSxcbiAgXTtcbn1cblxuY29uc3QgZW5hYmxlZExhbmd1YWdlcyA9IGxhbmd1YWdlcy5maWx0ZXIoKGxhbmcpID0+IGxhbmcuZW5hYmxlZCk7XG5cbmNvbnN0IHRyYW5zbGF0aW9uID0ge2xhbmd1YWdlczogZW5hYmxlZExhbmd1YWdlc307XG5cbmNvbnN0IGZpbGVzID0gZ2xvYi5zeW5jKGAke0NXRH0vaTE4bi8qKmApO1xuY29uc3QgbGFuZ1JlZ2V4ID0gL1xcL2kxOG5cXC8oLiopXFwuanNvbiQvO1xuXG5maWxlcy5mb3JFYWNoKChmaWxlKSA9PiB7XG4gIGNvbnN0IGV4dGVuc2lvbiA9IHBhdGguZXh0bmFtZShmaWxlKTtcbiAgaWYgKGV4dGVuc2lvbiA9PT0gJy5qc29uJykge1xuICAgIGNvbnN0IG1hdGNoID0gbGFuZ1JlZ2V4LmV4ZWMoZmlsZSk7XG4gICAgY29uc3QgbGFuZ3VhZ2UgPSBtYXRjaFsxXTtcbiAgICB0cmFuc2xhdGlvbltsYW5ndWFnZV0gPSByZXF1aXJlKGZpbGUpO1xuICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSB0cmFuc2xhdGlvbjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "translation.js"
      ],
      "names": [
        "CWD",
        "process",
        "cwd",
        "fs",
        "require",
        "glob",
        "path",
        "languages",
        "existsSync",
        "enabled",
        "name",
        "tag",
        "enabledLanguages",
        "filter",
        "lang",
        "translation",
        "files",
        "sync",
        "langRegex",
        "forEach",
        "file",
        "extension",
        "extname",
        "match",
        "exec",
        "language",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEA,IAAIG,SAAJ;;AACA,IAAIJ,EAAE,CAACK,UAAH,WAAiBR,GAAjB,mBAAJ,EAA0C;AACxCO,EAAAA,SAAS,GAAGH,OAAO,WAAIJ,GAAJ,mBAAnB;AACD,CAFD,MAEO;AACLO,EAAAA,SAAS,GAAG,CACV;AACEE,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADU,CAAZ;AAOD;;AAED,IAAMC,gBAAgB,GAAGL,SAAS,CAACM,MAAV,CAAiB,UAACC,IAAD;AAAA,SAAUA,IAAI,CAACL,OAAf;AAAA,CAAjB,CAAzB;AAEA,IAAMM,WAAW,GAAG;AAACR,EAAAA,SAAS,EAAEK;AAAZ,CAApB;AAEA,IAAMI,KAAK,GAAGX,IAAI,CAACY,IAAL,WAAajB,GAAb,cAAd;AACA,IAAMkB,SAAS,GAAG,qBAAlB;AAEAF,KAAK,CAACG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,MAAMC,SAAS,GAAGf,IAAI,CAACgB,OAAL,CAAaF,IAAb,CAAlB;;AACA,MAAIC,SAAS,KAAK,OAAlB,EAA2B;AACzB,QAAME,KAAK,GAAGL,SAAS,CAACM,IAAV,CAAeJ,IAAf,CAAd;AACA,QAAMK,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAAtB;AACAR,IAAAA,WAAW,CAACU,QAAD,CAAX,GAAwBrB,OAAO,CAACgB,IAAD,CAA/B;AACD;AACF,CAPD;AASAM,MAAM,CAACC,OAAP,GAAiBZ,WAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// translation object contains all translations for each string in i18n/en.json\n\nconst CWD = process.cwd();\nconst fs = require('fs');\nconst glob = require('glob');\nconst path = require('path');\n\nlet languages;\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nconst enabledLanguages = languages.filter((lang) => lang.enabled);\n\nconst translation = {languages: enabledLanguages};\n\nconst files = glob.sync(`${CWD}/i18n/**`);\nconst langRegex = /\\/i18n\\/(.*)\\.json$/;\n\nfiles.forEach((file) => {\n  const extension = path.extname(file);\n  if (extension === '.json') {\n    const match = langRegex.exec(file);\n    const language = match[1];\n    translation[language] = require(file);\n  }\n});\n\nmodule.exports = translation;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translate.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translate.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translate.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/translate.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "translate.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar translation = require('./translation.js');\n\nvar language = 'en';\n/* handle escaped characters that get converted into json strings */\n\nfunction parseEscapeSequences(str) {\n  return str.replace(new RegExp('\\\\\\\\n', 'g'), '\\n').replace(new RegExp('\\\\\\\\b', 'g'), '\\b').replace(new RegExp('\\\\\\\\f', 'g'), '\\f').replace(new RegExp('\\\\\\\\r', 'g'), '\\r').replace(new RegExp('\\\\\\\\t', 'g'), '\\t').replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\").replace(new RegExp('\\\\\\\\\"', 'g'), '\"').replace(new RegExp('\\\\\\\\', 'g'), '\\\\');\n}\n\nfunction setLanguage(lang) {\n  language = lang;\n}\n\nfunction doesTranslationExist(str, lang) {\n  return translation[lang] && translation[lang]['pages-strings'] && translation[lang]['pages-strings'][str];\n}\n\nfunction translate(str) {\n  if (!language || language === '') {\n    // Check English, just in case; otherwise, just return the raw string back\n    if (doesTranslationExist(str, 'en')) {\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n\n    return str;\n  }\n\n  if (!doesTranslationExist(str, language)) {\n    // if a translated string doesn't exist, but english does then fallback\n    if (doesTranslationExist(str, 'en')) {\n      console.error(\"Could not find a string translation in '\".concat(language, \"' for string '\").concat(str, \"'. Using English version instead.\"));\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n\n    throw new Error(\"Text that you've identified for translation ('\".concat(str, \"') hasn't been added to the global list in 'en.json'. To solve this problem run 'yarn write-translations'.\"));\n  }\n\n  return parseEscapeSequences(translation[language]['pages-strings'][str]);\n}\n\nmodule.exports = {\n  setLanguage: setLanguage,\n  translate: translate\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zbGF0ZS5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGlvbiIsInJlcXVpcmUiLCJsYW5ndWFnZSIsInBhcnNlRXNjYXBlU2VxdWVuY2VzIiwic3RyIiwicmVwbGFjZSIsIlJlZ0V4cCIsInNldExhbmd1YWdlIiwibGFuZyIsImRvZXNUcmFuc2xhdGlvbkV4aXN0IiwidHJhbnNsYXRlIiwiZW4iLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsa0JBQUQsQ0FBM0I7O0FBRUEsSUFBSUMsUUFBUSxHQUFHLElBQWY7QUFFQTs7QUFDQSxTQUFTQyxvQkFBVCxDQUE4QkMsR0FBOUIsRUFBbUM7QUFDakMsU0FBT0EsR0FBRyxDQUNQQyxPQURJLENBQ0ksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FESixFQUM4QixJQUQ5QixFQUVKRCxPQUZJLENBRUksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FGSixFQUU4QixJQUY5QixFQUdKRCxPQUhJLENBR0ksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FISixFQUc4QixJQUg5QixFQUlKRCxPQUpJLENBSUksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FKSixFQUk4QixJQUo5QixFQUtKRCxPQUxJLENBS0ksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FMSixFQUs4QixJQUw5QixFQU1KRCxPQU5JLENBTUksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FOSixFQU04QixHQU45QixFQU9KRCxPQVBJLENBT0ksSUFBSUMsTUFBSixDQUFXLE9BQVgsRUFBb0IsR0FBcEIsQ0FQSixFQU84QixHQVA5QixFQVFKRCxPQVJJLENBUUksSUFBSUMsTUFBSixDQUFXLE1BQVgsRUFBbUIsR0FBbkIsQ0FSSixFQVE2QixJQVI3QixDQUFQO0FBU0Q7O0FBRUQsU0FBU0MsV0FBVCxDQUFxQkMsSUFBckIsRUFBMkI7QUFDekJOLEVBQUFBLFFBQVEsR0FBR00sSUFBWDtBQUNEOztBQUVELFNBQVNDLG9CQUFULENBQThCTCxHQUE5QixFQUFtQ0ksSUFBbkMsRUFBeUM7QUFDdkMsU0FDRVIsV0FBVyxDQUFDUSxJQUFELENBQVgsSUFDQVIsV0FBVyxDQUFDUSxJQUFELENBQVgsQ0FBa0IsZUFBbEIsQ0FEQSxJQUVBUixXQUFXLENBQUNRLElBQUQsQ0FBWCxDQUFrQixlQUFsQixFQUFtQ0osR0FBbkMsQ0FIRjtBQUtEOztBQUVELFNBQVNNLFNBQVQsQ0FBbUJOLEdBQW5CLEVBQXdCO0FBQ3RCLE1BQUksQ0FBQ0YsUUFBRCxJQUFhQSxRQUFRLEtBQUssRUFBOUIsRUFBa0M7QUFDaEM7QUFDQSxRQUFJTyxvQkFBb0IsQ0FBQ0wsR0FBRCxFQUFNLElBQU4sQ0FBeEIsRUFBcUM7QUFDbkMsYUFBT0Qsb0JBQW9CLENBQUNILFdBQVcsQ0FBQ1csRUFBWixDQUFlLGVBQWYsRUFBZ0NQLEdBQWhDLENBQUQsQ0FBM0I7QUFDRDs7QUFDRCxXQUFPQSxHQUFQO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDSyxvQkFBb0IsQ0FBQ0wsR0FBRCxFQUFNRixRQUFOLENBQXpCLEVBQTBDO0FBQ3hDO0FBQ0EsUUFBSU8sb0JBQW9CLENBQUNMLEdBQUQsRUFBTSxJQUFOLENBQXhCLEVBQXFDO0FBQ25DUSxNQUFBQSxPQUFPLENBQUNDLEtBQVIsbURBQzZDWCxRQUQ3QywyQkFDc0VFLEdBRHRFO0FBSUEsYUFBT0Qsb0JBQW9CLENBQUNILFdBQVcsQ0FBQ1csRUFBWixDQUFlLGVBQWYsRUFBZ0NQLEdBQWhDLENBQUQsQ0FBM0I7QUFDRDs7QUFDRCxVQUFNLElBQUlVLEtBQUoseURBQzZDVixHQUQ3QyxnSEFBTjtBQUdEOztBQUNELFNBQU9ELG9CQUFvQixDQUFDSCxXQUFXLENBQUNFLFFBQUQsQ0FBWCxDQUFzQixlQUF0QixFQUF1Q0UsR0FBdkMsQ0FBRCxDQUEzQjtBQUNEOztBQUVEVyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZlQsRUFBQUEsV0FBVyxFQUFYQSxXQURlO0FBRWZHLEVBQUFBLFNBQVMsRUFBVEE7QUFGZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9iZmMvYmZjL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHRyYW5zbGF0aW9uID0gcmVxdWlyZSgnLi90cmFuc2xhdGlvbi5qcycpO1xuXG5sZXQgbGFuZ3VhZ2UgPSAnZW4nO1xuXG4vKiBoYW5kbGUgZXNjYXBlZCBjaGFyYWN0ZXJzIHRoYXQgZ2V0IGNvbnZlcnRlZCBpbnRvIGpzb24gc3RyaW5ncyAqL1xuZnVuY3Rpb24gcGFyc2VFc2NhcGVTZXF1ZW5jZXMoc3RyKSB7XG4gIHJldHVybiBzdHJcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXG4nLCAnZycpLCAnXFxuJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXGInLCAnZycpLCAnXFxiJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXGYnLCAnZycpLCAnXFxmJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXHInLCAnZycpLCAnXFxyJylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxcXFxcXHQnLCAnZycpLCAnXFx0JylcbiAgICAucmVwbGFjZShuZXcgUmVnRXhwKFwiXFxcXFxcXFwnXCIsICdnJyksIFwiJ1wiKVxuICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFxcXFxcXCInLCAnZycpLCAnXCInKVxuICAgIC5yZXBsYWNlKG5ldyBSZWdFeHAoJ1xcXFxcXFxcJywgJ2cnKSwgJ1xcXFwnKTtcbn1cblxuZnVuY3Rpb24gc2V0TGFuZ3VhZ2UobGFuZykge1xuICBsYW5ndWFnZSA9IGxhbmc7XG59XG5cbmZ1bmN0aW9uIGRvZXNUcmFuc2xhdGlvbkV4aXN0KHN0ciwgbGFuZykge1xuICByZXR1cm4gKFxuICAgIHRyYW5zbGF0aW9uW2xhbmddICYmXG4gICAgdHJhbnNsYXRpb25bbGFuZ11bJ3BhZ2VzLXN0cmluZ3MnXSAmJlxuICAgIHRyYW5zbGF0aW9uW2xhbmddWydwYWdlcy1zdHJpbmdzJ11bc3RyXVxuICApO1xufVxuXG5mdW5jdGlvbiB0cmFuc2xhdGUoc3RyKSB7XG4gIGlmICghbGFuZ3VhZ2UgfHwgbGFuZ3VhZ2UgPT09ICcnKSB7XG4gICAgLy8gQ2hlY2sgRW5nbGlzaCwganVzdCBpbiBjYXNlOyBvdGhlcndpc2UsIGp1c3QgcmV0dXJuIHRoZSByYXcgc3RyaW5nIGJhY2tcbiAgICBpZiAoZG9lc1RyYW5zbGF0aW9uRXhpc3Qoc3RyLCAnZW4nKSkge1xuICAgICAgcmV0dXJuIHBhcnNlRXNjYXBlU2VxdWVuY2VzKHRyYW5zbGF0aW9uLmVuWydwYWdlcy1zdHJpbmdzJ11bc3RyXSk7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICBpZiAoIWRvZXNUcmFuc2xhdGlvbkV4aXN0KHN0ciwgbGFuZ3VhZ2UpKSB7XG4gICAgLy8gaWYgYSB0cmFuc2xhdGVkIHN0cmluZyBkb2Vzbid0IGV4aXN0LCBidXQgZW5nbGlzaCBkb2VzIHRoZW4gZmFsbGJhY2tcbiAgICBpZiAoZG9lc1RyYW5zbGF0aW9uRXhpc3Qoc3RyLCAnZW4nKSkge1xuICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgYENvdWxkIG5vdCBmaW5kIGEgc3RyaW5nIHRyYW5zbGF0aW9uIGluICcke2xhbmd1YWdlfScgZm9yIHN0cmluZyAnJHtzdHJ9Jy4gVXNpbmcgRW5nbGlzaCB2ZXJzaW9uIGluc3RlYWQuYCxcbiAgICAgICk7XG5cbiAgICAgIHJldHVybiBwYXJzZUVzY2FwZVNlcXVlbmNlcyh0cmFuc2xhdGlvbi5lblsncGFnZXMtc3RyaW5ncyddW3N0cl0pO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgVGV4dCB0aGF0IHlvdSd2ZSBpZGVudGlmaWVkIGZvciB0cmFuc2xhdGlvbiAoJyR7c3RyfScpIGhhc24ndCBiZWVuIGFkZGVkIHRvIHRoZSBnbG9iYWwgbGlzdCBpbiAnZW4uanNvbicuIFRvIHNvbHZlIHRoaXMgcHJvYmxlbSBydW4gJ3lhcm4gd3JpdGUtdHJhbnNsYXRpb25zJy5gLFxuICAgICk7XG4gIH1cbiAgcmV0dXJuIHBhcnNlRXNjYXBlU2VxdWVuY2VzKHRyYW5zbGF0aW9uW2xhbmd1YWdlXVsncGFnZXMtc3RyaW5ncyddW3N0cl0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0TGFuZ3VhZ2UsXG4gIHRyYW5zbGF0ZSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "translate.js"
      ],
      "names": [
        "translation",
        "require",
        "language",
        "parseEscapeSequences",
        "str",
        "replace",
        "RegExp",
        "setLanguage",
        "lang",
        "doesTranslationExist",
        "translate",
        "en",
        "console",
        "error",
        "Error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,kBAAD,CAA3B;;AAEA,IAAIC,QAAQ,GAAG,IAAf;AAEA;;AACA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC,SAAOA,GAAG,CACPC,OADI,CACI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CADJ,EAC8B,IAD9B,EAEJD,OAFI,CAEI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAFJ,EAE8B,IAF9B,EAGJD,OAHI,CAGI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAHJ,EAG8B,IAH9B,EAIJD,OAJI,CAII,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAJJ,EAI8B,IAJ9B,EAKJD,OALI,CAKI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CALJ,EAK8B,IAL9B,EAMJD,OANI,CAMI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CANJ,EAM8B,GAN9B,EAOJD,OAPI,CAOI,IAAIC,MAAJ,CAAW,OAAX,EAAoB,GAApB,CAPJ,EAO8B,GAP9B,EAQJD,OARI,CAQI,IAAIC,MAAJ,CAAW,MAAX,EAAmB,GAAnB,CARJ,EAQ6B,IAR7B,CAAP;AASD;;AAED,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzBN,EAAAA,QAAQ,GAAGM,IAAX;AACD;;AAED,SAASC,oBAAT,CAA8BL,GAA9B,EAAmCI,IAAnC,EAAyC;AACvC,SACER,WAAW,CAACQ,IAAD,CAAX,IACAR,WAAW,CAACQ,IAAD,CAAX,CAAkB,eAAlB,CADA,IAEAR,WAAW,CAACQ,IAAD,CAAX,CAAkB,eAAlB,EAAmCJ,GAAnC,CAHF;AAKD;;AAED,SAASM,SAAT,CAAmBN,GAAnB,EAAwB;AACtB,MAAI,CAACF,QAAD,IAAaA,QAAQ,KAAK,EAA9B,EAAkC;AAChC;AACA,QAAIO,oBAAoB,CAACL,GAAD,EAAM,IAAN,CAAxB,EAAqC;AACnC,aAAOD,oBAAoB,CAACH,WAAW,CAACW,EAAZ,CAAe,eAAf,EAAgCP,GAAhC,CAAD,CAA3B;AACD;;AACD,WAAOA,GAAP;AACD;;AAED,MAAI,CAACK,oBAAoB,CAACL,GAAD,EAAMF,QAAN,CAAzB,EAA0C;AACxC;AACA,QAAIO,oBAAoB,CAACL,GAAD,EAAM,IAAN,CAAxB,EAAqC;AACnCQ,MAAAA,OAAO,CAACC,KAAR,mDAC6CX,QAD7C,2BACsEE,GADtE;AAIA,aAAOD,oBAAoB,CAACH,WAAW,CAACW,EAAZ,CAAe,eAAf,EAAgCP,GAAhC,CAAD,CAA3B;AACD;;AACD,UAAM,IAAIU,KAAJ,yDAC6CV,GAD7C,gHAAN;AAGD;;AACD,SAAOD,oBAAoB,CAACH,WAAW,CAACE,QAAD,CAAX,CAAsB,eAAtB,EAAuCE,GAAvC,CAAD,CAA3B;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,WAAW,EAAXA,WADe;AAEfG,EAAAA,SAAS,EAATA;AAFe,CAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst translation = require('./translation.js');\n\nlet language = 'en';\n\n/* handle escaped characters that get converted into json strings */\nfunction parseEscapeSequences(str) {\n  return str\n    .replace(new RegExp('\\\\\\\\n', 'g'), '\\n')\n    .replace(new RegExp('\\\\\\\\b', 'g'), '\\b')\n    .replace(new RegExp('\\\\\\\\f', 'g'), '\\f')\n    .replace(new RegExp('\\\\\\\\r', 'g'), '\\r')\n    .replace(new RegExp('\\\\\\\\t', 'g'), '\\t')\n    .replace(new RegExp(\"\\\\\\\\'\", 'g'), \"'\")\n    .replace(new RegExp('\\\\\\\\\"', 'g'), '\"')\n    .replace(new RegExp('\\\\\\\\', 'g'), '\\\\');\n}\n\nfunction setLanguage(lang) {\n  language = lang;\n}\n\nfunction doesTranslationExist(str, lang) {\n  return (\n    translation[lang] &&\n    translation[lang]['pages-strings'] &&\n    translation[lang]['pages-strings'][str]\n  );\n}\n\nfunction translate(str) {\n  if (!language || language === '') {\n    // Check English, just in case; otherwise, just return the raw string back\n    if (doesTranslationExist(str, 'en')) {\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n    return str;\n  }\n\n  if (!doesTranslationExist(str, language)) {\n    // if a translated string doesn't exist, but english does then fallback\n    if (doesTranslationExist(str, 'en')) {\n      console.error(\n        `Could not find a string translation in '${language}' for string '${str}'. Using English version instead.`,\n      );\n\n      return parseEscapeSequences(translation.en['pages-strings'][str]);\n    }\n    throw new Error(\n      `Text that you've identified for translation ('${str}') hasn't been added to the global list in 'en.json'. To solve this problem run 'yarn write-translations'.`,\n    );\n  }\n  return parseEscapeSequences(translation[language]['pages-strings'][str]);\n}\n\nmodule.exports = {\n  setLanguage,\n  translate,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/metadata.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/metadata.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/metadata.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/metadata.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "metadata.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @generated\n */\nmodule.exports = {\n  \"changelog\": {\n    \"id\": \"changelog\",\n    \"title\": \"Changelog\",\n    \"source\": \"changelog.md\",\n    \"permalink\": \"docs/changelog.html\",\n    \"localized_id\": \"changelog\",\n    \"language\": \"en\"\n  },\n  \"compliance\": {\n    \"id\": \"compliance\",\n    \"title\": \"BF Compliance\",\n    \"source\": \"compliance.md\",\n    \"permalink\": \"docs/compliance.html\",\n    \"localized_id\": \"compliance\",\n    \"language\": \"en\"\n  },\n  \"faq\": {\n    \"id\": \"faq\",\n    \"title\": \"FAQ\",\n    \"source\": \"faq.md\",\n    \"permalink\": \"docs/faq.html\",\n    \"localized_id\": \"faq\",\n    \"language\": \"en\"\n  },\n  \"getting-started\": {\n    \"id\": \"getting-started\",\n    \"title\": \"Getting Started\",\n    \"source\": \"getting_started.md\",\n    \"permalink\": \"docs/getting-started.html\",\n    \"localized_id\": \"getting-started\",\n    \"language\": \"en\"\n  },\n  \"optimisations\": {\n    \"id\": \"optimisations\",\n    \"title\": \"Optimisations\",\n    \"source\": \"optimisations.md\",\n    \"permalink\": \"docs/optimisations.html\",\n    \"localized_id\": \"optimisations\",\n    \"language\": \"en\"\n  },\n  \"testing\": {\n    \"id\": \"testing\",\n    \"title\": \"Testing\",\n    \"source\": \"testing.md\",\n    \"permalink\": \"docs/testing.html\",\n    \"localized_id\": \"testing\",\n    \"language\": \"en\"\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ldGFkYXRhLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmLGVBQWE7QUFDWCxVQUFNLFdBREs7QUFFWCxhQUFTLFdBRkU7QUFHWCxjQUFVLGNBSEM7QUFJWCxpQkFBYSxxQkFKRjtBQUtYLG9CQUFnQixXQUxMO0FBTVgsZ0JBQVk7QUFORCxHQURFO0FBU2YsZ0JBQWM7QUFDWixVQUFNLFlBRE07QUFFWixhQUFTLGVBRkc7QUFHWixjQUFVLGVBSEU7QUFJWixpQkFBYSxzQkFKRDtBQUtaLG9CQUFnQixZQUxKO0FBTVosZ0JBQVk7QUFOQSxHQVRDO0FBaUJmLFNBQU87QUFDTCxVQUFNLEtBREQ7QUFFTCxhQUFTLEtBRko7QUFHTCxjQUFVLFFBSEw7QUFJTCxpQkFBYSxlQUpSO0FBS0wsb0JBQWdCLEtBTFg7QUFNTCxnQkFBWTtBQU5QLEdBakJRO0FBeUJmLHFCQUFtQjtBQUNqQixVQUFNLGlCQURXO0FBRWpCLGFBQVMsaUJBRlE7QUFHakIsY0FBVSxvQkFITztBQUlqQixpQkFBYSwyQkFKSTtBQUtqQixvQkFBZ0IsaUJBTEM7QUFNakIsZ0JBQVk7QUFOSyxHQXpCSjtBQWlDZixtQkFBaUI7QUFDZixVQUFNLGVBRFM7QUFFZixhQUFTLGVBRk07QUFHZixjQUFVLGtCQUhLO0FBSWYsaUJBQWEseUJBSkU7QUFLZixvQkFBZ0IsZUFMRDtBQU1mLGdCQUFZO0FBTkcsR0FqQ0Y7QUF5Q2YsYUFBVztBQUNULFVBQU0sU0FERztBQUVULGFBQVMsU0FGQTtBQUdULGNBQVUsWUFIRDtBQUlULGlCQUFhLG1CQUpKO0FBS1Qsb0JBQWdCLFNBTFA7QUFNVCxnQkFBWTtBQU5IO0FBekNJLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBnZW5lcmF0ZWRcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFwiY2hhbmdlbG9nXCI6IHtcbiAgICBcImlkXCI6IFwiY2hhbmdlbG9nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNoYW5nZWxvZ1wiLFxuICAgIFwic291cmNlXCI6IFwiY2hhbmdlbG9nLm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL2NoYW5nZWxvZy5odG1sXCIsXG4gICAgXCJsb2NhbGl6ZWRfaWRcIjogXCJjaGFuZ2Vsb2dcIixcbiAgICBcImxhbmd1YWdlXCI6IFwiZW5cIlxuICB9LFxuICBcImNvbXBsaWFuY2VcIjoge1xuICAgIFwiaWRcIjogXCJjb21wbGlhbmNlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJGIENvbXBsaWFuY2VcIixcbiAgICBcInNvdXJjZVwiOiBcImNvbXBsaWFuY2UubWRcIixcbiAgICBcInBlcm1hbGlua1wiOiBcImRvY3MvY29tcGxpYW5jZS5odG1sXCIsXG4gICAgXCJsb2NhbGl6ZWRfaWRcIjogXCJjb21wbGlhbmNlXCIsXG4gICAgXCJsYW5ndWFnZVwiOiBcImVuXCJcbiAgfSxcbiAgXCJmYXFcIjoge1xuICAgIFwiaWRcIjogXCJmYXFcIixcbiAgICBcInRpdGxlXCI6IFwiRkFRXCIsXG4gICAgXCJzb3VyY2VcIjogXCJmYXEubWRcIixcbiAgICBcInBlcm1hbGlua1wiOiBcImRvY3MvZmFxLmh0bWxcIixcbiAgICBcImxvY2FsaXplZF9pZFwiOiBcImZhcVwiLFxuICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiXG4gIH0sXG4gIFwiZ2V0dGluZy1zdGFydGVkXCI6IHtcbiAgICBcImlkXCI6IFwiZ2V0dGluZy1zdGFydGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkdldHRpbmcgU3RhcnRlZFwiLFxuICAgIFwic291cmNlXCI6IFwiZ2V0dGluZ19zdGFydGVkLm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL2dldHRpbmctc3RhcnRlZC5odG1sXCIsXG4gICAgXCJsb2NhbGl6ZWRfaWRcIjogXCJnZXR0aW5nLXN0YXJ0ZWRcIixcbiAgICBcImxhbmd1YWdlXCI6IFwiZW5cIlxuICB9LFxuICBcIm9wdGltaXNhdGlvbnNcIjoge1xuICAgIFwiaWRcIjogXCJvcHRpbWlzYXRpb25zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk9wdGltaXNhdGlvbnNcIixcbiAgICBcInNvdXJjZVwiOiBcIm9wdGltaXNhdGlvbnMubWRcIixcbiAgICBcInBlcm1hbGlua1wiOiBcImRvY3Mvb3B0aW1pc2F0aW9ucy5odG1sXCIsXG4gICAgXCJsb2NhbGl6ZWRfaWRcIjogXCJvcHRpbWlzYXRpb25zXCIsXG4gICAgXCJsYW5ndWFnZVwiOiBcImVuXCJcbiAgfSxcbiAgXCJ0ZXN0aW5nXCI6IHtcbiAgICBcImlkXCI6IFwidGVzdGluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nXCIsXG4gICAgXCJzb3VyY2VcIjogXCJ0ZXN0aW5nLm1kXCIsXG4gICAgXCJwZXJtYWxpbmtcIjogXCJkb2NzL3Rlc3RpbmcuaHRtbFwiLFxuICAgIFwibG9jYWxpemVkX2lkXCI6IFwidGVzdGluZ1wiLFxuICAgIFwibGFuZ3VhZ2VcIjogXCJlblwiXG4gIH1cbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "metadata.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB;AACf,eAAa;AACX,UAAM,WADK;AAEX,aAAS,WAFE;AAGX,cAAU,cAHC;AAIX,iBAAa,qBAJF;AAKX,oBAAgB,WALL;AAMX,gBAAY;AAND,GADE;AASf,gBAAc;AACZ,UAAM,YADM;AAEZ,aAAS,eAFG;AAGZ,cAAU,eAHE;AAIZ,iBAAa,sBAJD;AAKZ,oBAAgB,YALJ;AAMZ,gBAAY;AANA,GATC;AAiBf,SAAO;AACL,UAAM,KADD;AAEL,aAAS,KAFJ;AAGL,cAAU,QAHL;AAIL,iBAAa,eAJR;AAKL,oBAAgB,KALX;AAML,gBAAY;AANP,GAjBQ;AAyBf,qBAAmB;AACjB,UAAM,iBADW;AAEjB,aAAS,iBAFQ;AAGjB,cAAU,oBAHO;AAIjB,iBAAa,2BAJI;AAKjB,oBAAgB,iBALC;AAMjB,gBAAY;AANK,GAzBJ;AAiCf,mBAAiB;AACf,UAAM,eADS;AAEf,aAAS,eAFM;AAGf,cAAU,kBAHK;AAIf,iBAAa,yBAJE;AAKf,oBAAgB,eALD;AAMf,gBAAY;AANG,GAjCF;AAyCf,aAAW;AACT,UAAM,SADG;AAET,aAAS,SAFA;AAGT,cAAU,YAHD;AAIT,iBAAa,mBAJJ;AAKT,oBAAgB,SALP;AAMT,gBAAY;AANH;AAzCI,CAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * @generated\n */\nmodule.exports = {\n  \"changelog\": {\n    \"id\": \"changelog\",\n    \"title\": \"Changelog\",\n    \"source\": \"changelog.md\",\n    \"permalink\": \"docs/changelog.html\",\n    \"localized_id\": \"changelog\",\n    \"language\": \"en\"\n  },\n  \"compliance\": {\n    \"id\": \"compliance\",\n    \"title\": \"BF Compliance\",\n    \"source\": \"compliance.md\",\n    \"permalink\": \"docs/compliance.html\",\n    \"localized_id\": \"compliance\",\n    \"language\": \"en\"\n  },\n  \"faq\": {\n    \"id\": \"faq\",\n    \"title\": \"FAQ\",\n    \"source\": \"faq.md\",\n    \"permalink\": \"docs/faq.html\",\n    \"localized_id\": \"faq\",\n    \"language\": \"en\"\n  },\n  \"getting-started\": {\n    \"id\": \"getting-started\",\n    \"title\": \"Getting Started\",\n    \"source\": \"getting_started.md\",\n    \"permalink\": \"docs/getting-started.html\",\n    \"localized_id\": \"getting-started\",\n    \"language\": \"en\"\n  },\n  \"optimisations\": {\n    \"id\": \"optimisations\",\n    \"title\": \"Optimisations\",\n    \"source\": \"optimisations.md\",\n    \"permalink\": \"docs/optimisations.html\",\n    \"localized_id\": \"optimisations\",\n    \"language\": \"en\"\n  },\n  \"testing\": {\n    \"id\": \"testing\",\n    \"title\": \"Testing\",\n    \"source\": \"testing.md\",\n    \"permalink\": \"docs/testing.html\",\n    \"localized_id\": \"testing\",\n    \"language\": \"en\"\n  }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637396895390
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Head.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Head.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Head.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Head.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "Head.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react'); // html head for each page\n\n\nvar Head = /*#__PURE__*/function (_React$Component) {\n  _inherits(Head, _React$Component);\n\n  var _super = _createSuper(Head);\n\n  function Head() {\n    _classCallCheck(this, Head);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Head, [{\n    key: \"render\",\n    value: function render() {\n      var links = this.props.config.headerLinks;\n      var hasBlog = links.some(function (link) {\n        return link.blog;\n      });\n\n      var highlight = _objectSpread({\n        version: '9.12.0',\n        theme: 'default'\n      }, this.props.config.highlight); // Use user-provided themeUrl if it exists, else construct one from version and theme.\n\n\n      var highlightThemeURL = highlight.themeUrl ? highlight.themeUrl : \"//cdnjs.cloudflare.com/ajax/libs/highlight.js/\".concat(highlight.version, \"/styles/\").concat(highlight.theme, \".min.css\"); // ensure the siteUrl variable ends with a single slash\n\n      var siteUrl = \"\".concat((this.props.config.url + this.props.config.baseUrl).replace(/\\/+$/, ''), \"/\");\n      return /*#__PURE__*/React.createElement(\"head\", null, /*#__PURE__*/React.createElement(\"meta\", {\n        charSet: \"utf-8\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        httpEquiv: \"X-UA-Compatible\",\n        content: \"IE=edge\"\n      }), /*#__PURE__*/React.createElement(\"title\", null, this.props.title), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"generator\",\n        content: \"Docusaurus\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"description\",\n        content: this.props.description\n      }), this.props.version && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"docsearch:version\",\n        content: this.props.version\n      }), this.props.language && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"docsearch:language\",\n        content: this.props.language\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:title\",\n        content: this.props.title\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:type\",\n        content: \"website\"\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:url\",\n        content: this.props.url\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:description\",\n        content: this.props.description\n      }), this.props.config.ogImage && /*#__PURE__*/React.createElement(\"meta\", {\n        property: \"og:image\",\n        content: siteUrl + this.props.config.ogImage\n      }), /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"twitter:card\",\n        content: \"summary\"\n      }), this.props.config.twitterImage && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"twitter:image\",\n        content: siteUrl + this.props.config.twitterImage\n      }), this.props.config.noIndex && /*#__PURE__*/React.createElement(\"meta\", {\n        name: \"robots\",\n        content: \"noindex\"\n      }), this.props.redirect && /*#__PURE__*/React.createElement(\"meta\", {\n        httpEquiv: \"refresh\",\n        content: \"0; URL=\".concat(this.props.redirect)\n      }), this.props.config.manifest && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"manifest\",\n        href: siteUrl + this.props.config.manifest\n      }), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"shortcut icon\",\n        href: this.props.config.baseUrl + this.props.config.favicon\n      }), this.props.config.algolia && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css\"\n      }), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: highlightThemeURL\n      }), hasBlog && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"alternate\",\n        type: \"application/atom+xml\",\n        href: \"\".concat(siteUrl, \"blog/atom.xml\"),\n        title: \"\".concat(this.props.config.title, \" Blog ATOM Feed\")\n      }), hasBlog && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"alternate\",\n        type: \"application/rss+xml\",\n        href: \"\".concat(siteUrl, \"blog/feed.xml\"),\n        title: \"\".concat(this.props.config.title, \" Blog RSS Feed\")\n      }), this.props.config.gaTrackingId && this.props.config.gaGtag && /*#__PURE__*/React.createElement(\"script\", {\n        async: true,\n        src: \"https://www.googletagmanager.com/gtag/js?id=\".concat(this.props.config.gaTrackingId)\n      }), this.props.config.gaTrackingId && this.props.config.gaGtag && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              window.dataLayer = window.dataLayer || [];\\n              function gtag(){dataLayer.push(arguments); }\\n              gtag('js', new Date());\\n              gtag('config', '\".concat(this.props.config.gaTrackingId, \"');\\n            \")\n        }\n      }), this.props.config.gaTrackingId && !this.props.config.gaGtag && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\\n              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\\n              })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\\n\\n              ga('create', '\".concat(this.props.config.gaTrackingId, \"', 'auto');\\n              ga('send', 'pageview');\\n            \")\n        }\n      }), this.props.config.stylesheets && this.props.config.stylesheets.map(function (source) {\n        return source.href ? /*#__PURE__*/React.createElement(\"link\", _extends({\n          rel: \"stylesheet\",\n          key: source.href\n        }, source)) : /*#__PURE__*/React.createElement(\"link\", {\n          rel: \"stylesheet\",\n          key: source,\n          href: source\n        });\n      }), this.props.config.scripts && this.props.config.scripts.map(function (source) {\n        return source.src ? /*#__PURE__*/React.createElement(\"script\", _extends({\n          type: \"text/javascript\",\n          key: source.src\n        }, source)) : /*#__PURE__*/React.createElement(\"script\", {\n          type: \"text/javascript\",\n          src: source,\n          key: source\n        });\n      }), this.props.config.scrollToTop && /*#__PURE__*/React.createElement(\"script\", {\n        src: \"https://unpkg.com/vanilla-back-to-top@7.1.14/dist/vanilla-back-to-top.min.js\"\n      }), this.props.config.scrollToTop && /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n        document.addEventListener('DOMContentLoaded', function() {\\n          addBackToTop(\\n            \".concat(JSON.stringify(Object.assign({}, {\n            zIndex: 100\n          }, this.props.config.scrollToTopOptions)), \"\\n          )\\n        });\\n        \")\n        }\n      }), /*#__PURE__*/React.createElement(\"script\", {\n        src: \"\".concat(this.props.config.baseUrl, \"js/scrollSpy.js\")\n      }), this.props.config.usePrism && /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"\".concat(this.props.config.baseUrl, \"css/prism.css\")\n      }), /*#__PURE__*/React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"\".concat(this.props.config.baseUrl, \"css/main.css\")\n      }), /*#__PURE__*/React.createElement(\"script\", {\n        src: \"\".concat(this.props.config.baseUrl, \"js/codetabs.js\")\n      }));\n    }\n  }]);\n\n  return Head;\n}(React.Component);\n\nmodule.exports = Head;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "Head.js"
      ],
      "names": [
        "React",
        "require",
        "Head",
        "links",
        "props",
        "config",
        "headerLinks",
        "hasBlog",
        "some",
        "link",
        "blog",
        "highlight",
        "version",
        "theme",
        "highlightThemeURL",
        "themeUrl",
        "siteUrl",
        "url",
        "baseUrl",
        "replace",
        "title",
        "description",
        "language",
        "ogImage",
        "twitterImage",
        "noIndex",
        "redirect",
        "manifest",
        "favicon",
        "algolia",
        "gaTrackingId",
        "gaGtag",
        "__html",
        "stylesheets",
        "map",
        "source",
        "href",
        "scripts",
        "src",
        "scrollToTop",
        "JSON",
        "stringify",
        "Object",
        "assign",
        "zIndex",
        "scrollToTopOptions",
        "usePrism",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\n// html head for each page\nclass Head extends React.Component {\n  render() {\n    const links = this.props.config.headerLinks;\n    const hasBlog = links.some((link) => link.blog);\n\n    const highlight = {\n      version: '9.12.0',\n      theme: 'default',\n      ...this.props.config.highlight,\n    };\n\n    // Use user-provided themeUrl if it exists, else construct one from version and theme.\n    const highlightThemeURL = highlight.themeUrl\n      ? highlight.themeUrl\n      : `//cdnjs.cloudflare.com/ajax/libs/highlight.js/${highlight.version}/styles/${highlight.theme}.min.css`;\n\n    // ensure the siteUrl variable ends with a single slash\n    const siteUrl = `${(\n      this.props.config.url + this.props.config.baseUrl\n    ).replace(/\\/+$/, '')}/`;\n\n    return (\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n        <title>{this.props.title}</title>\n        <meta name=\"viewport\" content=\"width=device-width\" />\n        <meta name=\"generator\" content=\"Docusaurus\" />\n        <meta name=\"description\" content={this.props.description} />\n        {this.props.version && (\n          <meta name=\"docsearch:version\" content={this.props.version} />\n        )}\n        {this.props.language && (\n          <meta name=\"docsearch:language\" content={this.props.language} />\n        )}\n        <meta property=\"og:title\" content={this.props.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content={this.props.url} />\n        <meta property=\"og:description\" content={this.props.description} />\n        {this.props.config.ogImage && (\n          <meta\n            property=\"og:image\"\n            content={siteUrl + this.props.config.ogImage}\n          />\n        )}\n        <meta name=\"twitter:card\" content=\"summary\" />\n        {this.props.config.twitterImage && (\n          <meta\n            name=\"twitter:image\"\n            content={siteUrl + this.props.config.twitterImage}\n          />\n        )}\n        {this.props.config.noIndex && <meta name=\"robots\" content=\"noindex\" />}\n        {this.props.redirect && (\n          <meta httpEquiv=\"refresh\" content={`0; URL=${this.props.redirect}`} />\n        )}\n        {this.props.config.manifest && (\n          <link rel=\"manifest\" href={siteUrl + this.props.config.manifest} />\n        )}\n        <link\n          rel=\"shortcut icon\"\n          href={this.props.config.baseUrl + this.props.config.favicon}\n        />\n        {this.props.config.algolia && (\n          <link\n            rel=\"stylesheet\"\n            href=\"https://cdn.jsdelivr.net/docsearch.js/1/docsearch.min.css\"\n          />\n        )}\n        <link rel=\"stylesheet\" href={highlightThemeURL} />\n        {hasBlog && (\n          <link\n            rel=\"alternate\"\n            type=\"application/atom+xml\"\n            href={`${siteUrl}blog/atom.xml`}\n            title={`${this.props.config.title} Blog ATOM Feed`}\n          />\n        )}\n        {hasBlog && (\n          <link\n            rel=\"alternate\"\n            type=\"application/rss+xml\"\n            href={`${siteUrl}blog/feed.xml`}\n            title={`${this.props.config.title} Blog RSS Feed`}\n          />\n        )}\n        {this.props.config.gaTrackingId && this.props.config.gaGtag && (\n          <script\n            async\n            src={`https://www.googletagmanager.com/gtag/js?id=${this.props.config.gaTrackingId}`}\n          />\n        )}\n        {this.props.config.gaTrackingId && this.props.config.gaGtag && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n              window.dataLayer = window.dataLayer || [];\n              function gtag(){dataLayer.push(arguments); }\n              gtag('js', new Date());\n              gtag('config', '${this.props.config.gaTrackingId}');\n            `,\n            }}\n          />\n        )}\n        {this.props.config.gaTrackingId && !this.props.config.gaGtag && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n              (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n              })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\n\n              ga('create', '${this.props.config.gaTrackingId}', 'auto');\n              ga('send', 'pageview');\n            `,\n            }}\n          />\n        )}\n\n        {/* External resources */}\n        {this.props.config.stylesheets &&\n          this.props.config.stylesheets.map((source) =>\n            source.href ? (\n              <link rel=\"stylesheet\" key={source.href} {...source} />\n            ) : (\n              <link rel=\"stylesheet\" key={source} href={source} />\n            ),\n          )}\n        {this.props.config.scripts &&\n          this.props.config.scripts.map((source) =>\n            source.src ? (\n              <script type=\"text/javascript\" key={source.src} {...source} />\n            ) : (\n              <script type=\"text/javascript\" src={source} key={source} />\n            ),\n          )}\n\n        {this.props.config.scrollToTop && (\n          <script src=\"https://unpkg.com/vanilla-back-to-top@7.1.14/dist/vanilla-back-to-top.min.js\" />\n        )}\n        {this.props.config.scrollToTop && (\n          <script\n            dangerouslySetInnerHTML={{\n              __html: `\n        document.addEventListener('DOMContentLoaded', function() {\n          addBackToTop(\n            ${JSON.stringify(\n              Object.assign(\n                {},\n                {zIndex: 100},\n                this.props.config.scrollToTopOptions,\n              ),\n            )}\n          )\n        });\n        `,\n            }}\n          />\n        )}\n        <script src={`${this.props.config.baseUrl}js/scrollSpy.js`} />\n        {this.props.config.usePrism && (\n          <link\n            rel=\"stylesheet\"\n            href={`${this.props.config.baseUrl}css/prism.css`}\n          />\n        )}\n        {/* Site defined code. Keep these at the end to avoid overriding. */}\n        <link\n          rel=\"stylesheet\"\n          href={`${this.props.config.baseUrl}css/main.css`}\n        />\n        <script src={`${this.props.config.baseUrl}js/codetabs.js`} />\n      </head>\n    );\n  }\n}\n\nmodule.exports = Head;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/core/Footer.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/core/Footer.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/core/Footer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/core/Footer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/core/",
        "sourceFileName": "Footer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require(\"react\");\n\nvar Footer = /*#__PURE__*/function (_React$Component) {\n  _inherits(Footer, _React$Component);\n\n  var _super = _createSuper(Footer);\n\n  function Footer() {\n    _classCallCheck(this, Footer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Footer, [{\n    key: \"docUrl\",\n    value: function docUrl(doc) {\n      var baseUrl = this.props.config.baseUrl;\n      var docsUrl = this.props.config.docsUrl;\n      var docsPart = \"\".concat(docsUrl ? \"\".concat(docsUrl, \"/\") : \"\");\n      return \"\".concat(baseUrl).concat(docsPart).concat(doc);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"footer\", {\n        className: \"nav-footer\",\n        id: \"footer\"\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"sitemap\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: this.props.config.baseUrl,\n        className: \"nav-home\"\n      }, this.props.config.footerIcon && /*#__PURE__*/React.createElement(\"img\", {\n        src: this.props.config.baseUrl + this.props.config.footerIcon,\n        alt: this.props.config.title,\n        width: \"66\",\n        height: \"58\"\n      })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h5\", null, \"User Docs\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl(\"getting-started\")\n      }, \"Getting Started\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl(\"faq\")\n      }, \"FAQ\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl(\"changelog\")\n      }, \"Changelog\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h5\", null, \"PL Geekery\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl(\"compliance\")\n      }, \"BF Compliance\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl(\"optimisations\")\n      }, \"Optimisations\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: this.docUrl(\"testing\")\n      }, \"Testing\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"copyright\"\n      }, this.props.config.copyright));\n    }\n  }]);\n\n  return Footer;\n}(React.Component);\n\nmodule.exports = Footer;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZvb3Rlci5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJGb290ZXIiLCJkb2MiLCJiYXNlVXJsIiwicHJvcHMiLCJjb25maWciLCJkb2NzVXJsIiwiZG9jc1BhcnQiLCJmb290ZXJJY29uIiwidGl0bGUiLCJkb2NVcmwiLCJjb3B5cmlnaHQiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztJQUVNQyxNOzs7Ozs7Ozs7Ozs7OzJCQUNHQyxHLEVBQUs7QUFDVixVQUFNQyxPQUFPLEdBQUcsS0FBS0MsS0FBTCxDQUFXQyxNQUFYLENBQWtCRixPQUFsQztBQUNBLFVBQU1HLE9BQU8sR0FBRyxLQUFLRixLQUFMLENBQVdDLE1BQVgsQ0FBa0JDLE9BQWxDO0FBQ0EsVUFBTUMsUUFBUSxhQUFNRCxPQUFPLGFBQU1BLE9BQU4sU0FBbUIsRUFBaEMsQ0FBZDtBQUNBLHVCQUFVSCxPQUFWLFNBQW9CSSxRQUFwQixTQUErQkwsR0FBL0I7QUFDRDs7OzZCQUVRO0FBQ1AsMEJBQ0U7QUFBUSxRQUFBLFNBQVMsRUFBQyxZQUFsQjtBQUErQixRQUFBLEVBQUUsRUFBQztBQUFsQyxzQkFDRTtBQUFTLFFBQUEsU0FBUyxFQUFDO0FBQW5CLHNCQUNFO0FBQUcsUUFBQSxJQUFJLEVBQUUsS0FBS0UsS0FBTCxDQUFXQyxNQUFYLENBQWtCRixPQUEzQjtBQUFvQyxRQUFBLFNBQVMsRUFBQztBQUE5QyxTQUNHLEtBQUtDLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQkcsVUFBbEIsaUJBQ0M7QUFDRSxRQUFBLEdBQUcsRUFBRSxLQUFLSixLQUFMLENBQVdDLE1BQVgsQ0FBa0JGLE9BQWxCLEdBQTRCLEtBQUtDLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQkcsVUFEckQ7QUFFRSxRQUFBLEdBQUcsRUFBRSxLQUFLSixLQUFMLENBQVdDLE1BQVgsQ0FBa0JJLEtBRnpCO0FBR0UsUUFBQSxLQUFLLEVBQUMsSUFIUjtBQUlFLFFBQUEsTUFBTSxFQUFDO0FBSlQsUUFGSixDQURGLGVBV0UsOENBQ0UsNENBREYsZUFFRTtBQUFHLFFBQUEsSUFBSSxFQUFFLEtBQUtDLE1BQUwsQ0FBWSxpQkFBWjtBQUFULDJCQUZGLGVBR0U7QUFBRyxRQUFBLElBQUksRUFBRSxLQUFLQSxNQUFMLENBQVksS0FBWjtBQUFULGVBSEYsZUFJRTtBQUFHLFFBQUEsSUFBSSxFQUFFLEtBQUtBLE1BQUwsQ0FBWSxXQUFaO0FBQVQscUJBSkYsQ0FYRixlQWlCRSw4Q0FDRiw2Q0FERSxlQUVFO0FBQUcsUUFBQSxJQUFJLEVBQUUsS0FBS0EsTUFBTCxDQUFZLFlBQVo7QUFBVCx5QkFGRixlQUdFO0FBQUcsUUFBQSxJQUFJLEVBQUUsS0FBS0EsTUFBTCxDQUFZLGVBQVo7QUFBVCx5QkFIRixlQUlFO0FBQUcsUUFBQSxJQUFJLEVBQUUsS0FBS0EsTUFBTCxDQUFZLFNBQVo7QUFBVCxtQkFKRixDQWpCRixDQURGLGVBMEJFO0FBQVMsUUFBQSxTQUFTLEVBQUM7QUFBbkIsU0FBZ0MsS0FBS04sS0FBTCxDQUFXQyxNQUFYLENBQWtCTSxTQUFsRCxDQTFCRixDQURGO0FBOEJEOzs7O0VBdkNrQlosS0FBSyxDQUFDYSxTOztBQTBDM0JDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmIsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL2NvcmUvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcblxuY2xhc3MgRm9vdGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgZG9jVXJsKGRvYykge1xuICAgIGNvbnN0IGJhc2VVcmwgPSB0aGlzLnByb3BzLmNvbmZpZy5iYXNlVXJsO1xuICAgIGNvbnN0IGRvY3NVcmwgPSB0aGlzLnByb3BzLmNvbmZpZy5kb2NzVXJsO1xuICAgIGNvbnN0IGRvY3NQYXJ0ID0gYCR7ZG9jc1VybCA/IGAke2RvY3NVcmx9L2AgOiBcIlwifWA7XG4gICAgcmV0dXJuIGAke2Jhc2VVcmx9JHtkb2NzUGFydH0ke2RvY31gO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Zm9vdGVyIGNsYXNzTmFtZT1cIm5hdi1mb290ZXJcIiBpZD1cImZvb3RlclwiPlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJzaXRlbWFwXCI+XG4gICAgICAgICAgPGEgaHJlZj17dGhpcy5wcm9wcy5jb25maWcuYmFzZVVybH0gY2xhc3NOYW1lPVwibmF2LWhvbWVcIj5cbiAgICAgICAgICAgIHt0aGlzLnByb3BzLmNvbmZpZy5mb290ZXJJY29uICYmIChcbiAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIHNyYz17dGhpcy5wcm9wcy5jb25maWcuYmFzZVVybCArIHRoaXMucHJvcHMuY29uZmlnLmZvb3Rlckljb259XG4gICAgICAgICAgICAgICAgYWx0PXt0aGlzLnByb3BzLmNvbmZpZy50aXRsZX1cbiAgICAgICAgICAgICAgICB3aWR0aD1cIjY2XCJcbiAgICAgICAgICAgICAgICBoZWlnaHQ9XCI1OFwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGg1PlVzZXIgRG9jczwvaDU+XG4gICAgICAgICAgICA8YSBocmVmPXt0aGlzLmRvY1VybChcImdldHRpbmctc3RhcnRlZFwiKX0+R2V0dGluZyBTdGFydGVkPC9hPlxuICAgICAgICAgICAgPGEgaHJlZj17dGhpcy5kb2NVcmwoXCJmYXFcIil9PkZBUTwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9e3RoaXMuZG9jVXJsKFwiY2hhbmdlbG9nXCIpfT5DaGFuZ2Vsb2c8L2E+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgPGg1PlBMIEdlZWtlcnk8L2g1PlxuICAgICAgICAgICAgPGEgaHJlZj17dGhpcy5kb2NVcmwoXCJjb21wbGlhbmNlXCIpfT5CRiBDb21wbGlhbmNlPC9hPlxuICAgICAgICAgICAgPGEgaHJlZj17dGhpcy5kb2NVcmwoXCJvcHRpbWlzYXRpb25zXCIpfT5PcHRpbWlzYXRpb25zPC9hPlxuICAgICAgICAgICAgPGEgaHJlZj17dGhpcy5kb2NVcmwoXCJ0ZXN0aW5nXCIpfT5UZXN0aW5nPC9hPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3NlY3Rpb24+XG5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiY29weXJpZ2h0XCI+e3RoaXMucHJvcHMuY29uZmlnLmNvcHlyaWdodH08L3NlY3Rpb24+XG4gICAgICA8L2Zvb3Rlcj5cbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRm9vdGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Footer.js"
      ],
      "names": [
        "React",
        "require",
        "Footer",
        "doc",
        "baseUrl",
        "props",
        "config",
        "docsUrl",
        "docsPart",
        "footerIcon",
        "title",
        "docUrl",
        "copyright",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;IAEMC,M;;;;;;;;;;;;;2BACGC,G,EAAK;AACV,UAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,OAAlC;AACA,UAAMG,OAAO,GAAG,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,OAAlC;AACA,UAAMC,QAAQ,aAAMD,OAAO,aAAMA,OAAN,SAAmB,EAAhC,CAAd;AACA,uBAAUH,OAAV,SAAoBI,QAApB,SAA+BL,GAA/B;AACD;;;6BAEQ;AACP,0BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,EAAE,EAAC;AAAlC,sBACE;AAAS,QAAA,SAAS,EAAC;AAAnB,sBACE;AAAG,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,MAAX,CAAkBF,OAA3B;AAAoC,QAAA,SAAS,EAAC;AAA9C,SACG,KAAKC,KAAL,CAAWC,MAAX,CAAkBG,UAAlB,iBACC;AACE,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,MAAX,CAAkBF,OAAlB,GAA4B,KAAKC,KAAL,CAAWC,MAAX,CAAkBG,UADrD;AAEE,QAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,MAAX,CAAkBI,KAFzB;AAGE,QAAA,KAAK,EAAC,IAHR;AAIE,QAAA,MAAM,EAAC;AAJT,QAFJ,CADF,eAWE,8CACE,4CADF,eAEE;AAAG,QAAA,IAAI,EAAE,KAAKC,MAAL,CAAY,iBAAZ;AAAT,2BAFF,eAGE;AAAG,QAAA,IAAI,EAAE,KAAKA,MAAL,CAAY,KAAZ;AAAT,eAHF,eAIE;AAAG,QAAA,IAAI,EAAE,KAAKA,MAAL,CAAY,WAAZ;AAAT,qBAJF,CAXF,eAiBE,8CACF,6CADE,eAEE;AAAG,QAAA,IAAI,EAAE,KAAKA,MAAL,CAAY,YAAZ;AAAT,yBAFF,eAGE;AAAG,QAAA,IAAI,EAAE,KAAKA,MAAL,CAAY,eAAZ;AAAT,yBAHF,eAIE;AAAG,QAAA,IAAI,EAAE,KAAKA,MAAL,CAAY,SAAZ;AAAT,mBAJF,CAjBF,CADF,eA0BE;AAAS,QAAA,SAAS,EAAC;AAAnB,SAAgC,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,SAAlD,CA1BF,CADF;AA8BD;;;;EAvCkBZ,KAAK,CAACa,S;;AA0C3BC,MAAM,CAACC,OAAP,GAAiBb,MAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require(\"react\");\n\nclass Footer extends React.Component {\n  docUrl(doc) {\n    const baseUrl = this.props.config.baseUrl;\n    const docsUrl = this.props.config.docsUrl;\n    const docsPart = `${docsUrl ? `${docsUrl}/` : \"\"}`;\n    return `${baseUrl}${docsPart}${doc}`;\n  }\n\n  render() {\n    return (\n      <footer className=\"nav-footer\" id=\"footer\">\n        <section className=\"sitemap\">\n          <a href={this.props.config.baseUrl} className=\"nav-home\">\n            {this.props.config.footerIcon && (\n              <img\n                src={this.props.config.baseUrl + this.props.config.footerIcon}\n                alt={this.props.config.title}\n                width=\"66\"\n                height=\"58\"\n              />\n            )}\n          </a>\n          <div>\n            <h5>User Docs</h5>\n            <a href={this.docUrl(\"getting-started\")}>Getting Started</a>\n            <a href={this.docUrl(\"faq\")}>FAQ</a>\n            <a href={this.docUrl(\"changelog\")}>Changelog</a>\n          </div>\n          <div>\n        <h5>PL Geekery</h5>\n            <a href={this.docUrl(\"compliance\")}>BF Compliance</a>\n            <a href={this.docUrl(\"optimisations\")}>Optimisations</a>\n            <a href={this.docUrl(\"testing\")}>Testing</a>\n          </div>\n        </section>\n\n        <section className=\"copyright\">{this.props.config.copyright}</section>\n      </footer>\n    );\n  }\n}\n\nmodule.exports = Footer;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637396882222
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/liveReloadServer.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/liveReloadServer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "liveReloadServer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar gaze = require('gaze');\n\nvar tinylr = require('tiny-lr');\n\nvar program = require('commander');\n\nvar readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  var server = tinylr();\n  server.listen(port, function () {\n    console.log('LiveReload server started on port %d', port);\n  });\n  gaze([\"../\".concat(readMetadata.getDocsPath(), \"/**/*\"), '**/*', '!node_modules/**/*'], function () {\n    this.on('all', function () {\n      server.notifyClients(['/']);\n    });\n  });\n}\n\nvar getReloadScriptUrl = function getReloadScriptUrl() {\n  var port = process.env.LIVERELOAD_PORT;\n  var host = program.host || 'localhost';\n  return \"http://\".concat(host, \":\").concat(port, \"/livereload.js\");\n};\n\nmodule.exports = {\n  start: start,\n  getReloadScriptUrl: getReloadScriptUrl\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpdmVSZWxvYWRTZXJ2ZXIuanMiXSwibmFtZXMiOlsiZ2F6ZSIsInJlcXVpcmUiLCJ0aW55bHIiLCJwcm9ncmFtIiwicmVhZE1ldGFkYXRhIiwic3RhcnQiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiTElWRVJFTE9BRF9QT1JUIiwic2VydmVyIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImdldERvY3NQYXRoIiwib24iLCJub3RpZnlDbGllbnRzIiwiZ2V0UmVsb2FkU2NyaXB0VXJsIiwiaG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXRCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBQ0EsSUFBTUcsWUFBWSxHQUFHSCxPQUFPLENBQUMsbUJBQUQsQ0FBNUI7O0FBRUEsU0FBU0ksS0FBVCxDQUFlQyxJQUFmLEVBQXFCO0FBQ25CQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsUUFBWixHQUF1QixhQUF2QjtBQUNBRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsZUFBWixHQUE4QkosSUFBOUI7QUFDQSxNQUFNSyxNQUFNLEdBQUdULE1BQU0sRUFBckI7QUFDQVMsRUFBQUEsTUFBTSxDQUFDQyxNQUFQLENBQWNOLElBQWQsRUFBb0IsWUFBTTtBQUN4Qk8sSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksc0NBQVosRUFBb0RSLElBQXBEO0FBQ0QsR0FGRDtBQUlBTixFQUFBQSxJQUFJLENBQ0YsY0FBT0ksWUFBWSxDQUFDVyxXQUFiLEVBQVAsWUFBMEMsTUFBMUMsRUFBa0Qsb0JBQWxELENBREUsRUFFRixZQUFZO0FBQ1YsU0FBS0MsRUFBTCxDQUFRLEtBQVIsRUFBZSxZQUFNO0FBQ25CTCxNQUFBQSxNQUFNLENBQUNNLGFBQVAsQ0FBcUIsQ0FBQyxHQUFELENBQXJCO0FBQ0QsS0FGRDtBQUdELEdBTkMsQ0FBSjtBQVFEOztBQUNELElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBcUIsR0FBTTtBQUMvQixNQUFNWixJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxlQUF6QjtBQUNBLE1BQU1TLElBQUksR0FBR2hCLE9BQU8sQ0FBQ2dCLElBQVIsSUFBZ0IsV0FBN0I7QUFFQSwwQkFBaUJBLElBQWpCLGNBQXlCYixJQUF6QjtBQUNELENBTEQ7O0FBT0FjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmaEIsRUFBQUEsS0FBSyxFQUFMQSxLQURlO0FBRWZhLEVBQUFBLGtCQUFrQixFQUFsQkE7QUFGZSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9iZmMvYmZjL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IGdhemUgPSByZXF1aXJlKCdnYXplJyk7XG5jb25zdCB0aW55bHIgPSByZXF1aXJlKCd0aW55LWxyJyk7XG5jb25zdCBwcm9ncmFtID0gcmVxdWlyZSgnY29tbWFuZGVyJyk7XG5jb25zdCByZWFkTWV0YWRhdGEgPSByZXF1aXJlKCcuL3JlYWRNZXRhZGF0YS5qcycpO1xuXG5mdW5jdGlvbiBzdGFydChwb3J0KSB7XG4gIHByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ2RldmVsb3BtZW50JztcbiAgcHJvY2Vzcy5lbnYuTElWRVJFTE9BRF9QT1JUID0gcG9ydDtcbiAgY29uc3Qgc2VydmVyID0gdGlueWxyKCk7XG4gIHNlcnZlci5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdMaXZlUmVsb2FkIHNlcnZlciBzdGFydGVkIG9uIHBvcnQgJWQnLCBwb3J0KTtcbiAgfSk7XG5cbiAgZ2F6ZShcbiAgICBbYC4uLyR7cmVhZE1ldGFkYXRhLmdldERvY3NQYXRoKCl9LyoqLypgLCAnKiovKicsICchbm9kZV9tb2R1bGVzLyoqLyonXSxcbiAgICBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLm9uKCdhbGwnLCAoKSA9PiB7XG4gICAgICAgIHNlcnZlci5ub3RpZnlDbGllbnRzKFsnLyddKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICk7XG59XG5jb25zdCBnZXRSZWxvYWRTY3JpcHRVcmwgPSAoKSA9PiB7XG4gIGNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5MSVZFUkVMT0FEX1BPUlQ7XG4gIGNvbnN0IGhvc3QgPSBwcm9ncmFtLmhvc3QgfHwgJ2xvY2FsaG9zdCc7XG5cbiAgcmV0dXJuIGBodHRwOi8vJHtob3N0fToke3BvcnR9L2xpdmVyZWxvYWQuanNgO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0YXJ0LFxuICBnZXRSZWxvYWRTY3JpcHRVcmwsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "liveReloadServer.js"
      ],
      "names": [
        "gaze",
        "require",
        "tinylr",
        "program",
        "readMetadata",
        "start",
        "port",
        "process",
        "env",
        "NODE_ENV",
        "LIVERELOAD_PORT",
        "server",
        "listen",
        "console",
        "log",
        "getDocsPath",
        "on",
        "notifyClients",
        "getReloadScriptUrl",
        "host",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASI,KAAT,CAAeC,IAAf,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAuB,aAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYE,eAAZ,GAA8BJ,IAA9B;AACA,MAAMK,MAAM,GAAGT,MAAM,EAArB;AACAS,EAAAA,MAAM,CAACC,MAAP,CAAcN,IAAd,EAAoB,YAAM;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,IAApD;AACD,GAFD;AAIAN,EAAAA,IAAI,CACF,cAAOI,YAAY,CAACW,WAAb,EAAP,YAA0C,MAA1C,EAAkD,oBAAlD,CADE,EAEF,YAAY;AACV,SAAKC,EAAL,CAAQ,KAAR,EAAe,YAAM;AACnBL,MAAAA,MAAM,CAACM,aAAP,CAAqB,CAAC,GAAD,CAArB;AACD,KAFD;AAGD,GANC,CAAJ;AAQD;;AACD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,MAAMZ,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYE,eAAzB;AACA,MAAMS,IAAI,GAAGhB,OAAO,CAACgB,IAAR,IAAgB,WAA7B;AAEA,0BAAiBA,IAAjB,cAAyBb,IAAzB;AACD,CALD;;AAOAc,MAAM,CAACC,OAAP,GAAiB;AACfhB,EAAAA,KAAK,EAALA,KADe;AAEfa,EAAAA,kBAAkB,EAAlBA;AAFe,CAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst gaze = require('gaze');\nconst tinylr = require('tiny-lr');\nconst program = require('commander');\nconst readMetadata = require('./readMetadata.js');\n\nfunction start(port) {\n  process.env.NODE_ENV = 'development';\n  process.env.LIVERELOAD_PORT = port;\n  const server = tinylr();\n  server.listen(port, () => {\n    console.log('LiveReload server started on port %d', port);\n  });\n\n  gaze(\n    [`../${readMetadata.getDocsPath()}/**/*`, '**/*', '!node_modules/**/*'],\n    function () {\n      this.on('all', () => {\n        server.notifyClients(['/']);\n      });\n    },\n  );\n}\nconst getReloadScriptUrl = () => {\n  const port = process.env.LIVERELOAD_PORT;\n  const host = program.host || 'localhost';\n\n  return `http://${host}:${port}/livereload.js`;\n};\n\nmodule.exports = {\n  start,\n  getReloadScriptUrl,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/feed.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/feed.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/feed.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/feed.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "feed.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _require = require('feed'),\n    Feed = _require.Feed;\n\nvar truncateHtml = require('truncate-html');\n\nvar BLOG_POST_SUMMARY_LENGTH = 250;\nvar CWD = process.cwd();\n\nvar siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar readMetadata = require('./readMetadata.js');\n\nvar blogRootURL = \"\".concat(siteConfig.url + siteConfig.baseUrl, \"blog\");\nvar siteImageURL = siteConfig.url + siteConfig.baseUrl + siteConfig.headerIcon;\n\nvar utils = require('../core/utils');\n\nvar renderMarkdown = require('../core/renderMarkdown.js');\n\nmodule.exports = function (type) {\n  console.log('feed.js triggered...');\n  type = type || 'rss';\n  readMetadata.generateMetadataBlog(siteConfig);\n\n  var MetadataBlog = require('../core/MetadataBlog.js');\n\n  var MetadataPublicBlog = process.env.NODE_ENV === 'development' ? MetadataBlog : MetadataBlog.filter(function (item) {\n    return !item.unlisted;\n  });\n  var feed = new Feed({\n    title: \"\".concat(siteConfig.title, \" Blog\"),\n    description: \"The best place to stay up-to-date with the latest \".concat(siteConfig.title, \" news and events.\"),\n    id: blogRootURL,\n    link: blogRootURL,\n    image: siteImageURL,\n    copyright: siteConfig.copyright,\n    updated: new Date(MetadataPublicBlog[0].date)\n  });\n  MetadataPublicBlog.forEach(function (post) {\n    var url = \"\".concat(blogRootURL, \"/\").concat(post.path);\n    var description = utils.blogPostHasTruncateMarker(post.content) ? renderMarkdown(utils.extractBlogPostBeforeTruncate(post.content)) : truncateHtml(renderMarkdown(post.content), BLOG_POST_SUMMARY_LENGTH);\n    feed.addItem({\n      title: post.title,\n      link: url,\n      author: [{\n        name: post.author,\n        link: post.authorURL\n      }],\n      date: new Date(post.date),\n      description: description\n    });\n  });\n  return type === 'rss' ? feed.rss2() : feed.atom1();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZlZWQuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsIkZlZWQiLCJ0cnVuY2F0ZUh0bWwiLCJCTE9HX1BPU1RfU1VNTUFSWV9MRU5HVEgiLCJDV0QiLCJwcm9jZXNzIiwiY3dkIiwic2l0ZUNvbmZpZyIsInJlYWRNZXRhZGF0YSIsImJsb2dSb290VVJMIiwidXJsIiwiYmFzZVVybCIsInNpdGVJbWFnZVVSTCIsImhlYWRlckljb24iLCJ1dGlscyIsInJlbmRlck1hcmtkb3duIiwibW9kdWxlIiwiZXhwb3J0cyIsInR5cGUiLCJjb25zb2xlIiwibG9nIiwiZ2VuZXJhdGVNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YVB1YmxpY0Jsb2ciLCJlbnYiLCJOT0RFX0VOViIsImZpbHRlciIsIml0ZW0iLCJ1bmxpc3RlZCIsImZlZWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiaWQiLCJsaW5rIiwiaW1hZ2UiLCJjb3B5cmlnaHQiLCJ1cGRhdGVkIiwiRGF0ZSIsImRhdGUiLCJmb3JFYWNoIiwicG9zdCIsInBhdGgiLCJibG9nUG9zdEhhc1RydW5jYXRlTWFya2VyIiwiY29udGVudCIsImV4dHJhY3RCbG9nUG9zdEJlZm9yZVRydW5jYXRlIiwiYWRkSXRlbSIsImF1dGhvciIsIm5hbWUiLCJhdXRob3JVUkwiLCJyc3MyIiwiYXRvbTEiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO2VBRWVBLE9BQU8sQ0FBQyxNQUFELEM7SUFBZkMsSSxZQUFBQSxJOztBQUNQLElBQU1DLFlBQVksR0FBR0YsT0FBTyxDQUFDLGVBQUQsQ0FBNUI7O0FBRUEsSUFBTUcsd0JBQXdCLEdBQUcsR0FBakM7QUFFQSxJQUFNQyxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFaOztBQUNBLElBQU1DLFVBQVUsR0FBR1AsT0FBTyxXQUFJSSxHQUFKLG9CQUExQjs7QUFDQSxJQUFNSSxZQUFZLEdBQUdSLE9BQU8sQ0FBQyxtQkFBRCxD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L2RvY3VzYXVydXMvbGliL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IHtGZWVkfSA9IHJlcXVpcmUoJ2ZlZWQnKTtcbmNvbnN0IHRydW5jYXRlSHRtbCA9IHJlcXVpcmUoJ3RydW5jYXRlLWh0bWwnKTtcblxuY29uc3QgQkxPR19QT1NUX1NVTU1BUllfTEVOR1RIID0gMjUwO1xuXG5jb25zdCBDV0QgPSBwcm9jZXNzLmN3ZCgpO1xuY29uc3Qgc2l0ZUNvbmZpZyA9IHJlcXVpcmUoYCR7Q1dEfS9zaXRlQ29uZmlnLmpzYCk7XG5jb25zdCByZWFkTWV0YWRhdGEgPSByZXF1aXJlKCcuL3JlYWRNZXRhZGF0YS5qcycpO1xuXG5jb25zdCBibG9nUm9vdFVSTCA9IGAke3NpdGVDb25maWcudXJsICsgc2l0ZUNvbmZpZy5iYXNlVXJsfWJsb2dgO1xuY29uc3Qgc2l0ZUltYWdlVVJMID1cbiAgc2l0ZUNvbmZpZy51cmwgKyBzaXRlQ29uZmlnLmJhc2VVcmwgKyBzaXRlQ29uZmlnLmhlYWRlckljb247XG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4uL2NvcmUvdXRpbHMnKTtcblxuY29uc3QgcmVuZGVyTWFya2Rvd24gPSByZXF1aXJlKCcuLi9jb3JlL3JlbmRlck1hcmtkb3duLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHR5cGUpIHtcbiAgY29uc29sZS5sb2coJ2ZlZWQuanMgdHJpZ2dlcmVkLi4uJyk7XG5cbiAgdHlwZSA9IHR5cGUgfHwgJ3Jzcyc7XG5cbiAgcmVhZE1ldGFkYXRhLmdlbmVyYXRlTWV0YWRhdGFCbG9nKHNpdGVDb25maWcpO1xuICBjb25zdCBNZXRhZGF0YUJsb2cgPSByZXF1aXJlKCcuLi9jb3JlL01ldGFkYXRhQmxvZy5qcycpO1xuICBjb25zdCBNZXRhZGF0YVB1YmxpY0Jsb2cgPVxuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnXG4gICAgICA/IE1ldGFkYXRhQmxvZ1xuICAgICAgOiBNZXRhZGF0YUJsb2cuZmlsdGVyKChpdGVtKSA9PiAhaXRlbS51bmxpc3RlZCk7XG5cbiAgY29uc3QgZmVlZCA9IG5ldyBGZWVkKHtcbiAgICB0aXRsZTogYCR7c2l0ZUNvbmZpZy50aXRsZX0gQmxvZ2AsXG4gICAgZGVzY3JpcHRpb246IGBUaGUgYmVzdCBwbGFjZSB0byBzdGF5IHVwLXRvLWRhdGUgd2l0aCB0aGUgbGF0ZXN0ICR7c2l0ZUNvbmZpZy50aXRsZX0gbmV3cyBhbmQgZXZlbnRzLmAsXG4gICAgaWQ6IGJsb2dSb290VVJMLFxuICAgIGxpbms6IGJsb2dSb290VVJMLFxuICAgIGltYWdlOiBzaXRlSW1hZ2VVUkwsXG4gICAgY29weXJpZ2h0OiBzaXRlQ29uZmlnLmNvcHlyaWdodCxcbiAgICB1cGRhdGVkOiBuZXcgRGF0ZShNZXRhZGF0YVB1YmxpY0Jsb2dbMF0uZGF0ZSksXG4gIH0pO1xuXG4gIE1ldGFkYXRhUHVibGljQmxvZy5mb3JFYWNoKChwb3N0KSA9PiB7XG4gICAgY29uc3QgdXJsID0gYCR7YmxvZ1Jvb3RVUkx9LyR7cG9zdC5wYXRofWA7XG4gICAgY29uc3QgZGVzY3JpcHRpb24gPSB1dGlscy5ibG9nUG9zdEhhc1RydW5jYXRlTWFya2VyKHBvc3QuY29udGVudClcbiAgICAgID8gcmVuZGVyTWFya2Rvd24odXRpbHMuZXh0cmFjdEJsb2dQb3N0QmVmb3JlVHJ1bmNhdGUocG9zdC5jb250ZW50KSlcbiAgICAgIDogdHJ1bmNhdGVIdG1sKHJlbmRlck1hcmtkb3duKHBvc3QuY29udGVudCksIEJMT0dfUE9TVF9TVU1NQVJZX0xFTkdUSCk7XG5cbiAgICBmZWVkLmFkZEl0ZW0oe1xuICAgICAgdGl0bGU6IHBvc3QudGl0bGUsXG4gICAgICBsaW5rOiB1cmwsXG4gICAgICBhdXRob3I6IFtcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IHBvc3QuYXV0aG9yLFxuICAgICAgICAgIGxpbms6IHBvc3QuYXV0aG9yVVJMLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIGRhdGU6IG5ldyBEYXRlKHBvc3QuZGF0ZSksXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIHR5cGUgPT09ICdyc3MnID8gZmVlZC5yc3MyKCkgOiBmZWVkLmF0b20xKCk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "feed.js"
      ],
      "names": [
        "require",
        "Feed",
        "truncateHtml",
        "BLOG_POST_SUMMARY_LENGTH",
        "CWD",
        "process",
        "cwd",
        "siteConfig",
        "readMetadata",
        "blogRootURL",
        "url",
        "baseUrl",
        "siteImageURL",
        "headerIcon",
        "utils",
        "renderMarkdown",
        "module",
        "exports",
        "type",
        "console",
        "log",
        "generateMetadataBlog",
        "MetadataBlog",
        "MetadataPublicBlog",
        "env",
        "NODE_ENV",
        "filter",
        "item",
        "unlisted",
        "feed",
        "title",
        "description",
        "id",
        "link",
        "image",
        "copyright",
        "updated",
        "Date",
        "date",
        "forEach",
        "post",
        "path",
        "blogPostHasTruncateMarker",
        "content",
        "extractBlogPostBeforeTruncate",
        "addItem",
        "author",
        "name",
        "authorURL",
        "rss2",
        "atom1"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst {Feed} = require('feed');\nconst truncateHtml = require('truncate-html');\n\nconst BLOG_POST_SUMMARY_LENGTH = 250;\n\nconst CWD = process.cwd();\nconst siteConfig = require(`${CWD}/siteConfig.js`);\nconst readMetadata = require('./readMetadata.js');\n\nconst blogRootURL = `${siteConfig.url + siteConfig.baseUrl}blog`;\nconst siteImageURL =\n  siteConfig.url + siteConfig.baseUrl + siteConfig.headerIcon;\nconst utils = require('../core/utils');\n\nconst renderMarkdown = require('../core/renderMarkdown.js');\n\nmodule.exports = function (type) {\n  console.log('feed.js triggered...');\n\n  type = type || 'rss';\n\n  readMetadata.generateMetadataBlog(siteConfig);\n  const MetadataBlog = require('../core/MetadataBlog.js');\n  const MetadataPublicBlog =\n    process.env.NODE_ENV === 'development'\n      ? MetadataBlog\n      : MetadataBlog.filter((item) => !item.unlisted);\n\n  const feed = new Feed({\n    title: `${siteConfig.title} Blog`,\n    description: `The best place to stay up-to-date with the latest ${siteConfig.title} news and events.`,\n    id: blogRootURL,\n    link: blogRootURL,\n    image: siteImageURL,\n    copyright: siteConfig.copyright,\n    updated: new Date(MetadataPublicBlog[0].date),\n  });\n\n  MetadataPublicBlog.forEach((post) => {\n    const url = `${blogRootURL}/${post.path}`;\n    const description = utils.blogPostHasTruncateMarker(post.content)\n      ? renderMarkdown(utils.extractBlogPostBeforeTruncate(post.content))\n      : truncateHtml(renderMarkdown(post.content), BLOG_POST_SUMMARY_LENGTH);\n\n    feed.addItem({\n      title: post.title,\n      link: url,\n      author: [\n        {\n          name: post.author,\n          link: post.authorURL,\n        },\n      ],\n      date: new Date(post.date),\n      description,\n    });\n  });\n\n  return type === 'rss' ? feed.rss2() : feed.atom1();\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/renderMarkdown.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/renderMarkdown.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/renderMarkdown.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/renderMarkdown.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "renderMarkdown.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _ = require('lodash');\n\nvar hljs = require('highlight.js');\n\nvar _require = require('remarkable'),\n    Markdown = _require.Remarkable;\n\nvar _require2 = require('remarkable/linkify'),\n    linkify = _require2.linkify;\n\nvar prismjs = require('prismjs');\n\nvar loadLanguages = require('prismjs/components/index');\n\nvar chalk = require('chalk');\n\nvar anchors = require('./anchors.js');\n\nvar CWD = process.cwd();\nvar alias = {\n  js: 'jsx',\n  html: 'markup',\n  sh: 'bash',\n  md: 'markdown'\n};\n\nvar MarkdownRenderer = /*#__PURE__*/function () {\n  function MarkdownRenderer() {\n    _classCallCheck(this, MarkdownRenderer);\n\n    var siteConfig = require(\"\".concat(CWD, \"/siteConfig.js\"));\n\n    var markdownOptions = {\n      // Highlight.js expects hljs css classes on the code element.\n      // This results in <pre><code class=\"hljs css languages-jsx\">\n      langPrefix: 'hljs css language-',\n      highlight: function highlight(str, lang) {\n        // User's own custom highlighting function\n        if (siteConfig.highlight && siteConfig.highlight.hljs) {\n          siteConfig.highlight.hljs(hljs);\n        } // Fallback to default language\n\n\n        lang = lang || siteConfig.highlight && siteConfig.highlight.defaultLang;\n\n        if (lang === 'text') {\n          return str;\n        }\n\n        if (lang) {\n          try {\n            if (siteConfig.usePrism === true || siteConfig.usePrism && siteConfig.usePrism.length > 0 && siteConfig.usePrism.indexOf(lang) !== -1) {\n              var language = alias[lang] || lang;\n\n              try {\n                // Currently people using prismjs on Node have to individually require()\n                // every single language (https://github.com/PrismJS/prism/issues/593)\n                loadLanguages([language]);\n                return prismjs.highlight(str, prismjs.languages[language], language);\n              } catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                  var unsupportedLanguageError = chalk.yellow(\"Warning: \".concat(chalk.red(language), \" is not supported by prismjs.\") + '\\nPlease refer to https://prismjs.com/#languages-list for the list of supported languages.');\n                  console.log(unsupportedLanguageError);\n                } else console.error(err);\n              }\n            }\n\n            if (hljs.getLanguage(lang)) {\n              return hljs.highlight(lang, str).value;\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {\n          console.error(err);\n        }\n\n        return '';\n      },\n      html: true\n    }; // Allow overriding default options\n\n    if (siteConfig.markdownOptions) {\n      markdownOptions = _.merge({}, markdownOptions, siteConfig.markdownOptions);\n    }\n\n    var md = new Markdown(markdownOptions); // Register anchors plugin\n\n    md.use(anchors, siteConfig.slugPreprocessor); // Linkify\n\n    md.use(linkify); // Allow client sites to register their own plugins\n\n    if (siteConfig.markdownPlugins) {\n      siteConfig.markdownPlugins.forEach(function (plugin) {\n        md.use(plugin);\n      });\n    }\n\n    this.md = md;\n  }\n\n  _createClass(MarkdownRenderer, [{\n    key: \"toHtml\",\n    value: function toHtml(source) {\n      var html = this.md.render(source); // Ensure fenced code blocks use Highlight.js hljs class\n      // https://github.com/jonschlinkert/remarkable/issues/224\n\n      return html.replace(/<pre><code>/g, '<pre><code class=\"hljs\">');\n    }\n  }]);\n\n  return MarkdownRenderer;\n}();\n\nvar renderMarkdown = new MarkdownRenderer();\n\nmodule.exports = function (source) {\n  return renderMarkdown.toHtml(source);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "renderMarkdown.js"
      ],
      "names": [
        "_",
        "require",
        "hljs",
        "Markdown",
        "Remarkable",
        "linkify",
        "prismjs",
        "loadLanguages",
        "chalk",
        "anchors",
        "CWD",
        "process",
        "cwd",
        "alias",
        "js",
        "html",
        "sh",
        "md",
        "MarkdownRenderer",
        "siteConfig",
        "markdownOptions",
        "langPrefix",
        "highlight",
        "str",
        "lang",
        "defaultLang",
        "usePrism",
        "length",
        "indexOf",
        "language",
        "languages",
        "err",
        "code",
        "unsupportedLanguageError",
        "yellow",
        "red",
        "console",
        "log",
        "error",
        "getLanguage",
        "value",
        "highlightAuto",
        "merge",
        "use",
        "slugPreprocessor",
        "markdownPlugins",
        "forEach",
        "plugin",
        "source",
        "render",
        "replace",
        "renderMarkdown",
        "module",
        "exports",
        "toHtml"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst _ = require('lodash');\nconst hljs = require('highlight.js');\nconst {Remarkable: Markdown} = require('remarkable');\nconst {linkify} = require('remarkable/linkify');\nconst prismjs = require('prismjs');\nconst loadLanguages = require('prismjs/components/index');\nconst chalk = require('chalk');\nconst anchors = require('./anchors.js');\n\nconst CWD = process.cwd();\n\nconst alias = {\n  js: 'jsx',\n  html: 'markup',\n  sh: 'bash',\n  md: 'markdown',\n};\n\nclass MarkdownRenderer {\n  constructor() {\n    const siteConfig = require(`${CWD}/siteConfig.js`);\n    let markdownOptions = {\n      // Highlight.js expects hljs css classes on the code element.\n      // This results in <pre><code class=\"hljs css languages-jsx\">\n      langPrefix: 'hljs css language-',\n      highlight(str, lang) {\n        // User's own custom highlighting function\n        if (siteConfig.highlight && siteConfig.highlight.hljs) {\n          siteConfig.highlight.hljs(hljs);\n        }\n        // Fallback to default language\n        lang =\n          lang || (siteConfig.highlight && siteConfig.highlight.defaultLang);\n        if (lang === 'text') {\n          return str;\n        }\n        if (lang) {\n          try {\n            if (\n              siteConfig.usePrism === true ||\n              (siteConfig.usePrism &&\n                siteConfig.usePrism.length > 0 &&\n                siteConfig.usePrism.indexOf(lang) !== -1)\n            ) {\n              const language = alias[lang] || lang;\n              try {\n                // Currently people using prismjs on Node have to individually require()\n                // every single language (https://github.com/PrismJS/prism/issues/593)\n                loadLanguages([language]);\n                return prismjs.highlight(\n                  str,\n                  prismjs.languages[language],\n                  language,\n                );\n              } catch (err) {\n                if (err.code === 'MODULE_NOT_FOUND') {\n                  const unsupportedLanguageError = chalk.yellow(\n                    `Warning: ${chalk.red(\n                      language,\n                    )} is not supported by prismjs.` +\n                      '\\nPlease refer to https://prismjs.com/#languages-list for the list of supported languages.',\n                  );\n                  console.log(unsupportedLanguageError);\n                } else console.error(err);\n              }\n            }\n            if (hljs.getLanguage(lang)) {\n              return hljs.highlight(lang, str).value;\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {\n          console.error(err);\n        }\n\n        return '';\n      },\n      html: true,\n    };\n\n    // Allow overriding default options\n    if (siteConfig.markdownOptions) {\n      markdownOptions = _.merge(\n        {},\n        markdownOptions,\n        siteConfig.markdownOptions,\n      );\n    }\n\n    const md = new Markdown(markdownOptions);\n\n    // Register anchors plugin\n    md.use(anchors, siteConfig.slugPreprocessor);\n\n    // Linkify\n    md.use(linkify);\n\n    // Allow client sites to register their own plugins\n    if (siteConfig.markdownPlugins) {\n      siteConfig.markdownPlugins.forEach((plugin) => {\n        md.use(plugin);\n      });\n    }\n\n    this.md = md;\n  }\n\n  toHtml(source) {\n    const html = this.md.render(source);\n\n    // Ensure fenced code blocks use Highlight.js hljs class\n    // https://github.com/jonschlinkert/remarkable/issues/224\n    return html.replace(/<pre><code>/g, '<pre><code class=\"hljs\">');\n  }\n}\n\nconst renderMarkdown = new MarkdownRenderer();\n\nmodule.exports = (source) => renderMarkdown.toHtml(source);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596460761000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/anchors.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/anchors.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/anchors.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/anchors.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "anchors.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar GithubSlugger = require('github-slugger');\n\nvar toSlug = require('./toSlug');\n/**\n * The anchors plugin adds GFM-style anchors to headings.\n */\n\n\nfunction anchors(md, slugPreprocessor) {\n  var originalRender = md.renderer.rules.heading_open;\n\n  md.renderer.rules.heading_open = function (tokens, idx, options, env) {\n    if (!env.slugger) {\n      env.slugger = new GithubSlugger();\n    }\n\n    var slugger = env.slugger;\n    var textToken = tokens[idx + 1];\n\n    if (textToken.content) {\n      var slugBase = slugPreprocessor && typeof slugPreprocessor === 'function' ? slugPreprocessor(textToken.content) : textToken.content;\n      var anchor = toSlug(slugBase, slugger);\n      return \"<h\".concat(tokens[idx].hLevel, \"><a class=\\\"anchor\\\" aria-hidden=\\\"true\\\" id=\\\"\").concat(anchor, \"\\\"></a><a href=\\\"#\").concat(anchor, \"\\\" aria-hidden=\\\"true\\\" class=\\\"hash-link\\\"><svg class=\\\"hash-link-icon\\\" aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>\");\n    }\n\n    return originalRender(tokens, idx, options, env);\n  };\n}\n\nmodule.exports = anchors;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuY2hvcnMuanMiXSwibmFtZXMiOlsiR2l0aHViU2x1Z2dlciIsInJlcXVpcmUiLCJ0b1NsdWciLCJhbmNob3JzIiwibWQiLCJzbHVnUHJlcHJvY2Vzc29yIiwib3JpZ2luYWxSZW5kZXIiLCJyZW5kZXJlciIsInJ1bGVzIiwiaGVhZGluZ19vcGVuIiwidG9rZW5zIiwiaWR4Iiwib3B0aW9ucyIsImVudiIsInNsdWdnZXIiLCJ0ZXh0VG9rZW4iLCJjb250ZW50Iiwic2x1Z0Jhc2UiLCJhbmNob3IiLCJoTGV2ZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLGFBQWEsR0FBR0MsT0FBTyxDQUFDLGdCQUFELENBQTdCOztBQUNBLElBQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7QUFFQTtBQUNBO0FBQ0E7OztBQUNBLFNBQVNFLE9BQVQsQ0FBaUJDLEVBQWpCLEVBQXFCQyxnQkFBckIsRUFBdUM7QUFDckMsTUFBTUMsY0FBYyxHQUFHRixFQUFFLENBQUNHLFFBQUgsQ0FBWUMsS0FBWixDQUFrQkMsWUFBekM7O0FBRUFMLEVBQUFBLEVBQUUsQ0FBQ0csUUFBSCxDQUFZQyxLQUFaLENBQWtCQyxZQUFsQixHQUFpQyxVQUFVQyxNQUFWLEVBQWtCQyxHQUFsQixFQUF1QkMsT0FBdkIsRUFBZ0NDLEdBQWhDLEVBQXFDO0FBQ3BFLFFBQUksQ0FBQ0EsR0FBRyxDQUFDQyxPQUFULEVBQWtCO0FBQ2hCRCxNQUFBQSxHQUFHLENBQUNDLE9BQUosR0FBYyxJQUFJZCxhQUFKLEVBQWQ7QUFDRDs7QUFDRCxRQUFNYyxPQUFPLEdBQUdELEdBQUcsQ0FBQ0MsT0FBcEI7QUFDQSxRQUFNQyxTQUFTLEdBQUdMLE1BQU0sQ0FBQ0MsR0FBRyxHQUFHLENBQVAsQ0FBeEI7O0FBRUEsUUFBSUksU0FBUyxDQUFDQyxPQUFkLEVBQXVCO0FBQ3JCLFVBQU1DLFFBQVEsR0FDWlosZ0JBQWdCLElBQUksT0FBT0EsZ0JBQVAsS0FBNEIsVUFBaEQsR0FDSUEsZ0JBQWdCLENBQUNVLFNBQVMsQ0FBQ0MsT0FBWCxDQURwQixHQUVJRCxTQUFTLENBQUNDLE9BSGhCO0FBSUEsVUFBTUUsTUFBTSxHQUFHaEIsTUFBTSxDQUFDZSxRQUFELEVBQVdILE9BQVgsQ0FBckI7QUFDQSx5QkFBWUosTUFBTSxDQUFDQyxHQUFELENBQU4sQ0FBWVEsTUFBeEIsNERBQTJFRCxNQUEzRSwrQkFBb0dBLE1BQXBHO0FBQ0Q7O0FBRUQsV0FBT1osY0FBYyxDQUFDSSxNQUFELEVBQVNDLEdBQVQsRUFBY0MsT0FBZCxFQUF1QkMsR0FBdkIsQ0FBckI7QUFDRCxHQWpCRDtBQWtCRDs7QUFFRE8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCbEIsT0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgR2l0aHViU2x1Z2dlciA9IHJlcXVpcmUoJ2dpdGh1Yi1zbHVnZ2VyJyk7XG5jb25zdCB0b1NsdWcgPSByZXF1aXJlKCcuL3RvU2x1ZycpO1xuXG4vKipcbiAqIFRoZSBhbmNob3JzIHBsdWdpbiBhZGRzIEdGTS1zdHlsZSBhbmNob3JzIHRvIGhlYWRpbmdzLlxuICovXG5mdW5jdGlvbiBhbmNob3JzKG1kLCBzbHVnUHJlcHJvY2Vzc29yKSB7XG4gIGNvbnN0IG9yaWdpbmFsUmVuZGVyID0gbWQucmVuZGVyZXIucnVsZXMuaGVhZGluZ19vcGVuO1xuXG4gIG1kLnJlbmRlcmVyLnJ1bGVzLmhlYWRpbmdfb3BlbiA9IGZ1bmN0aW9uICh0b2tlbnMsIGlkeCwgb3B0aW9ucywgZW52KSB7XG4gICAgaWYgKCFlbnYuc2x1Z2dlcikge1xuICAgICAgZW52LnNsdWdnZXIgPSBuZXcgR2l0aHViU2x1Z2dlcigpO1xuICAgIH1cbiAgICBjb25zdCBzbHVnZ2VyID0gZW52LnNsdWdnZXI7XG4gICAgY29uc3QgdGV4dFRva2VuID0gdG9rZW5zW2lkeCArIDFdO1xuXG4gICAgaWYgKHRleHRUb2tlbi5jb250ZW50KSB7XG4gICAgICBjb25zdCBzbHVnQmFzZSA9XG4gICAgICAgIHNsdWdQcmVwcm9jZXNzb3IgJiYgdHlwZW9mIHNsdWdQcmVwcm9jZXNzb3IgPT09ICdmdW5jdGlvbidcbiAgICAgICAgICA/IHNsdWdQcmVwcm9jZXNzb3IodGV4dFRva2VuLmNvbnRlbnQpXG4gICAgICAgICAgOiB0ZXh0VG9rZW4uY29udGVudDtcbiAgICAgIGNvbnN0IGFuY2hvciA9IHRvU2x1ZyhzbHVnQmFzZSwgc2x1Z2dlcik7XG4gICAgICByZXR1cm4gYDxoJHt0b2tlbnNbaWR4XS5oTGV2ZWx9PjxhIGNsYXNzPVwiYW5jaG9yXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCIgaWQ9XCIke2FuY2hvcn1cIj48L2E+PGEgaHJlZj1cIiMke2FuY2hvcn1cIiBhcmlhLWhpZGRlbj1cInRydWVcIiBjbGFzcz1cImhhc2gtbGlua1wiPjxzdmcgY2xhc3M9XCJoYXNoLWxpbmstaWNvblwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGhlaWdodD1cIjE2XCIgdmVyc2lvbj1cIjEuMVwiIHZpZXdCb3g9XCIwIDAgMTYgMTZcIiB3aWR0aD1cIjE2XCI+PHBhdGggZmlsbC1ydWxlPVwiZXZlbm9kZFwiIGQ9XCJNNCA5aDF2MUg0Yy0xLjUgMC0zLTEuNjktMy0zLjVTMi41NSAzIDQgM2g0YzEuNDUgMCAzIDEuNjkgMyAzLjUgMCAxLjQxLS45MSAyLjcyLTIgMy4yNVY4LjU5Yy41OC0uNDUgMS0xLjI3IDEtMi4wOUMxMCA1LjIyIDguOTggNCA4IDRINGMtLjk4IDAtMiAxLjIyLTIgMi41UzMgOSA0IDl6bTktM2gtMXYxaDFjMSAwIDIgMS4yMiAyIDIuNVMxMy45OCAxMiAxMyAxMkg5Yy0uOTggMC0yLTEuMjItMi0yLjUgMC0uODMuNDItMS42NCAxLTIuMDlWNi4yNWMtMS4wOS41My0yIDEuODQtMiAzLjI1QzYgMTEuMzEgNy41NSAxMyA5IDEzaDRjMS40NSAwIDMtMS42OSAzLTMuNVMxNC41IDYgMTMgNnpcIj48L3BhdGg+PC9zdmc+PC9hPmA7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKHRva2VucywgaWR4LCBvcHRpb25zLCBlbnYpO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFuY2hvcnM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "anchors.js"
      ],
      "names": [
        "GithubSlugger",
        "require",
        "toSlug",
        "anchors",
        "md",
        "slugPreprocessor",
        "originalRender",
        "renderer",
        "rules",
        "heading_open",
        "tokens",
        "idx",
        "options",
        "env",
        "slugger",
        "textToken",
        "content",
        "slugBase",
        "anchor",
        "hLevel",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gBAAD,CAA7B;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;AACA;AACA;;;AACA,SAASE,OAAT,CAAiBC,EAAjB,EAAqBC,gBAArB,EAAuC;AACrC,MAAMC,cAAc,GAAGF,EAAE,CAACG,QAAH,CAAYC,KAAZ,CAAkBC,YAAzC;;AAEAL,EAAAA,EAAE,CAACG,QAAH,CAAYC,KAAZ,CAAkBC,YAAlB,GAAiC,UAAUC,MAAV,EAAkBC,GAAlB,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AACpE,QAAI,CAACA,GAAG,CAACC,OAAT,EAAkB;AAChBD,MAAAA,GAAG,CAACC,OAAJ,GAAc,IAAId,aAAJ,EAAd;AACD;;AACD,QAAMc,OAAO,GAAGD,GAAG,CAACC,OAApB;AACA,QAAMC,SAAS,GAAGL,MAAM,CAACC,GAAG,GAAG,CAAP,CAAxB;;AAEA,QAAII,SAAS,CAACC,OAAd,EAAuB;AACrB,UAAMC,QAAQ,GACZZ,gBAAgB,IAAI,OAAOA,gBAAP,KAA4B,UAAhD,GACIA,gBAAgB,CAACU,SAAS,CAACC,OAAX,CADpB,GAEID,SAAS,CAACC,OAHhB;AAIA,UAAME,MAAM,GAAGhB,MAAM,CAACe,QAAD,EAAWH,OAAX,CAArB;AACA,yBAAYJ,MAAM,CAACC,GAAD,CAAN,CAAYQ,MAAxB,4DAA2ED,MAA3E,+BAAoGA,MAApG;AACD;;AAED,WAAOZ,cAAc,CAACI,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,CAArB;AACD,GAjBD;AAkBD;;AAEDO,MAAM,CAACC,OAAP,GAAiBlB,OAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst GithubSlugger = require('github-slugger');\nconst toSlug = require('./toSlug');\n\n/**\n * The anchors plugin adds GFM-style anchors to headings.\n */\nfunction anchors(md, slugPreprocessor) {\n  const originalRender = md.renderer.rules.heading_open;\n\n  md.renderer.rules.heading_open = function (tokens, idx, options, env) {\n    if (!env.slugger) {\n      env.slugger = new GithubSlugger();\n    }\n    const slugger = env.slugger;\n    const textToken = tokens[idx + 1];\n\n    if (textToken.content) {\n      const slugBase =\n        slugPreprocessor && typeof slugPreprocessor === 'function'\n          ? slugPreprocessor(textToken.content)\n          : textToken.content;\n      const anchor = toSlug(slugBase, slugger);\n      return `<h${tokens[idx].hLevel}><a class=\"anchor\" aria-hidden=\"true\" id=\"${anchor}\"></a><a href=\"#${anchor}\" aria-hidden=\"true\" class=\"hash-link\"><svg class=\"hash-link-icon\" aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>`;\n    }\n\n    return originalRender(tokens, idx, options, env);\n  };\n}\n\nmodule.exports = anchors;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596460761000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/sitemap.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/sitemap.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/sitemap.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/sitemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "sitemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar fs = require('fs-extra');\n\nvar glob = require('glob');\n\nvar CWD = process.cwd();\n\nvar sitemap = require('sitemap');\n\nvar utils = require('../core/utils');\n\nvar loadConfig = require('./config');\n\nvar siteConfig = loadConfig(\"\".concat(CWD, \"/siteConfig.js\"));\n\nvar readMetadata = require('./readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\n\nvar Metadata = require('../core/metadata.js');\n\nreadMetadata.generateMetadataBlog(siteConfig);\n\nvar MetadataBlog = require('../core/MetadataBlog.js');\n\nmodule.exports = function (callback) {\n  console.log('sitemap.js triggered...');\n  var files = glob.sync(\"\".concat(CWD, \"/pages/en/**/*.js\")); // English-only is the default.\n\n  var enabledLanguages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }]; // If we have a languages.js file, get all the enabled languages in there\n\n  if (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n    var languages = require(\"\".concat(CWD, \"/languages.js\"));\n\n    enabledLanguages = languages.filter(function (lang) {\n      return lang.enabled;\n    });\n  } // Create a url mapping to all the enabled languages files\n\n\n  var urls = files.map(function (file) {\n    var url = file.split('/pages/en')[1];\n    url = siteConfig.cleanUrl ? url.replace(/\\.js$/, '') : url.replace(/\\.js$/, '.html');\n    var links = enabledLanguages.map(function (lang) {\n      var langUrl = lang.tag + url;\n      return {\n        lang: lang.tag,\n        url: langUrl\n      };\n    });\n    return {\n      url: url,\n      changefreq: 'weekly',\n      priority: 0.5,\n      links: links\n    };\n  });\n  MetadataBlog.forEach(function (blog) {\n    urls.push({\n      url: \"/blog/\".concat(utils.getPath(blog.path, siteConfig.cleanUrl)),\n      changefreq: 'weekly',\n      priority: 0.3\n    });\n  });\n  Object.keys(Metadata).filter(function (key) {\n    return Metadata[key].language === 'en';\n  }).forEach(function (key) {\n    var doc = Metadata[key];\n    var docUrl = utils.getPath(doc.permalink, siteConfig.cleanUrl);\n    var docsPart = \"\".concat(siteConfig.docsUrl ? \"\".concat(siteConfig.docsUrl, \"/\") : '');\n    var links = enabledLanguages.map(function (lang) {\n      var langUrl = docUrl.replace(new RegExp(\"^\".concat(docsPart, \"en/\")), \"\".concat(docsPart).concat(lang.tag, \"/\"));\n      return {\n        lang: lang.tag,\n        url: langUrl\n      };\n    });\n    urls.push({\n      url: docUrl,\n      changefreq: 'hourly',\n      priority: 1.0,\n      links: links\n    });\n  });\n  var sm = sitemap.createSitemap({\n    hostname: siteConfig.url + siteConfig.baseUrl,\n    cacheTime: 600 * 1000,\n    // 600 sec - cache purge period\n    urls: urls\n  });\n  sm.toXML(function (err, xml) {\n    callback(err, xml);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sitemap.js"
      ],
      "names": [
        "fs",
        "require",
        "glob",
        "CWD",
        "process",
        "cwd",
        "sitemap",
        "utils",
        "loadConfig",
        "siteConfig",
        "readMetadata",
        "generateMetadataDocs",
        "Metadata",
        "generateMetadataBlog",
        "MetadataBlog",
        "module",
        "exports",
        "callback",
        "console",
        "log",
        "files",
        "sync",
        "enabledLanguages",
        "enabled",
        "name",
        "tag",
        "existsSync",
        "languages",
        "filter",
        "lang",
        "urls",
        "map",
        "file",
        "url",
        "split",
        "cleanUrl",
        "replace",
        "links",
        "langUrl",
        "changefreq",
        "priority",
        "forEach",
        "blog",
        "push",
        "getPath",
        "path",
        "Object",
        "keys",
        "key",
        "language",
        "doc",
        "docUrl",
        "permalink",
        "docsPart",
        "docsUrl",
        "RegExp",
        "sm",
        "createSitemap",
        "hostname",
        "baseUrl",
        "cacheTime",
        "toXML",
        "err",
        "xml"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst fs = require('fs-extra');\n\nconst glob = require('glob');\n\nconst CWD = process.cwd();\n\nconst sitemap = require('sitemap');\nconst utils = require('../core/utils');\n\nconst loadConfig = require('./config');\n\nconst siteConfig = loadConfig(`${CWD}/siteConfig.js`);\n\nconst readMetadata = require('./readMetadata.js');\n\nreadMetadata.generateMetadataDocs();\nconst Metadata = require('../core/metadata.js');\n\nreadMetadata.generateMetadataBlog(siteConfig);\nconst MetadataBlog = require('../core/MetadataBlog.js');\n\nmodule.exports = function (callback) {\n  console.log('sitemap.js triggered...');\n\n  const files = glob.sync(`${CWD}/pages/en/**/*.js`);\n\n  // English-only is the default.\n  let enabledLanguages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n\n  // If we have a languages.js file, get all the enabled languages in there\n  if (fs.existsSync(`${CWD}/languages.js`)) {\n    const languages = require(`${CWD}/languages.js`);\n    enabledLanguages = languages.filter((lang) => lang.enabled);\n  }\n\n  // Create a url mapping to all the enabled languages files\n  const urls = files.map((file) => {\n    let url = file.split('/pages/en')[1];\n    url = siteConfig.cleanUrl\n      ? url.replace(/\\.js$/, '')\n      : url.replace(/\\.js$/, '.html');\n    const links = enabledLanguages.map((lang) => {\n      const langUrl = lang.tag + url;\n      return {lang: lang.tag, url: langUrl};\n    });\n    return {url, changefreq: 'weekly', priority: 0.5, links};\n  });\n\n  MetadataBlog.forEach((blog) => {\n    urls.push({\n      url: `/blog/${utils.getPath(blog.path, siteConfig.cleanUrl)}`,\n      changefreq: 'weekly',\n      priority: 0.3,\n    });\n  });\n\n  Object.keys(Metadata)\n    .filter((key) => Metadata[key].language === 'en')\n    .forEach((key) => {\n      const doc = Metadata[key];\n      const docUrl = utils.getPath(doc.permalink, siteConfig.cleanUrl);\n      const docsPart = `${siteConfig.docsUrl ? `${siteConfig.docsUrl}/` : ''}`;\n      const links = enabledLanguages.map((lang) => {\n        const langUrl = docUrl.replace(\n          new RegExp(`^${docsPart}en/`),\n          `${docsPart}${lang.tag}/`,\n        );\n        return {lang: lang.tag, url: langUrl};\n      });\n      urls.push({\n        url: docUrl,\n        changefreq: 'hourly',\n        priority: 1.0,\n        links,\n      });\n    });\n\n  const sm = sitemap.createSitemap({\n    hostname: siteConfig.url + siteConfig.baseUrl,\n    cacheTime: 600 * 1000, // 600 sec - cache purge period\n    urls,\n  });\n\n  sm.toXML((err, xml) => {\n    callback(err, xml);\n  });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MetadataBlog.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MetadataBlog.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MetadataBlog.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MetadataBlog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "MetadataBlog.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * @generated\n */\nmodule.exports = [];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1ldGFkYXRhQmxvZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFDQTtBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsRUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGdlbmVyYXRlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IFtdO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "MetadataBlog.js"
      ],
      "names": [
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,EAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * @generated\n */\nmodule.exports = [];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637396895882
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsLayout.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsLayout.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsLayout.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsLayout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "DocsLayout.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar classNames = require('classnames');\n\nvar path = require('path');\n\nvar React = require('react');\n\nvar url = require('url');\n\nvar Container = require('./Container.js');\n\nvar Doc = require('./Doc.js');\n\nvar DocsSidebar = require('./DocsSidebar.js');\n\nvar OnPageNav = require('./nav/OnPageNav.js');\n\nvar Site = require('./Site.js');\n\nvar translation = require('../server/translation.js');\n\nvar docs = require('../server/docs.js');\n\nvar _require = require('./utils.js'),\n    idx = _require.idx,\n    getGitLastUpdatedTime = _require.getGitLastUpdatedTime,\n    getGitLastUpdatedBy = _require.getGitLastUpdatedBy; // component used to generate whole webpage for docs, including sidebar/header/footer\n\n\nvar DocsLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(DocsLayout, _React$Component);\n\n  var _super = _createSuper(DocsLayout);\n\n  function DocsLayout() {\n    var _this;\n\n    _classCallCheck(this, DocsLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"getRelativeURL\", function (from, to) {\n      var extension = _this.props.config.cleanUrl ? '' : '.html';\n      var relativeHref = path.relative(\"\".concat(from, \".html\"), \"\".concat(to, \".html\")).replace('\\\\', '/').replace(/^\\.\\.\\//, '').replace(/\\.html$/, extension);\n      return url.resolve(\"\".concat(_this.props.config.baseUrl).concat(_this.props.metadata.permalink), relativeHref);\n    });\n\n    return _this;\n  }\n\n  _createClass(DocsLayout, [{\n    key: \"render\",\n    value: function render() {\n      var metadata = this.props.metadata;\n      var content = this.props.children;\n      var i18n = translation[metadata.language];\n      var id = metadata.localized_id;\n      var defaultTitle = metadata.title;\n      var DocComponent = Doc;\n\n      if (this.props.Doc) {\n        DocComponent = this.props.Doc;\n      }\n\n      var filepath = docs.getFilePath(metadata);\n      var updateTime = this.props.config.enableUpdateTime ? getGitLastUpdatedTime(filepath) : null;\n      var updateAuthor = this.props.config.enableUpdateBy ? getGitLastUpdatedBy(filepath) : null;\n      var title = idx(i18n, ['localized-strings', 'docs', id, 'title']) || defaultTitle;\n      var hasOnPageNav = this.props.config.onPageNav === 'separate';\n      var previousTitle = idx(i18n, ['localized-strings', 'docs', metadata.previous_id, 'sidebar_label']) || idx(i18n, ['localized-strings', 'docs', metadata.previous_id, 'title']) || idx(i18n, ['localized-strings', 'previous']) || metadata.previous_title || 'Previous';\n      var nextTitle = idx(i18n, ['localized-strings', 'docs', metadata.next_id, 'sidebar_label']) || idx(i18n, ['localized-strings', 'docs', metadata.next_id, 'title']) || idx(i18n, ['localized-strings', 'next']) || metadata.next_title || 'Next';\n      return /*#__PURE__*/React.createElement(Site, {\n        config: this.props.config,\n        className: classNames('sideNavVisible', {\n          separateOnPageNav: hasOnPageNav\n        }),\n        title: title,\n        description: metadata.description || content.trim().split('\\n')[0],\n        language: metadata.language,\n        version: metadata.version,\n        metadata: metadata\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docMainWrapper wrapper\"\n      }, /*#__PURE__*/React.createElement(DocsSidebar, {\n        collapsible: this.props.config.docsSideNavCollapsible,\n        metadata: metadata\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mainContainer docsContainer\"\n      }, /*#__PURE__*/React.createElement(DocComponent, {\n        metadata: metadata,\n        content: content,\n        config: this.props.config,\n        source: metadata.source,\n        hideTitle: metadata.hide_title,\n        title: title,\n        version: metadata.version,\n        language: metadata.language\n      }), (updateTime || updateAuthor) && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docLastUpdate\"\n      }, /*#__PURE__*/React.createElement(\"em\", null, \"Last updated\", updateTime && \" on \".concat(updateTime), updateAuthor && \" by \".concat(updateAuthor))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docs-prevnext\"\n      }, metadata.previous_id && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"docs-prev button\",\n        href: this.getRelativeURL(metadata.localized_id, metadata.previous_id)\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"arrow-prev\"\n      }, \"\\u2190 \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: previousTitle.match(/[a-z][A-Z]/) && 'function-name-prevnext'\n      }, previousTitle)), metadata.next_id && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"docs-next button\",\n        href: this.getRelativeURL(metadata.localized_id, metadata.next_id)\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: nextTitle.match(/[a-z][A-Z]/) && 'function-name-prevnext'\n      }, nextTitle), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"arrow-next\"\n      }, \" \\u2192\")))), hasOnPageNav && /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"onPageNav\"\n      }, /*#__PURE__*/React.createElement(OnPageNav, {\n        rawContent: content\n      }))));\n    }\n  }]);\n\n  return DocsLayout;\n}(React.Component);\n\nmodule.exports = DocsLayout;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "DocsLayout.js"
      ],
      "names": [
        "classNames",
        "require",
        "path",
        "React",
        "url",
        "Container",
        "Doc",
        "DocsSidebar",
        "OnPageNav",
        "Site",
        "translation",
        "docs",
        "idx",
        "getGitLastUpdatedTime",
        "getGitLastUpdatedBy",
        "DocsLayout",
        "from",
        "to",
        "extension",
        "props",
        "config",
        "cleanUrl",
        "relativeHref",
        "relative",
        "replace",
        "resolve",
        "baseUrl",
        "metadata",
        "permalink",
        "content",
        "children",
        "i18n",
        "language",
        "id",
        "localized_id",
        "defaultTitle",
        "title",
        "DocComponent",
        "filepath",
        "getFilePath",
        "updateTime",
        "enableUpdateTime",
        "updateAuthor",
        "enableUpdateBy",
        "hasOnPageNav",
        "onPageNav",
        "previousTitle",
        "previous_id",
        "previous_title",
        "nextTitle",
        "next_id",
        "next_title",
        "separateOnPageNav",
        "description",
        "trim",
        "split",
        "version",
        "docsSideNavCollapsible",
        "source",
        "hide_title",
        "getRelativeURL",
        "match",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst classNames = require('classnames');\nconst path = require('path');\nconst React = require('react');\nconst url = require('url');\n\nconst Container = require('./Container.js');\nconst Doc = require('./Doc.js');\nconst DocsSidebar = require('./DocsSidebar.js');\nconst OnPageNav = require('./nav/OnPageNav.js');\nconst Site = require('./Site.js');\nconst translation = require('../server/translation.js');\nconst docs = require('../server/docs.js');\nconst {idx, getGitLastUpdatedTime, getGitLastUpdatedBy} = require('./utils.js');\n\n// component used to generate whole webpage for docs, including sidebar/header/footer\nclass DocsLayout extends React.Component {\n  getRelativeURL = (from, to) => {\n    const extension = this.props.config.cleanUrl ? '' : '.html';\n    const relativeHref = path\n      .relative(`${from}.html`, `${to}.html`)\n      .replace('\\\\', '/')\n      .replace(/^\\.\\.\\//, '')\n      .replace(/\\.html$/, extension);\n    return url.resolve(\n      `${this.props.config.baseUrl}${this.props.metadata.permalink}`,\n      relativeHref,\n    );\n  };\n\n  render() {\n    const metadata = this.props.metadata;\n    const content = this.props.children;\n    const i18n = translation[metadata.language];\n    const id = metadata.localized_id;\n    const defaultTitle = metadata.title;\n    let DocComponent = Doc;\n\n    if (this.props.Doc) {\n      DocComponent = this.props.Doc;\n    }\n    const filepath = docs.getFilePath(metadata);\n\n    const updateTime = this.props.config.enableUpdateTime\n      ? getGitLastUpdatedTime(filepath)\n      : null;\n    const updateAuthor = this.props.config.enableUpdateBy\n      ? getGitLastUpdatedBy(filepath)\n      : null;\n\n    const title =\n      idx(i18n, ['localized-strings', 'docs', id, 'title']) || defaultTitle;\n    const hasOnPageNav = this.props.config.onPageNav === 'separate';\n\n    const previousTitle =\n      idx(i18n, [\n        'localized-strings',\n        'docs',\n        metadata.previous_id,\n        'sidebar_label',\n      ]) ||\n      idx(i18n, ['localized-strings', 'docs', metadata.previous_id, 'title']) ||\n      idx(i18n, ['localized-strings', 'previous']) ||\n      metadata.previous_title ||\n      'Previous';\n    const nextTitle =\n      idx(i18n, [\n        'localized-strings',\n        'docs',\n        metadata.next_id,\n        'sidebar_label',\n      ]) ||\n      idx(i18n, ['localized-strings', 'docs', metadata.next_id, 'title']) ||\n      idx(i18n, ['localized-strings', 'next']) ||\n      metadata.next_title ||\n      'Next';\n\n    return (\n      <Site\n        config={this.props.config}\n        className={classNames('sideNavVisible', {\n          separateOnPageNav: hasOnPageNav,\n        })}\n        title={title}\n        description={metadata.description || content.trim().split('\\n')[0]}\n        language={metadata.language}\n        version={metadata.version}\n        metadata={metadata}>\n        <div className=\"docMainWrapper wrapper\">\n          <DocsSidebar\n            collapsible={this.props.config.docsSideNavCollapsible}\n            metadata={metadata}\n          />\n          <Container className=\"mainContainer docsContainer\">\n            <DocComponent\n              metadata={metadata}\n              content={content}\n              config={this.props.config}\n              source={metadata.source}\n              hideTitle={metadata.hide_title}\n              title={title}\n              version={metadata.version}\n              language={metadata.language}\n            />\n            {(updateTime || updateAuthor) && (\n              <div className=\"docLastUpdate\">\n                <em>\n                  Last updated\n                  {updateTime && ` on ${updateTime}`}\n                  {updateAuthor && ` by ${updateAuthor}`}\n                </em>\n              </div>\n            )}\n\n            <div className=\"docs-prevnext\">\n              {metadata.previous_id && (\n                <a\n                  className=\"docs-prev button\"\n                  href={this.getRelativeURL(\n                    metadata.localized_id,\n                    metadata.previous_id,\n                  )}>\n                  <span className=\"arrow-prev\">← </span>\n                  <span\n                    className={\n                      previousTitle.match(/[a-z][A-Z]/) &&\n                      'function-name-prevnext'\n                    }>\n                    {previousTitle}\n                  </span>\n                </a>\n              )}\n              {metadata.next_id && (\n                <a\n                  className=\"docs-next button\"\n                  href={this.getRelativeURL(\n                    metadata.localized_id,\n                    metadata.next_id,\n                  )}>\n                  <span\n                    className={\n                      nextTitle.match(/[a-z][A-Z]/) && 'function-name-prevnext'\n                    }>\n                    {nextTitle}\n                  </span>\n                  <span className=\"arrow-next\"> →</span>\n                </a>\n              )}\n            </div>\n          </Container>\n          {hasOnPageNav && (\n            <nav className=\"onPageNav\">\n              <OnPageNav rawContent={content} />\n            </nav>\n          )}\n        </div>\n      </Site>\n    );\n  }\n}\nmodule.exports = DocsLayout;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Container.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Container.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Container.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Container.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "Container.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar classNames = require('classnames');\n\nvar Container = /*#__PURE__*/function (_React$Component) {\n  _inherits(Container, _React$Component);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var containerClasses = classNames('container', this.props.className, {\n        darkBackground: this.props.background === 'dark',\n        highlightBackground: this.props.background === 'highlight',\n        lightBackground: this.props.background === 'light',\n        paddingAll: this.props.padding.indexOf('all') >= 0,\n        paddingBottom: this.props.padding.indexOf('bottom') >= 0,\n        paddingLeft: this.props.padding.indexOf('left') >= 0,\n        paddingRight: this.props.padding.indexOf('right') >= 0,\n        paddingTop: this.props.padding.indexOf('top') >= 0\n      });\n      var wrappedChildren;\n\n      if (this.props.wrapper) {\n        wrappedChildren = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper\"\n        }, this.props.children);\n      } else {\n        wrappedChildren = this.props.children;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: containerClasses,\n        id: this.props.id\n      }, wrappedChildren);\n    }\n  }]);\n\n  return Container;\n}(React.Component);\n\nContainer.defaultProps = {\n  background: null,\n  padding: [],\n  wrapper: true\n};\nmodule.exports = Container;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnRhaW5lci5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJjbGFzc05hbWVzIiwiQ29udGFpbmVyIiwiY29udGFpbmVyQ2xhc3NlcyIsInByb3BzIiwiY2xhc3NOYW1lIiwiZGFya0JhY2tncm91bmQiLCJiYWNrZ3JvdW5kIiwiaGlnaGxpZ2h0QmFja2dyb3VuZCIsImxpZ2h0QmFja2dyb3VuZCIsInBhZGRpbmdBbGwiLCJwYWRkaW5nIiwiaW5kZXhPZiIsInBhZGRpbmdCb3R0b20iLCJwYWRkaW5nTGVmdCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdUb3AiLCJ3cmFwcGVkQ2hpbGRyZW4iLCJ3cmFwcGVyIiwiY2hpbGRyZW4iLCJpZCIsIkNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsSUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsWUFBRCxDQUExQjs7SUFFTUUsUzs7Ozs7Ozs7Ozs7Ozs2QkFDSztBQUNQLFVBQU1DLGdCQUFnQixHQUFHRixVQUFVLENBQUMsV0FBRCxFQUFjLEtBQUtHLEtBQUwsQ0FBV0MsU0FBekIsRUFBb0M7QUFDckVDLFFBQUFBLGNBQWMsRUFBRSxLQUFLRixLQUFMLENBQVdHLFVBQVgsS0FBMEIsTUFEMkI7QUFFckVDLFFBQUFBLG1CQUFtQixFQUFFLEtBQUtKLEtBQUwsQ0FBV0csVUFBWCxLQUEwQixXQUZzQjtBQUdyRUUsUUFBQUEsZUFBZSxFQUFFLEtBQUtMLEtBQUwsQ0FBV0csVUFBWCxLQUEwQixPQUgwQjtBQUlyRUcsUUFBQUEsVUFBVSxFQUFFLEtBQUtOLEtBQUwsQ0FBV08sT0FBWCxDQUFtQkMsT0FBbkIsQ0FBMkIsS0FBM0IsS0FBcUMsQ0FKb0I7QUFLckVDLFFBQUFBLGFBQWEsRUFBRSxLQUFLVCxLQUFMLENBQVdPLE9BQVgsQ0FBbUJDLE9BQW5CLENBQTJCLFFBQTNCLEtBQXdDLENBTGM7QUFNckVFLFFBQUFBLFdBQVcsRUFBRSxLQUFLVixLQUFMLENBQVdPLE9BQVgsQ0FBbUJDLE9BQW5CLENBQTJCLE1BQTNCLEtBQXNDLENBTmtCO0FBT3JFRyxRQUFBQSxZQUFZLEVBQUUsS0FBS1gsS0FBTCxDQUFXTyxPQUFYLENBQW1CQyxPQUFuQixDQUEyQixPQUEzQixLQUF1QyxDQVBnQjtBQVFyRUksUUFBQUEsVUFBVSxFQUFFLEtBQUtaLEtBQUwsQ0FBV08sT0FBWCxDQUFtQkMsT0FBbkIsQ0FBMkIsS0FBM0IsS0FBcUM7QUFSb0IsT0FBcEMsQ0FBbkM7QUFVQSxVQUFJSyxlQUFKOztBQUVBLFVBQUksS0FBS2IsS0FBTCxDQUFXYyxPQUFmLEVBQXdCO0FBQ3RCRCxRQUFBQSxlQUFlLGdCQUFHO0FBQUssVUFBQSxTQUFTLEVBQUM7QUFBZixXQUEwQixLQUFLYixLQUFMLENBQVdlLFFBQXJDLENBQWxCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xGLFFBQUFBLGVBQWUsR0FBRyxLQUFLYixLQUFMLENBQVdlLFFBQTdCO0FBQ0Q7O0FBQ0QsMEJBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBRWhCLGdCQUFoQjtBQUFrQyxRQUFBLEVBQUUsRUFBRSxLQUFLQyxLQUFMLENBQVdnQjtBQUFqRCxTQUNHSCxlQURILENBREY7QUFLRDs7OztFQXhCcUJsQixLQUFLLENBQUNzQixTOztBQTJCOUJuQixTQUFTLENBQUNvQixZQUFWLEdBQXlCO0FBQ3ZCZixFQUFBQSxVQUFVLEVBQUUsSUFEVztBQUV2QkksRUFBQUEsT0FBTyxFQUFFLEVBRmM7QUFHdkJPLEVBQUFBLE9BQU8sRUFBRTtBQUhjLENBQXpCO0FBTUFLLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnRCLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbmNsYXNzIENvbnRhaW5lciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBjb250YWluZXJDbGFzc2VzID0gY2xhc3NOYW1lcygnY29udGFpbmVyJywgdGhpcy5wcm9wcy5jbGFzc05hbWUsIHtcbiAgICAgIGRhcmtCYWNrZ3JvdW5kOiB0aGlzLnByb3BzLmJhY2tncm91bmQgPT09ICdkYXJrJyxcbiAgICAgIGhpZ2hsaWdodEJhY2tncm91bmQ6IHRoaXMucHJvcHMuYmFja2dyb3VuZCA9PT0gJ2hpZ2hsaWdodCcsXG4gICAgICBsaWdodEJhY2tncm91bmQ6IHRoaXMucHJvcHMuYmFja2dyb3VuZCA9PT0gJ2xpZ2h0JyxcbiAgICAgIHBhZGRpbmdBbGw6IHRoaXMucHJvcHMucGFkZGluZy5pbmRleE9mKCdhbGwnKSA+PSAwLFxuICAgICAgcGFkZGluZ0JvdHRvbTogdGhpcy5wcm9wcy5wYWRkaW5nLmluZGV4T2YoJ2JvdHRvbScpID49IDAsXG4gICAgICBwYWRkaW5nTGVmdDogdGhpcy5wcm9wcy5wYWRkaW5nLmluZGV4T2YoJ2xlZnQnKSA+PSAwLFxuICAgICAgcGFkZGluZ1JpZ2h0OiB0aGlzLnByb3BzLnBhZGRpbmcuaW5kZXhPZigncmlnaHQnKSA+PSAwLFxuICAgICAgcGFkZGluZ1RvcDogdGhpcy5wcm9wcy5wYWRkaW5nLmluZGV4T2YoJ3RvcCcpID49IDAsXG4gICAgfSk7XG4gICAgbGV0IHdyYXBwZWRDaGlsZHJlbjtcblxuICAgIGlmICh0aGlzLnByb3BzLndyYXBwZXIpIHtcbiAgICAgIHdyYXBwZWRDaGlsZHJlbiA9IDxkaXYgY2xhc3NOYW1lPVwid3JhcHBlclwiPnt0aGlzLnByb3BzLmNoaWxkcmVufTwvZGl2PjtcbiAgICB9IGVsc2Uge1xuICAgICAgd3JhcHBlZENoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjb250YWluZXJDbGFzc2VzfSBpZD17dGhpcy5wcm9wcy5pZH0+XG4gICAgICAgIHt3cmFwcGVkQ2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbkNvbnRhaW5lci5kZWZhdWx0UHJvcHMgPSB7XG4gIGJhY2tncm91bmQ6IG51bGwsXG4gIHBhZGRpbmc6IFtdLFxuICB3cmFwcGVyOiB0cnVlLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb250YWluZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Container.js"
      ],
      "names": [
        "React",
        "require",
        "classNames",
        "Container",
        "containerClasses",
        "props",
        "className",
        "darkBackground",
        "background",
        "highlightBackground",
        "lightBackground",
        "paddingAll",
        "padding",
        "indexOf",
        "paddingBottom",
        "paddingLeft",
        "paddingRight",
        "paddingTop",
        "wrappedChildren",
        "wrapper",
        "children",
        "id",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;IAEME,S;;;;;;;;;;;;;6BACK;AACP,UAAMC,gBAAgB,GAAGF,UAAU,CAAC,WAAD,EAAc,KAAKG,KAAL,CAAWC,SAAzB,EAAoC;AACrEC,QAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,UAAX,KAA0B,MAD2B;AAErEC,QAAAA,mBAAmB,EAAE,KAAKJ,KAAL,CAAWG,UAAX,KAA0B,WAFsB;AAGrEE,QAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWG,UAAX,KAA0B,OAH0B;AAIrEG,QAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,KAA3B,KAAqC,CAJoB;AAKrEC,QAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B,KAAwC,CALc;AAMrEE,QAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,MAA3B,KAAsC,CANkB;AAOrEG,QAAAA,YAAY,EAAE,KAAKX,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,OAA3B,KAAuC,CAPgB;AAQrEI,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWO,OAAX,CAAmBC,OAAnB,CAA2B,KAA3B,KAAqC;AARoB,OAApC,CAAnC;AAUA,UAAIK,eAAJ;;AAEA,UAAI,KAAKb,KAAL,CAAWc,OAAf,EAAwB;AACtBD,QAAAA,eAAe,gBAAG;AAAK,UAAA,SAAS,EAAC;AAAf,WAA0B,KAAKb,KAAL,CAAWe,QAArC,CAAlB;AACD,OAFD,MAEO;AACLF,QAAAA,eAAe,GAAG,KAAKb,KAAL,CAAWe,QAA7B;AACD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAEhB,gBAAhB;AAAkC,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWgB;AAAjD,SACGH,eADH,CADF;AAKD;;;;EAxBqBlB,KAAK,CAACsB,S;;AA2B9BnB,SAAS,CAACoB,YAAV,GAAyB;AACvBf,EAAAA,UAAU,EAAE,IADW;AAEvBI,EAAAA,OAAO,EAAE,EAFc;AAGvBO,EAAAA,OAAO,EAAE;AAHc,CAAzB;AAMAK,MAAM,CAACC,OAAP,GAAiBtB,SAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst classNames = require('classnames');\n\nclass Container extends React.Component {\n  render() {\n    const containerClasses = classNames('container', this.props.className, {\n      darkBackground: this.props.background === 'dark',\n      highlightBackground: this.props.background === 'highlight',\n      lightBackground: this.props.background === 'light',\n      paddingAll: this.props.padding.indexOf('all') >= 0,\n      paddingBottom: this.props.padding.indexOf('bottom') >= 0,\n      paddingLeft: this.props.padding.indexOf('left') >= 0,\n      paddingRight: this.props.padding.indexOf('right') >= 0,\n      paddingTop: this.props.padding.indexOf('top') >= 0,\n    });\n    let wrappedChildren;\n\n    if (this.props.wrapper) {\n      wrappedChildren = <div className=\"wrapper\">{this.props.children}</div>;\n    } else {\n      wrappedChildren = this.props.children;\n    }\n    return (\n      <div className={containerClasses} id={this.props.id}>\n        {wrappedChildren}\n      </div>\n    );\n  }\n}\n\nContainer.defaultProps = {\n  background: null,\n  padding: [],\n  wrapper: true,\n};\n\nmodule.exports = Container;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Doc.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Doc.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Doc.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Doc.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "Doc.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar _require = require('react-dom/server'),\n    renderToStaticMarkup = _require.renderToStaticMarkup;\n\nvar MarkdownBlock = require('./MarkdownBlock.js');\n\nvar CodeTabsMarkdownBlock = require('./CodeTabsMarkdownBlock.js');\n\nvar translate = require('../server/translate.js').translate;\n\nvar editThisDoc = translate('Edit this Doc|recruitment message asking to edit the doc source');\nvar translateThisDoc = translate('Translate this Doc|recruitment message asking to translate the docs');\n\nvar splitTabsToTitleAndContent = function splitTabsToTitleAndContent(lines, indents) {\n  var first = false;\n  var inBlock = false;\n  var whitespace = false;\n  var tc = [];\n  var current = {\n    content: []\n  };\n  lines.forEach(function (line) {\n    if (indents) {\n      line = line.replace(new RegExp(\"^((\\\\t|\\\\s{4}){\".concat(indents, \"})\"), 'g'), '');\n    }\n\n    var pos = 0;\n    var end = line.length;\n\n    var isToken = function isToken(cline, cpos) {\n      for (var i = 0; i < (arguments.length <= 2 ? 0 : arguments.length - 2); i++) {\n        if (cline.charCodeAt(cpos) !== (i + 2 < 2 || arguments.length <= i + 2 ? undefined : arguments[i + 2])) {\n          return false;\n        }\n\n        cpos++;\n      }\n\n      return true;\n    };\n\n    while (pos + 1 < end) {\n      // Skip all the whitespace when we first start the scan.\n      for (var max = end; pos < max; pos++) {\n        if (line.charCodeAt(pos) !== 0x20 && line.charCodeAt(pos) !== 0x0a) {\n          break;\n        }\n\n        whitespace = true;\n      } // Check for the start of a comment: <!--\n      // If we're in a code block we skip it.\n\n\n      if (isToken(line, pos, 0x3c\n      /* < */\n      , 0x21\n      /* ! */\n      , 0x2d\n      /* - */\n      , 0x2d\n      /* - */\n      ) && !inBlock) {\n        if (current !== null && current.title !== undefined) {\n          tc.push({\n            title: current.title,\n            content: current.content.join('\\n')\n          });\n          current = {\n            content: []\n          };\n        }\n\n        first = true;\n        pos += 4;\n        var b0 = void 0;\n        var b1 = void 0;\n        var buf = []; // Add all characters to the title buffer until\n        // we reach the end marker: -->\n\n        for (var _max = end; pos < _max; pos++) {\n          var b = line.charCodeAt(pos);\n\n          if (b0 === 0x2d\n          /* - */\n          && b1 === 0x2d\n          /* - */\n          ) {\n              if (b !== 0x3e\n              /* > */\n              ) {\n                  throw new Error(\"Invalid comment sequence \\\"--\\\"\");\n                }\n\n              break;\n            }\n\n          buf.push(b);\n          b0 = b1;\n          b1 = b;\n        } // Clear the line out before we add it to content.\n        // This also means tabs can only be defined on a line by itself.\n\n\n        line = '\\n'; // Trim the last 2 characters: --\n\n        current.title = String.fromCharCode.apply(String, buf).substring(0, buf.length - 2).trim();\n      } // If the first thing in a code tab is not a title it's invalid.\n\n\n      if (!first) {\n        throw new Error(\"Invalid code tab markdown\");\n      } // Check for code block: ```\n      // If the line begins with whitespace we don't consider it a code block.\n\n\n      if (isToken(line, pos, 0x60\n      /* ` */\n      , 0x60\n      /* ` */\n      , 0x60\n      /* ` */\n      ) && !whitespace) {\n        pos += 3;\n        inBlock = !inBlock;\n      }\n\n      pos++;\n      whitespace = false;\n    }\n\n    current.content.push(line);\n  });\n\n  if (current !== null && current.title !== undefined) {\n    tc.push({\n      title: current.title,\n      content: current.content.join('\\n')\n    });\n  }\n\n  return tc;\n};\n\nvar cleanTheCodeTag = function cleanTheCodeTag(content, indents) {\n  var prepend = function prepend(line, indent) {\n    if (indent) {\n      return '    '.repeat(indent) + line;\n    }\n\n    return line;\n  };\n\n  var contents = content.split(/(<pre>)([\\s\\S]*?)(<\\/pre>)/gm);\n  var inCodeBlock = false;\n  var cleanContents = contents.map(function (c) {\n    if (c === '<pre>') {\n      inCodeBlock = true;\n      return c;\n    }\n\n    if (c === '</pre>') {\n      inCodeBlock = false;\n      return c;\n    }\n\n    if (inCodeBlock) {\n      return c.replace(/\\n/g, '<br />');\n    }\n\n    return prepend(c, indents);\n  });\n  return cleanContents.join('');\n}; // inner doc component for article itself\n\n\nvar Doc = /*#__PURE__*/function (_React$Component) {\n  _inherits(Doc, _React$Component);\n\n  var _super = _createSuper(Doc);\n\n  function Doc() {\n    _classCallCheck(this, Doc);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Doc, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var content = this.props.content;\n      var indents = 0;\n      return content.replace(/(\\t|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]{4})*?(<!\\x2D\\x2DDOCUSAURUS_CODE_TABS\\x2D\\x2D>\\n)([\\s\\S]*?)((\\n|\\t|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]{4})<!\\x2D\\x2DEND_DOCUSAURUS_CODE_TABS\\x2D\\x2D>)/gm, function (m) {\n        var contents = m.split('\\n').filter(function (c) {\n          if (!indents) {\n            indents = (c.match(/((\\t|\\s{4})+)<!--DOCUSAURUS_CODE_TABS-->/) || []).length;\n          }\n\n          if (c.match(/(\\t|\\s{4})+<!--DOCUSAURUS_CODE_TABS-->/)) {\n            return false;\n          }\n\n          if (c.match(/<!--END_DOCUSAURUS_CODE_TABS-->|<!--DOCUSAURUS_CODE_TABS-->/) || indents > 0 && c.match(/(\\t|\\s{4})+(<!--END_DOCUSAURUS_CODE_TABS-->|<!--DOCUSAURUS_CODE_TABS-->)/)) {\n            return false;\n          }\n\n          return true;\n        });\n\n        if (indents) {\n          indents -= 1;\n        }\n\n        var codeTabsMarkdownBlock = renderToStaticMarkup( /*#__PURE__*/React.createElement(CodeTabsMarkdownBlock, null, splitTabsToTitleAndContent(contents, indents)));\n        return cleanTheCodeTag(codeTabsMarkdownBlock, indents);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var docSource = this.props.source;\n\n      if (this.props.version && this.props.version !== 'next') {\n        // If versioning is enabled and the current version is not next, we need to trim out \"version-*\" from the source if we want a valid edit link.\n        docSource = docSource.match(new RegExp(/version-.*?\\/(.*\\.md)/, 'i'))[1];\n      }\n\n      var editUrl = this.props.metadata.custom_edit_url || this.props.config.editUrl && this.props.config.editUrl + docSource;\n      var editLink = editUrl && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"edit-page-link button\",\n        href: editUrl,\n        target: \"_blank\",\n        rel: \"noreferrer noopener\"\n      }, editThisDoc); // If internationalization is enabled, show Recruiting link instead of Edit Link.\n\n      if (this.props.language && this.props.language !== 'en' && this.props.config.translationRecruitingLink) {\n        editLink = /*#__PURE__*/React.createElement(\"a\", {\n          className: \"edit-page-link button\",\n          href: \"\".concat(this.props.config.translationRecruitingLink, \"/\").concat(this.props.language),\n          target: \"_blank\",\n          rel: \"noreferrer noopener\"\n        }, translateThisDoc);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\"\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        className: \"postHeader\"\n      }, editLink, !this.props.hideTitle && /*#__PURE__*/React.createElement(\"h1\", {\n        id: \"__docusaurus\",\n        className: \"postHeaderTitle\"\n      }, this.props.title)), /*#__PURE__*/React.createElement(\"article\", null, /*#__PURE__*/React.createElement(MarkdownBlock, null, this.renderContent())));\n    }\n  }]);\n\n  return Doc;\n}(React.Component);\n\nmodule.exports = Doc;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvYy5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJyZW5kZXJUb1N0YXRpY01hcmt1cCIsIk1hcmtkb3duQmxvY2siLCJDb2RlVGFic01hcmtkb3duQmxvY2siLCJ0cmFuc2xhdGUiLCJlZGl0VGhpc0RvYyIsInRyYW5zbGF0ZVRoaXNEb2MiLCJzcGxpdFRhYnNUb1RpdGxlQW5kQ29udGVudCIsImxpbmVzIiwiaW5kZW50cyIsImZpcnN0IiwiaW5CbG9jayIsIndoaXRlc3BhY2UiLCJ0YyIsImN1cnJlbnQiLCJjb250ZW50IiwiZm9yRWFjaCIsImxpbmUiLCJyZXBsYWNlIiwiUmVnRXhwIiwicG9zIiwiZW5kIiwibGVuZ3RoIiwiaXNUb2tlbiIsImNsaW5lIiwiY3BvcyIsImkiLCJjaGFyQ29kZUF0IiwibWF4IiwidGl0bGUiLCJ1bmRlZmluZWQiLCJwdXNoIiwiam9pbiIsImIwIiwiYjEiLCJidWYiLCJiIiwiRXJyb3IiLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJzdWJzdHJpbmciLCJ0cmltIiwiY2xlYW5UaGVDb2RlVGFnIiwicHJlcGVuZCIsImluZGVudCIsInJlcGVhdCIsImNvbnRlbnRzIiwic3BsaXQiLCJpbkNvZGVCbG9jayIsImNsZWFuQ29udGVudHMiLCJtYXAiLCJjIiwiRG9jIiwicHJvcHMiLCJtIiwiZmlsdGVyIiwibWF0Y2giLCJjb2RlVGFic01hcmtkb3duQmxvY2siLCJkb2NTb3VyY2UiLCJzb3VyY2UiLCJ2ZXJzaW9uIiwiZWRpdFVybCIsIm1ldGFkYXRhIiwiY3VzdG9tX2VkaXRfdXJsIiwiY29uZmlnIiwiZWRpdExpbmsiLCJsYW5ndWFnZSIsInRyYW5zbGF0aW9uUmVjcnVpdGluZ0xpbmsiLCJoaWRlVGl0bGUiLCJyZW5kZXJDb250ZW50IiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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LElBRHhCLElBRUEsS0FBS2IsS0FBTCxDQUFXVyxNQUFYLENBQWtCRyx5QkFIcEIsRUFJRTtBQUNBRixRQUFBQSxRQUFRLGdCQUNOO0FBQ0UsVUFBQSxTQUFTLEVBQUMsdUJBRFo7QUFFRSxVQUFBLElBQUksWUFBSyxLQUFLWixLQUFMLENBQVdXLE1BQVgsQ0FBa0JHLHlCQUF2QixjQUFvRCxLQUFLZCxLQUFMLENBQVdhLFFBQS9ELENBRk47QUFHRSxVQUFBLE1BQU0sRUFBQyxRQUhUO0FBSUUsVUFBQSxHQUFHLEVBQUM7QUFKTixXQUtHNUQsZ0JBTEgsQ0FERjtBQVNEOztBQUVELDBCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUM7QUFBZixzQkFDRTtBQUFRLFFBQUEsU0FBUyxFQUFDO0FBQWxCLFNBQ0cyRCxRQURILEVBRUcsQ0FBQyxLQUFLWixLQUFMLENBQVdlLFNBQVosaUJBQ0M7QUFBSSxRQUFBLEVBQUUsRUFBQyxjQUFQO0FBQXNCLFFBQUEsU0FBUyxFQUFDO0FBQWhDLFNBQ0csS0FBS2YsS0FBTCxDQUFXeEIsS0FEZCxDQUhKLENBREYsZUFTRSxrREFDRSxvQkFBQyxhQUFELFFBQWdCLEtBQUt3QyxhQUFMLEVBQWhCLENBREYsQ0FURixDQURGO0FBZUQ7Ozs7RUEvRmV0RSxLQUFLLENBQUN1RSxTOztBQWtHeEJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHtyZW5kZXJUb1N0YXRpY01hcmt1cH0gPSByZXF1aXJlKCdyZWFjdC1kb20vc2VydmVyJyk7XG5jb25zdCBNYXJrZG93bkJsb2NrID0gcmVxdWlyZSgnLi9NYXJrZG93bkJsb2NrLmpzJyk7XG5jb25zdCBDb2RlVGFic01hcmtkb3duQmxvY2sgPSByZXF1aXJlKCcuL0NvZGVUYWJzTWFya2Rvd25CbG9jay5qcycpO1xuXG5jb25zdCB0cmFuc2xhdGUgPSByZXF1aXJlKCcuLi9zZXJ2ZXIvdHJhbnNsYXRlLmpzJykudHJhbnNsYXRlO1xuXG5jb25zdCBlZGl0VGhpc0RvYyA9IHRyYW5zbGF0ZShcbiAgJ0VkaXQgdGhpcyBEb2N8cmVjcnVpdG1lbnQgbWVzc2FnZSBhc2tpbmcgdG8gZWRpdCB0aGUgZG9jIHNvdXJjZScsXG4pO1xuY29uc3QgdHJhbnNsYXRlVGhpc0RvYyA9IHRyYW5zbGF0ZShcbiAgJ1RyYW5zbGF0ZSB0aGlzIERvY3xyZWNydWl0bWVudCBtZXNzYWdlIGFza2luZyB0byB0cmFuc2xhdGUgdGhlIGRvY3MnLFxuKTtcblxuY29uc3Qgc3BsaXRUYWJzVG9UaXRsZUFuZENvbnRlbnQgPSAobGluZXMsIGluZGVudHMpID0+IHtcbiAgbGV0IGZpcnN0ID0gZmFsc2U7XG4gIGxldCBpbkJsb2NrID0gZmFsc2U7XG4gIGxldCB3aGl0ZXNwYWNlID0gZmFsc2U7XG4gIGNvbnN0IHRjID0gW107XG4gIGxldCBjdXJyZW50ID0ge1xuICAgIGNvbnRlbnQ6IFtdLFxuICB9O1xuICBsaW5lcy5mb3JFYWNoKChsaW5lKSA9PiB7XG4gICAgaWYgKGluZGVudHMpIHtcbiAgICAgIGxpbmUgPSBsaW5lLnJlcGxhY2UobmV3IFJlZ0V4cChgXigoXFxcXHR8XFxcXHN7NH0peyR7aW5kZW50c319KWAsICdnJyksICcnKTtcbiAgICB9XG4gICAgbGV0IHBvcyA9IDA7XG4gICAgY29uc3QgZW5kID0gbGluZS5sZW5ndGg7XG4gICAgY29uc3QgaXNUb2tlbiA9IChjbGluZSwgY3BvcywgLi4uY2hhcnMpID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hhcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGNsaW5lLmNoYXJDb2RlQXQoY3BvcykgIT09IGNoYXJzW2ldKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNwb3MrKztcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgd2hpbGUgKHBvcyArIDEgPCBlbmQpIHtcbiAgICAgIC8vIFNraXAgYWxsIHRoZSB3aGl0ZXNwYWNlIHdoZW4gd2UgZmlyc3Qgc3RhcnQgdGhlIHNjYW4uXG4gICAgICBmb3IgKGxldCBtYXggPSBlbmQ7IHBvcyA8IG1heDsgcG9zKyspIHtcbiAgICAgICAgaWYgKGxpbmUuY2hhckNvZGVBdChwb3MpICE9PSAweDIwICYmIGxpbmUuY2hhckNvZGVBdChwb3MpICE9PSAweDBhKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgd2hpdGVzcGFjZSA9IHRydWU7XG4gICAgICB9XG4gICAgICAvLyBDaGVjayBmb3IgdGhlIHN0YXJ0IG9mIGEgY29tbWVudDogPCEtLVxuICAgICAgLy8gSWYgd2UncmUgaW4gYSBjb2RlIGJsb2NrIHdlIHNraXAgaXQuXG4gICAgICBpZiAoXG4gICAgICAgIGlzVG9rZW4oXG4gICAgICAgICAgbGluZSxcbiAgICAgICAgICBwb3MsXG4gICAgICAgICAgMHgzYyAvKiA8ICovLFxuICAgICAgICAgIDB4MjEgLyogISAqLyxcbiAgICAgICAgICAweDJkIC8qIC0gKi8sXG4gICAgICAgICAgMHgyZCAvKiAtICovLFxuICAgICAgICApICYmXG4gICAgICAgICFpbkJsb2NrXG4gICAgICApIHtcbiAgICAgICAgaWYgKGN1cnJlbnQgIT09IG51bGwgJiYgY3VycmVudC50aXRsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdGMucHVzaCh7XG4gICAgICAgICAgICB0aXRsZTogY3VycmVudC50aXRsZSxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGN1cnJlbnQuY29udGVudC5qb2luKCdcXG4nKSxcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBjdXJyZW50ID0ge1xuICAgICAgICAgICAgY29udGVudDogW10sXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmaXJzdCA9IHRydWU7XG4gICAgICAgIHBvcyArPSA0O1xuICAgICAgICBsZXQgYjA7XG4gICAgICAgIGxldCBiMTtcbiAgICAgICAgY29uc3QgYnVmID0gW107XG4gICAgICAgIC8vIEFkZCBhbGwgY2hhcmFjdGVycyB0byB0aGUgdGl0bGUgYnVmZmVyIHVudGlsXG4gICAgICAgIC8vIHdlIHJlYWNoIHRoZSBlbmQgbWFya2VyOiAtLT5cbiAgICAgICAgZm9yIChsZXQgbWF4ID0gZW5kOyBwb3MgPCBtYXg7IHBvcysrKSB7XG4gICAgICAgICAgY29uc3QgYiA9IGxpbmUuY2hhckNvZGVBdChwb3MpO1xuICAgICAgICAgIGlmIChiMCA9PT0gMHgyZCAvKiAtICovICYmIGIxID09PSAweDJkIC8qIC0gKi8pIHtcbiAgICAgICAgICAgIGlmIChiICE9PSAweDNlIC8qID4gKi8pIHtcbiAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvbW1lbnQgc2VxdWVuY2UgXCItLVwiYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgYnVmLnB1c2goYik7XG4gICAgICAgICAgYjAgPSBiMTtcbiAgICAgICAgICBiMSA9IGI7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2xlYXIgdGhlIGxpbmUgb3V0IGJlZm9yZSB3ZSBhZGQgaXQgdG8gY29udGVudC5cbiAgICAgICAgLy8gVGhpcyBhbHNvIG1lYW5zIHRhYnMgY2FuIG9ubHkgYmUgZGVmaW5lZCBvbiBhIGxpbmUgYnkgaXRzZWxmLlxuICAgICAgICBsaW5lID0gJ1xcbic7XG4gICAgICAgIC8vIFRyaW0gdGhlIGxhc3QgMiBjaGFyYWN0ZXJzOiAtLVxuICAgICAgICBjdXJyZW50LnRpdGxlID0gU3RyaW5nLmZyb21DaGFyQ29kZSguLi5idWYpXG4gICAgICAgICAgLnN1YnN0cmluZygwLCBidWYubGVuZ3RoIC0gMilcbiAgICAgICAgICAudHJpbSgpO1xuICAgICAgfVxuICAgICAgLy8gSWYgdGhlIGZpcnN0IHRoaW5nIGluIGEgY29kZSB0YWIgaXMgbm90IGEgdGl0bGUgaXQncyBpbnZhbGlkLlxuICAgICAgaWYgKCFmaXJzdCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29kZSB0YWIgbWFya2Rvd25gKTtcbiAgICAgIH1cbiAgICAgIC8vIENoZWNrIGZvciBjb2RlIGJsb2NrOiBgYGBcbiAgICAgIC8vIElmIHRoZSBsaW5lIGJlZ2lucyB3aXRoIHdoaXRlc3BhY2Ugd2UgZG9uJ3QgY29uc2lkZXIgaXQgYSBjb2RlIGJsb2NrLlxuICAgICAgaWYgKFxuICAgICAgICBpc1Rva2VuKGxpbmUsIHBvcywgMHg2MCAvKiBgICovLCAweDYwIC8qIGAgKi8sIDB4NjAgLyogYCAqLykgJiZcbiAgICAgICAgIXdoaXRlc3BhY2VcbiAgICAgICkge1xuICAgICAgICBwb3MgKz0gMztcbiAgICAgICAgaW5CbG9jayA9ICFpbkJsb2NrO1xuICAgICAgfVxuICAgICAgcG9zKys7XG4gICAgICB3aGl0ZXNwYWNlID0gZmFsc2U7XG4gICAgfVxuICAgIGN1cnJlbnQuY29udGVudC5wdXNoKGxpbmUpO1xuICB9KTtcbiAgaWYgKGN1cnJlbnQgIT09IG51bGwgJiYgY3VycmVudC50aXRsZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdGMucHVzaCh7XG4gICAgICB0aXRsZTogY3VycmVudC50aXRsZSxcbiAgICAgIGNvbnRlbnQ6IGN1cnJlbnQuY29udGVudC5qb2luKCdcXG4nKSxcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gdGM7XG59O1xuXG5jb25zdCBjbGVhblRoZUNvZGVUYWcgPSAoY29udGVudCwgaW5kZW50cykgPT4ge1xuICBjb25zdCBwcmVwZW5kID0gKGxpbmUsIGluZGVudCkgPT4ge1xuICAgIGlmIChpbmRlbnQpIHtcbiAgICAgIHJldHVybiAnICAgICcucmVwZWF0KGluZGVudCkgKyBsaW5lO1xuICAgIH1cbiAgICByZXR1cm4gbGluZTtcbiAgfTtcbiAgY29uc3QgY29udGVudHMgPSBjb250ZW50LnNwbGl0KC8oPHByZT4pKC4qPykoPFxcL3ByZT4pL2dtcyk7XG4gIGxldCBpbkNvZGVCbG9jayA9IGZhbHNlO1xuICBjb25zdCBjbGVhbkNvbnRlbnRzID0gY29udGVudHMubWFwKChjKSA9PiB7XG4gICAgaWYgKGMgPT09ICc8cHJlPicpIHtcbiAgICAgIGluQ29kZUJsb2NrID0gdHJ1ZTtcbiAgICAgIHJldHVybiBjO1xuICAgIH1cbiAgICBpZiAoYyA9PT0gJzwvcHJlPicpIHtcbiAgICAgIGluQ29kZUJsb2NrID0gZmFsc2U7XG4gICAgICByZXR1cm4gYztcbiAgICB9XG4gICAgaWYgKGluQ29kZUJsb2NrKSB7XG4gICAgICByZXR1cm4gYy5yZXBsYWNlKC9cXG4vZywgJzxiciAvPicpO1xuICAgIH1cbiAgICByZXR1cm4gcHJlcGVuZChjLCBpbmRlbnRzKTtcbiAgfSk7XG4gIHJldHVybiBjbGVhbkNvbnRlbnRzLmpvaW4oJycpO1xufTtcblxuLy8gaW5uZXIgZG9jIGNvbXBvbmVudCBmb3IgYXJ0aWNsZSBpdHNlbGZcbmNsYXNzIERvYyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlckNvbnRlbnQoKSB7XG4gICAgY29uc3Qge2NvbnRlbnR9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgaW5kZW50cyA9IDA7XG4gICAgcmV0dXJuIGNvbnRlbnQucmVwbGFjZShcbiAgICAgIC8oXFx0fFxcc3s0fSkqPyg8IS0tRE9DVVNBVVJVU19DT0RFX1RBQlMtLT5cXG4pKC4qPykoKFxcbnxcXHR8XFxzezR9KTwhLS1FTkRfRE9DVVNBVVJVU19DT0RFX1RBQlMtLT4pL2dtcyxcbiAgICAgIChtKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbnRlbnRzID0gbS5zcGxpdCgnXFxuJykuZmlsdGVyKChjKSA9PiB7XG4gICAgICAgICAgaWYgKCFpbmRlbnRzKSB7XG4gICAgICAgICAgICBpbmRlbnRzID0gKFxuICAgICAgICAgICAgICBjLm1hdGNoKC8oKFxcdHxcXHN7NH0pKyk8IS0tRE9DVVNBVVJVU19DT0RFX1RBQlMtLT4vKSB8fCBbXVxuICAgICAgICAgICAgKS5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjLm1hdGNoKC8oXFx0fFxcc3s0fSkrPCEtLURPQ1VTQVVSVVNfQ09ERV9UQUJTLS0+LykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgYy5tYXRjaChcbiAgICAgICAgICAgICAgLzwhLS1FTkRfRE9DVVNBVVJVU19DT0RFX1RBQlMtLT58PCEtLURPQ1VTQVVSVVNfQ09ERV9UQUJTLS0+LyxcbiAgICAgICAgICAgICkgfHxcbiAgICAgICAgICAgIChpbmRlbnRzID4gMCAmJlxuICAgICAgICAgICAgICBjLm1hdGNoKFxuICAgICAgICAgICAgICAgIC8oXFx0fFxcc3s0fSkrKDwhLS1FTkRfRE9DVVNBVVJVU19DT0RFX1RBQlMtLT58PCEtLURPQ1VTQVVSVVNfQ09ERV9UQUJTLS0+KS8sXG4gICAgICAgICAgICAgICkpXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGluZGVudHMpIHtcbiAgICAgICAgICBpbmRlbnRzIC09IDE7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29kZVRhYnNNYXJrZG93bkJsb2NrID0gcmVuZGVyVG9TdGF0aWNNYXJrdXAoXG4gICAgICAgICAgPENvZGVUYWJzTWFya2Rvd25CbG9jaz5cbiAgICAgICAgICAgIHtzcGxpdFRhYnNUb1RpdGxlQW5kQ29udGVudChjb250ZW50cywgaW5kZW50cyl9XG4gICAgICAgICAgPC9Db2RlVGFic01hcmtkb3duQmxvY2s+LFxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gY2xlYW5UaGVDb2RlVGFnKGNvZGVUYWJzTWFya2Rvd25CbG9jaywgaW5kZW50cyk7XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IGRvY1NvdXJjZSA9IHRoaXMucHJvcHMuc291cmNlO1xuXG4gICAgaWYgKHRoaXMucHJvcHMudmVyc2lvbiAmJiB0aGlzLnByb3BzLnZlcnNpb24gIT09ICduZXh0Jykge1xuICAgICAgLy8gSWYgdmVyc2lvbmluZyBpcyBlbmFibGVkIGFuZCB0aGUgY3VycmVudCB2ZXJzaW9uIGlzIG5vdCBuZXh0LCB3ZSBuZWVkIHRvIHRyaW0gb3V0IFwidmVyc2lvbi0qXCIgZnJvbSB0aGUgc291cmNlIGlmIHdlIHdhbnQgYSB2YWxpZCBlZGl0IGxpbmsuXG4gICAgICBkb2NTb3VyY2UgPSBkb2NTb3VyY2UubWF0Y2gobmV3IFJlZ0V4cCgvdmVyc2lvbi0uKj9cXC8oLipcXC5tZCkvLCAnaScpKVsxXTtcbiAgICB9XG5cbiAgICBjb25zdCBlZGl0VXJsID1cbiAgICAgIHRoaXMucHJvcHMubWV0YWRhdGEuY3VzdG9tX2VkaXRfdXJsIHx8XG4gICAgICAodGhpcy5wcm9wcy5jb25maWcuZWRpdFVybCAmJiB0aGlzLnByb3BzLmNvbmZpZy5lZGl0VXJsICsgZG9jU291cmNlKTtcbiAgICBsZXQgZWRpdExpbmsgPSBlZGl0VXJsICYmIChcbiAgICAgIDxhXG4gICAgICAgIGNsYXNzTmFtZT1cImVkaXQtcGFnZS1saW5rIGJ1dHRvblwiXG4gICAgICAgIGhyZWY9e2VkaXRVcmx9XG4gICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgIHJlbD1cIm5vcmVmZXJyZXIgbm9vcGVuZXJcIj5cbiAgICAgICAge2VkaXRUaGlzRG9jfVxuICAgICAgPC9hPlxuICAgICk7XG5cbiAgICAvLyBJZiBpbnRlcm5hdGlvbmFsaXphdGlvbiBpcyBlbmFibGVkLCBzaG93IFJlY3J1aXRpbmcgbGluayBpbnN0ZWFkIG9mIEVkaXQgTGluay5cbiAgICBpZiAoXG4gICAgICB0aGlzLnByb3BzLmxhbmd1YWdlICYmXG4gICAgICB0aGlzLnByb3BzLmxhbmd1YWdlICE9PSAnZW4nICYmXG4gICAgICB0aGlzLnByb3BzLmNvbmZpZy50cmFuc2xhdGlvblJlY3J1aXRpbmdMaW5rXG4gICAgKSB7XG4gICAgICBlZGl0TGluayA9IChcbiAgICAgICAgPGFcbiAgICAgICAgICBjbGFzc05hbWU9XCJlZGl0LXBhZ2UtbGluayBidXR0b25cIlxuICAgICAgICAgIGhyZWY9e2Ake3RoaXMucHJvcHMuY29uZmlnLnRyYW5zbGF0aW9uUmVjcnVpdGluZ0xpbmt9LyR7dGhpcy5wcm9wcy5sYW5ndWFnZX1gfVxuICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgcmVsPVwibm9yZWZlcnJlciBub29wZW5lclwiPlxuICAgICAgICAgIHt0cmFuc2xhdGVUaGlzRG9jfVxuICAgICAgICA8L2E+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3RcIj5cbiAgICAgICAgPGhlYWRlciBjbGFzc05hbWU9XCJwb3N0SGVhZGVyXCI+XG4gICAgICAgICAge2VkaXRMaW5rfVxuICAgICAgICAgIHshdGhpcy5wcm9wcy5oaWRlVGl0bGUgJiYgKFxuICAgICAgICAgICAgPGgxIGlkPVwiX19kb2N1c2F1cnVzXCIgY2xhc3NOYW1lPVwicG9zdEhlYWRlclRpdGxlXCI+XG4gICAgICAgICAgICAgIHt0aGlzLnByb3BzLnRpdGxlfVxuICAgICAgICAgICAgPC9oMT5cbiAgICAgICAgICApfVxuICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgPGFydGljbGU+XG4gICAgICAgICAgPE1hcmtkb3duQmxvY2s+e3RoaXMucmVuZGVyQ29udGVudCgpfTwvTWFya2Rvd25CbG9jaz5cbiAgICAgICAgPC9hcnRpY2xlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IERvYztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Doc.js"
      ],
      "names": [
        "React",
        "require",
        "renderToStaticMarkup",
        "MarkdownBlock",
        "CodeTabsMarkdownBlock",
        "translate",
        "editThisDoc",
        "translateThisDoc",
        "splitTabsToTitleAndContent",
        "lines",
        "indents",
        "first",
        "inBlock",
        "whitespace",
        "tc",
        "current",
        "content",
        "forEach",
        "line",
        "replace",
        "RegExp",
        "pos",
        "end",
        "length",
        "isToken",
        "cline",
        "cpos",
        "i",
        "charCodeAt",
        "max",
        "title",
        "undefined",
        "push",
        "join",
        "b0",
        "b1",
        "buf",
        "b",
        "Error",
        "String",
        "fromCharCode",
        "substring",
        "trim",
        "cleanTheCodeTag",
        "prepend",
        "indent",
        "repeat",
        "contents",
        "split",
        "inCodeBlock",
        "cleanContents",
        "map",
        "c",
        "Doc",
        "props",
        "m",
        "filter",
        "match",
        "codeTabsMarkdownBlock",
        "docSource",
        "source",
        "version",
        "editUrl",
        "metadata",
        "custom_edit_url",
        "config",
        "editLink",
        "language",
        "translationRecruitingLink",
        "hideTitle",
        "renderContent",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst {renderToStaticMarkup} = require('react-dom/server');\nconst MarkdownBlock = require('./MarkdownBlock.js');\nconst CodeTabsMarkdownBlock = require('./CodeTabsMarkdownBlock.js');\n\nconst translate = require('../server/translate.js').translate;\n\nconst editThisDoc = translate(\n  'Edit this Doc|recruitment message asking to edit the doc source',\n);\nconst translateThisDoc = translate(\n  'Translate this Doc|recruitment message asking to translate the docs',\n);\n\nconst splitTabsToTitleAndContent = (lines, indents) => {\n  let first = false;\n  let inBlock = false;\n  let whitespace = false;\n  const tc = [];\n  let current = {\n    content: [],\n  };\n  lines.forEach((line) => {\n    if (indents) {\n      line = line.replace(new RegExp(`^((\\\\t|\\\\s{4}){${indents}})`, 'g'), '');\n    }\n    let pos = 0;\n    const end = line.length;\n    const isToken = (cline, cpos, ...chars) => {\n      for (let i = 0; i < chars.length; i++) {\n        if (cline.charCodeAt(cpos) !== chars[i]) {\n          return false;\n        }\n        cpos++;\n      }\n      return true;\n    };\n    while (pos + 1 < end) {\n      // Skip all the whitespace when we first start the scan.\n      for (let max = end; pos < max; pos++) {\n        if (line.charCodeAt(pos) !== 0x20 && line.charCodeAt(pos) !== 0x0a) {\n          break;\n        }\n        whitespace = true;\n      }\n      // Check for the start of a comment: <!--\n      // If we're in a code block we skip it.\n      if (\n        isToken(\n          line,\n          pos,\n          0x3c /* < */,\n          0x21 /* ! */,\n          0x2d /* - */,\n          0x2d /* - */,\n        ) &&\n        !inBlock\n      ) {\n        if (current !== null && current.title !== undefined) {\n          tc.push({\n            title: current.title,\n            content: current.content.join('\\n'),\n          });\n          current = {\n            content: [],\n          };\n        }\n        first = true;\n        pos += 4;\n        let b0;\n        let b1;\n        const buf = [];\n        // Add all characters to the title buffer until\n        // we reach the end marker: -->\n        for (let max = end; pos < max; pos++) {\n          const b = line.charCodeAt(pos);\n          if (b0 === 0x2d /* - */ && b1 === 0x2d /* - */) {\n            if (b !== 0x3e /* > */) {\n              throw new Error(`Invalid comment sequence \"--\"`);\n            }\n            break;\n          }\n          buf.push(b);\n          b0 = b1;\n          b1 = b;\n        }\n        // Clear the line out before we add it to content.\n        // This also means tabs can only be defined on a line by itself.\n        line = '\\n';\n        // Trim the last 2 characters: --\n        current.title = String.fromCharCode(...buf)\n          .substring(0, buf.length - 2)\n          .trim();\n      }\n      // If the first thing in a code tab is not a title it's invalid.\n      if (!first) {\n        throw new Error(`Invalid code tab markdown`);\n      }\n      // Check for code block: ```\n      // If the line begins with whitespace we don't consider it a code block.\n      if (\n        isToken(line, pos, 0x60 /* ` */, 0x60 /* ` */, 0x60 /* ` */) &&\n        !whitespace\n      ) {\n        pos += 3;\n        inBlock = !inBlock;\n      }\n      pos++;\n      whitespace = false;\n    }\n    current.content.push(line);\n  });\n  if (current !== null && current.title !== undefined) {\n    tc.push({\n      title: current.title,\n      content: current.content.join('\\n'),\n    });\n  }\n  return tc;\n};\n\nconst cleanTheCodeTag = (content, indents) => {\n  const prepend = (line, indent) => {\n    if (indent) {\n      return '    '.repeat(indent) + line;\n    }\n    return line;\n  };\n  const contents = content.split(/(<pre>)(.*?)(<\\/pre>)/gms);\n  let inCodeBlock = false;\n  const cleanContents = contents.map((c) => {\n    if (c === '<pre>') {\n      inCodeBlock = true;\n      return c;\n    }\n    if (c === '</pre>') {\n      inCodeBlock = false;\n      return c;\n    }\n    if (inCodeBlock) {\n      return c.replace(/\\n/g, '<br />');\n    }\n    return prepend(c, indents);\n  });\n  return cleanContents.join('');\n};\n\n// inner doc component for article itself\nclass Doc extends React.Component {\n  renderContent() {\n    const {content} = this.props;\n    let indents = 0;\n    return content.replace(\n      /(\\t|\\s{4})*?(<!--DOCUSAURUS_CODE_TABS-->\\n)(.*?)((\\n|\\t|\\s{4})<!--END_DOCUSAURUS_CODE_TABS-->)/gms,\n      (m) => {\n        const contents = m.split('\\n').filter((c) => {\n          if (!indents) {\n            indents = (\n              c.match(/((\\t|\\s{4})+)<!--DOCUSAURUS_CODE_TABS-->/) || []\n            ).length;\n          }\n          if (c.match(/(\\t|\\s{4})+<!--DOCUSAURUS_CODE_TABS-->/)) {\n            return false;\n          }\n          if (\n            c.match(\n              /<!--END_DOCUSAURUS_CODE_TABS-->|<!--DOCUSAURUS_CODE_TABS-->/,\n            ) ||\n            (indents > 0 &&\n              c.match(\n                /(\\t|\\s{4})+(<!--END_DOCUSAURUS_CODE_TABS-->|<!--DOCUSAURUS_CODE_TABS-->)/,\n              ))\n          ) {\n            return false;\n          }\n          return true;\n        });\n        if (indents) {\n          indents -= 1;\n        }\n        const codeTabsMarkdownBlock = renderToStaticMarkup(\n          <CodeTabsMarkdownBlock>\n            {splitTabsToTitleAndContent(contents, indents)}\n          </CodeTabsMarkdownBlock>,\n        );\n        return cleanTheCodeTag(codeTabsMarkdownBlock, indents);\n      },\n    );\n  }\n\n  render() {\n    let docSource = this.props.source;\n\n    if (this.props.version && this.props.version !== 'next') {\n      // If versioning is enabled and the current version is not next, we need to trim out \"version-*\" from the source if we want a valid edit link.\n      docSource = docSource.match(new RegExp(/version-.*?\\/(.*\\.md)/, 'i'))[1];\n    }\n\n    const editUrl =\n      this.props.metadata.custom_edit_url ||\n      (this.props.config.editUrl && this.props.config.editUrl + docSource);\n    let editLink = editUrl && (\n      <a\n        className=\"edit-page-link button\"\n        href={editUrl}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\">\n        {editThisDoc}\n      </a>\n    );\n\n    // If internationalization is enabled, show Recruiting link instead of Edit Link.\n    if (\n      this.props.language &&\n      this.props.language !== 'en' &&\n      this.props.config.translationRecruitingLink\n    ) {\n      editLink = (\n        <a\n          className=\"edit-page-link button\"\n          href={`${this.props.config.translationRecruitingLink}/${this.props.language}`}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\">\n          {translateThisDoc}\n        </a>\n      );\n    }\n\n    return (\n      <div className=\"post\">\n        <header className=\"postHeader\">\n          {editLink}\n          {!this.props.hideTitle && (\n            <h1 id=\"__docusaurus\" className=\"postHeaderTitle\">\n              {this.props.title}\n            </h1>\n          )}\n        </header>\n        <article>\n          <MarkdownBlock>{this.renderContent()}</MarkdownBlock>\n        </article>\n      </div>\n    );\n  }\n}\n\nmodule.exports = Doc;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MarkdownBlock.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MarkdownBlock.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MarkdownBlock.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/MarkdownBlock.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "MarkdownBlock.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar Remarkable = require('./Remarkable');\n/**\n * The MarkdownBlock component is used to parse markdown and render to HTML.\n */\n\n\nvar MarkdownBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarkdownBlock, _React$Component);\n\n  var _super = _createSuper(MarkdownBlock);\n\n  function MarkdownBlock() {\n    _classCallCheck(this, MarkdownBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MarkdownBlock, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Remarkable, {\n        source: this.props.children\n      });\n    }\n  }]);\n\n  return MarkdownBlock;\n}(React.Component);\n\nmodule.exports = MarkdownBlock;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1hcmtkb3duQmxvY2suanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwiUmVtYXJrYWJsZSIsIk1hcmtkb3duQmxvY2siLCJwcm9wcyIsImNoaWxkcmVuIiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTFCO0FBRUE7QUFDQTtBQUNBOzs7SUFDTUUsYTs7Ozs7Ozs7Ozs7Ozs2QkFDSztBQUNQLDBCQUFPLG9CQUFDLFVBQUQ7QUFBWSxRQUFBLE1BQU0sRUFBRSxLQUFLQyxLQUFMLENBQVdDO0FBQS9CLFFBQVA7QUFDRDs7OztFQUh5QkwsS0FBSyxDQUFDTSxTOztBQU1sQ0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCTCxhQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9ydW5uZXIvd29yay9iZmMvYmZjL3dlYnNpdGUvbm9kZV9tb2R1bGVzL2RvY3VzYXVydXMvbGliL2NvcmUvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBSZW1hcmthYmxlID0gcmVxdWlyZSgnLi9SZW1hcmthYmxlJyk7XG5cbi8qKlxuICogVGhlIE1hcmtkb3duQmxvY2sgY29tcG9uZW50IGlzIHVzZWQgdG8gcGFyc2UgbWFya2Rvd24gYW5kIHJlbmRlciB0byBIVE1MLlxuICovXG5jbGFzcyBNYXJrZG93bkJsb2NrIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiA8UmVtYXJrYWJsZSBzb3VyY2U9e3RoaXMucHJvcHMuY2hpbGRyZW59IC8+O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTWFya2Rvd25CbG9jaztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "MarkdownBlock.js"
      ],
      "names": [
        "React",
        "require",
        "Remarkable",
        "MarkdownBlock",
        "props",
        "children",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAA1B;AAEA;AACA;AACA;;;IACME,a;;;;;;;;;;;;;6BACK;AACP,0BAAO,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AAA/B,QAAP;AACD;;;;EAHyBL,KAAK,CAACM,S;;AAMlCC,MAAM,CAACC,OAAP,GAAiBL,aAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst Remarkable = require('./Remarkable');\n\n/**\n * The MarkdownBlock component is used to parse markdown and render to HTML.\n */\nclass MarkdownBlock extends React.Component {\n  render() {\n    return <Remarkable source={this.props.children} />;\n  }\n}\n\nmodule.exports = MarkdownBlock;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Remarkable.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Remarkable.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Remarkable.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/Remarkable.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "Remarkable.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar renderMarkdown = require('./renderMarkdown.js');\n\nvar Remarkable = /*#__PURE__*/function (_React$Component) {\n  _inherits(Remarkable, _React$Component);\n\n  var _super = _createSuper(Remarkable);\n\n  function Remarkable() {\n    _classCallCheck(this, Remarkable);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Remarkable, [{\n    key: \"content\",\n    value: function content() {\n      if (this.props.source) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: renderMarkdown(this.props.source)\n          }\n        });\n      }\n\n      return React.Children.map(this.props.children, function (child) {\n        if (typeof child === 'string') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: renderMarkdown(child)\n            }\n          });\n        }\n\n        return child;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Container = this.props.container;\n      return /*#__PURE__*/React.createElement(Container, null, this.content());\n    }\n  }]);\n\n  return Remarkable;\n}(React.Component);\n\nRemarkable.defaultProps = {\n  container: 'div'\n};\nmodule.exports = Remarkable;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlbWFya2FibGUuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJyZXF1aXJlIiwicmVuZGVyTWFya2Rvd24iLCJSZW1hcmthYmxlIiwicHJvcHMiLCJzb3VyY2UiLCJfX2h0bWwiLCJDaGlsZHJlbiIsIm1hcCIsImNoaWxkcmVuIiwiY2hpbGQiLCJDb250YWluZXIiLCJjb250YWluZXIiLCJjb250ZW50IiwiQ29tcG9uZW50IiwiZGVmYXVsdFByb3BzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxjQUFjLEdBQUdELE9BQU8sQ0FBQyxxQkFBRCxDQUE5Qjs7SUFFTUUsVTs7Ozs7Ozs7Ozs7Ozs4QkFDTTtBQUNSLFVBQUksS0FBS0MsS0FBTCxDQUFXQyxNQUFmLEVBQXVCO0FBQ3JCLDRCQUNFO0FBQ0UsVUFBQSx1QkFBdUIsRUFBRTtBQUN2QkMsWUFBQUEsTUFBTSxFQUFFSixjQUFjLENBQUMsS0FBS0UsS0FBTCxDQUFXQyxNQUFaO0FBREM7QUFEM0IsVUFERjtBQU9EOztBQUVELGFBQU9MLEtBQUssQ0FBQ08sUUFBTixDQUFlQyxHQUFmLENBQW1CLEtBQUtKLEtBQUwsQ0FBV0ssUUFBOUIsRUFBd0MsVUFBQ0MsS0FBRCxFQUFXO0FBQ3hELFlBQUksT0FBT0EsS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUM3Qiw4QkFDRTtBQUFNLFlBQUEsdUJBQXVCLEVBQUU7QUFBQ0osY0FBQUEsTUFBTSxFQUFFSixjQUFjLENBQUNRLEtBQUQ7QUFBdkI7QUFBL0IsWUFERjtBQUdEOztBQUVELGVBQU9BLEtBQVA7QUFDRCxPQVJNLENBQVA7QUFTRDs7OzZCQUVRO0FBQ1AsVUFBTUMsU0FBUyxHQUFHLEtBQUtQLEtBQUwsQ0FBV1EsU0FBN0I7QUFDQSwwQkFBTyxvQkFBQyxTQUFELFFBQVksS0FBS0MsT0FBTCxFQUFaLENBQVA7QUFDRDs7OztFQTFCc0JiLEtBQUssQ0FBQ2MsUzs7QUE2Qi9CWCxVQUFVLENBQUNZLFlBQVgsR0FBMEI7QUFDeEJILEVBQUFBLFNBQVMsRUFBRTtBQURhLENBQTFCO0FBSUFJLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsVUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgcmVuZGVyTWFya2Rvd24gPSByZXF1aXJlKCcuL3JlbmRlck1hcmtkb3duLmpzJyk7XG5cbmNsYXNzIFJlbWFya2FibGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb250ZW50KCkge1xuICAgIGlmICh0aGlzLnByb3BzLnNvdXJjZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPHNwYW5cbiAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17e1xuICAgICAgICAgICAgX19odG1sOiByZW5kZXJNYXJrZG93bih0aGlzLnByb3BzLnNvdXJjZSksXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFJlYWN0LkNoaWxkcmVuLm1hcCh0aGlzLnByb3BzLmNoaWxkcmVuLCAoY2hpbGQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgY2hpbGQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPHNwYW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3tfX2h0bWw6IHJlbmRlck1hcmtkb3duKGNoaWxkKX19IC8+XG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjaGlsZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBDb250YWluZXIgPSB0aGlzLnByb3BzLmNvbnRhaW5lcjtcbiAgICByZXR1cm4gPENvbnRhaW5lcj57dGhpcy5jb250ZW50KCl9PC9Db250YWluZXI+O1xuICB9XG59XG5cblJlbWFya2FibGUuZGVmYXVsdFByb3BzID0ge1xuICBjb250YWluZXI6ICdkaXYnLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZW1hcmthYmxlO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Remarkable.js"
      ],
      "names": [
        "React",
        "require",
        "renderMarkdown",
        "Remarkable",
        "props",
        "source",
        "__html",
        "Children",
        "map",
        "children",
        "child",
        "Container",
        "container",
        "content",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAA9B;;IAEME,U;;;;;;;;;;;;;8BACM;AACR,UAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,4BACE;AACE,UAAA,uBAAuB,EAAE;AACvBC,YAAAA,MAAM,EAAEJ,cAAc,CAAC,KAAKE,KAAL,CAAWC,MAAZ;AADC;AAD3B,UADF;AAOD;;AAED,aAAOL,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmB,KAAKJ,KAAL,CAAWK,QAA9B,EAAwC,UAACC,KAAD,EAAW;AACxD,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,8BACE;AAAM,YAAA,uBAAuB,EAAE;AAACJ,cAAAA,MAAM,EAAEJ,cAAc,CAACQ,KAAD;AAAvB;AAA/B,YADF;AAGD;;AAED,eAAOA,KAAP;AACD,OARM,CAAP;AASD;;;6BAEQ;AACP,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWQ,SAA7B;AACA,0BAAO,oBAAC,SAAD,QAAY,KAAKC,OAAL,EAAZ,CAAP;AACD;;;;EA1BsBb,KAAK,CAACc,S;;AA6B/BX,UAAU,CAACY,YAAX,GAA0B;AACxBH,EAAAA,SAAS,EAAE;AADa,CAA1B;AAIAI,MAAM,CAACC,OAAP,GAAiBd,UAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst renderMarkdown = require('./renderMarkdown.js');\n\nclass Remarkable extends React.Component {\n  content() {\n    if (this.props.source) {\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html: renderMarkdown(this.props.source),\n          }}\n        />\n      );\n    }\n\n    return React.Children.map(this.props.children, (child) => {\n      if (typeof child === 'string') {\n        return (\n          <span dangerouslySetInnerHTML={{__html: renderMarkdown(child)}} />\n        );\n      }\n\n      return child;\n    });\n  }\n\n  render() {\n    const Container = this.props.container;\n    return <Container>{this.content()}</Container>;\n  }\n}\n\nRemarkable.defaultProps = {\n  container: 'div',\n};\n\nmodule.exports = Remarkable;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CodeTabsMarkdownBlock.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CodeTabsMarkdownBlock.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CodeTabsMarkdownBlock.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CodeTabsMarkdownBlock.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "CodeTabsMarkdownBlock.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar React = require('react');\n\nvar Remarkable = require('./Remarkable');\n/**\n * The MarkdownBlock component is used to parse markdown and render to HTML.\n */\n\n\nvar MarkdownBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarkdownBlock, _React$Component);\n\n  var _super = _createSuper(MarkdownBlock);\n\n  function MarkdownBlock() {\n    _classCallCheck(this, MarkdownBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MarkdownBlock, [{\n    key: \"render\",\n    value: function render() {\n      var groupId = _lodash[\"default\"].uniqueId();\n\n      var tabs = this.props.children.map(function (_ref) {\n        var title = _ref.title,\n            content = _ref.content;\n        return {\n          id: _lodash[\"default\"].uniqueId(),\n          groupId: groupId,\n          label: title,\n          lang: title,\n          panelContent: /*#__PURE__*/React.createElement(Remarkable, {\n            source: content\n          })\n        };\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tabs\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"nav-tabs\"\n      }, tabs.map(function (t, i) {\n        var tabId = \"tab-group-\".concat(groupId, \"-tab-\").concat(t.id);\n        var contentId = \"tab-group-\".concat(groupId, \"-content-\").concat(t.id);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: tabId,\n          key: tabId,\n          className: \"nav-link\".concat(i === 0 ? ' active' : ''),\n          \"data-group\": \"group_\".concat(t.groupId),\n          \"data-tab\": contentId\n        }, t.label);\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tab-content\"\n      }, tabs.map(function (t, i) {\n        var id = \"tab-group-\".concat(groupId, \"-content-\").concat(t.id);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          id: id,\n          key: id,\n          className: \"tab-pane\".concat(i === 0 ? ' active' : ''),\n          \"data-group\": \"group_\".concat(t.groupId),\n          tabIndex: \"-1\"\n        }, t.panelContent);\n      })));\n    }\n  }]);\n\n  return MarkdownBlock;\n}(React.Component);\n\nmodule.exports = MarkdownBlock;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvZGVUYWJzTWFya2Rvd25CbG9jay5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJSZW1hcmthYmxlIiwiTWFya2Rvd25CbG9jayIsImdyb3VwSWQiLCJfIiwidW5pcXVlSWQiLCJ0YWJzIiwicHJvcHMiLCJjaGlsZHJlbiIsIm1hcCIsInRpdGxlIiwiY29udGVudCIsImlkIiwibGFiZWwiLCJsYW5nIiwicGFuZWxDb250ZW50IiwidCIsImkiLCJ0YWJJZCIsImNvbnRlbnRJZCIsIkNvbXBvbmVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBT0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxjQUFELENBQTFCO0FBRUE7QUFDQTtBQUNBOzs7SUFDTUUsYTs7Ozs7Ozs7Ozs7Ozs2QkFDSztBQUNQLFVBQU1DLE9BQU8sR0FBR0MsbUJBQUVDLFFBQUYsRUFBaEI7O0FBRUEsVUFBTUMsSUFBSSxHQUFHLEtBQUtDLEtBQUwsQ0FBV0MsUUFBWCxDQUFvQkMsR0FBcEIsQ0FBd0I7QUFBQSxZQUFFQyxLQUFGLFFBQUVBLEtBQUY7QUFBQSxZQUFTQyxPQUFULFFBQVNBLE9BQVQ7QUFBQSxlQUF1QjtBQUMxREMsVUFBQUEsRUFBRSxFQUFFUixtQkFBRUMsUUFBRixFQURzRDtBQUUxREYsVUFBQUEsT0FBTyxFQUFQQSxPQUYwRDtBQUcxRFUsVUFBQUEsS0FBSyxFQUFFSCxLQUhtRDtBQUkxREksVUFBQUEsSUFBSSxFQUFFSixLQUpvRDtBQUsxREssVUFBQUEsWUFBWSxlQUFFLG9CQUFDLFVBQUQ7QUFBWSxZQUFBLE1BQU0sRUFBRUo7QUFBcEI7QUFMNEMsU0FBdkI7QUFBQSxPQUF4QixDQUFiO0FBUUEsMEJBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLHNCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUM7QUFBZixTQUNHTCxJQUFJLENBQUNHLEdBQUwsQ0FBUyxVQUFDTyxDQUFELEVBQUlDLENBQUosRUFBVTtBQUNsQixZQUFNQyxLQUFLLHVCQUFnQmYsT0FBaEIsa0JBQStCYSxDQUFDLENBQUNKLEVBQWpDLENBQVg7QUFDQSxZQUFNTyxTQUFTLHVCQUFnQmhCLE9BQWhCLHNCQUFtQ2EsQ0FBQyxDQUFDSixFQUFyQyxDQUFmO0FBQ0EsNEJBQ0U7QUFDRSxVQUFBLEVBQUUsRUFBRU0sS0FETjtBQUVFLFVBQUEsR0FBRyxFQUFFQSxLQUZQO0FBR0UsVUFBQSxTQUFTLG9CQUFhRCxDQUFDLEtBQUssQ0FBTixHQUFVLFNBQVYsR0FBc0IsRUFBbkMsQ0FIWDtBQUlFLHdDQUFxQkQsQ0FBQyxDQUFDYixPQUF2QixDQUpGO0FBS0Usc0JBQVVnQjtBQUxaLFdBTUdILENBQUMsQ0FBQ0gsS0FOTCxDQURGO0FBVUQsT0FiQSxDQURILENBREYsZUFpQkU7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLFNBQ0dQLElBQUksQ0FBQ0csR0FBTCxDQUFTLFVBQUNPLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQ2xCLFlBQU1MLEVBQUUsdUJBQWdCVCxPQUFoQixzQkFBbUNhLENBQUMsQ0FBQ0osRUFBckMsQ0FBUjtBQUNBLDRCQUNFO0FBQ0UsVUFBQSxFQUFFLEVBQUVBLEVBRE47QUFFRSxVQUFBLEdBQUcsRUFBRUEsRUFGUDtBQUdFLFVBQUEsU0FBUyxvQkFBYUssQ0FBQyxLQUFLLENBQU4sR0FBVSxTQUFWLEdBQXNCLEVBQW5DLENBSFg7QUFJRSx3Q0FBcUJELENBQUMsQ0FBQ2IsT0FBdkIsQ0FKRjtBQUtFLFVBQUEsUUFBUSxFQUFDO0FBTFgsV0FNR2EsQ0FBQyxDQUFDRCxZQU5MLENBREY7QUFVRCxPQVpBLENBREgsQ0FqQkYsQ0FERjtBQW1DRDs7OztFQS9DeUJoQixLQUFLLENBQUNxQixTOztBQWtEbENDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLGFBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFJlbWFya2FibGUgPSByZXF1aXJlKCcuL1JlbWFya2FibGUnKTtcblxuLyoqXG4gKiBUaGUgTWFya2Rvd25CbG9jayBjb21wb25lbnQgaXMgdXNlZCB0byBwYXJzZSBtYXJrZG93biBhbmQgcmVuZGVyIHRvIEhUTUwuXG4gKi9cbmNsYXNzIE1hcmtkb3duQmxvY2sgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3QgZ3JvdXBJZCA9IF8udW5pcXVlSWQoKTtcblxuICAgIGNvbnN0IHRhYnMgPSB0aGlzLnByb3BzLmNoaWxkcmVuLm1hcCgoe3RpdGxlLCBjb250ZW50fSkgPT4gKHtcbiAgICAgIGlkOiBfLnVuaXF1ZUlkKCksXG4gICAgICBncm91cElkLFxuICAgICAgbGFiZWw6IHRpdGxlLFxuICAgICAgbGFuZzogdGl0bGUsXG4gICAgICBwYW5lbENvbnRlbnQ6IDxSZW1hcmthYmxlIHNvdXJjZT17Y29udGVudH0gLz4sXG4gICAgfSkpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFic1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hdi10YWJzXCI+XG4gICAgICAgICAge3RhYnMubWFwKCh0LCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0YWJJZCA9IGB0YWItZ3JvdXAtJHtncm91cElkfS10YWItJHt0LmlkfWA7XG4gICAgICAgICAgICBjb25zdCBjb250ZW50SWQgPSBgdGFiLWdyb3VwLSR7Z3JvdXBJZH0tY29udGVudC0ke3QuaWR9YDtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBpZD17dGFiSWR9XG4gICAgICAgICAgICAgICAga2V5PXt0YWJJZH1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BuYXYtbGluayR7aSA9PT0gMCA/ICcgYWN0aXZlJyA6ICcnfWB9XG4gICAgICAgICAgICAgICAgZGF0YS1ncm91cD17YGdyb3VwXyR7dC5ncm91cElkfWB9XG4gICAgICAgICAgICAgICAgZGF0YS10YWI9e2NvbnRlbnRJZH0+XG4gICAgICAgICAgICAgICAge3QubGFiZWx9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFiLWNvbnRlbnRcIj5cbiAgICAgICAgICB7dGFicy5tYXAoKHQsIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gYHRhYi1ncm91cC0ke2dyb3VwSWR9LWNvbnRlbnQtJHt0LmlkfWA7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgaWQ9e2lkfVxuICAgICAgICAgICAgICAgIGtleT17aWR9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdGFiLXBhbmUke2kgPT09IDAgPyAnIGFjdGl2ZScgOiAnJ31gfVxuICAgICAgICAgICAgICAgIGRhdGEtZ3JvdXA9e2Bncm91cF8ke3QuZ3JvdXBJZH1gfVxuICAgICAgICAgICAgICAgIHRhYkluZGV4PVwiLTFcIj5cbiAgICAgICAgICAgICAgICB7dC5wYW5lbENvbnRlbnR9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gTWFya2Rvd25CbG9jaztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "CodeTabsMarkdownBlock.js"
      ],
      "names": [
        "React",
        "require",
        "Remarkable",
        "MarkdownBlock",
        "groupId",
        "_",
        "uniqueId",
        "tabs",
        "props",
        "children",
        "map",
        "title",
        "content",
        "id",
        "label",
        "lang",
        "panelContent",
        "t",
        "i",
        "tabId",
        "contentId",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAA1B;AAEA;AACA;AACA;;;IACME,a;;;;;;;;;;;;;6BACK;AACP,UAAMC,OAAO,GAAGC,mBAAEC,QAAF,EAAhB;;AAEA,UAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwB;AAAA,YAAEC,KAAF,QAAEA,KAAF;AAAA,YAASC,OAAT,QAASA,OAAT;AAAA,eAAuB;AAC1DC,UAAAA,EAAE,EAAER,mBAAEC,QAAF,EADsD;AAE1DF,UAAAA,OAAO,EAAPA,OAF0D;AAG1DU,UAAAA,KAAK,EAAEH,KAHmD;AAI1DI,UAAAA,IAAI,EAAEJ,KAJoD;AAK1DK,UAAAA,YAAY,eAAE,oBAAC,UAAD;AAAY,YAAA,MAAM,EAAEJ;AAApB;AAL4C,SAAvB;AAAA,OAAxB,CAAb;AAQA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGL,IAAI,CAACG,GAAL,CAAS,UAACO,CAAD,EAAIC,CAAJ,EAAU;AAClB,YAAMC,KAAK,uBAAgBf,OAAhB,kBAA+Ba,CAAC,CAACJ,EAAjC,CAAX;AACA,YAAMO,SAAS,uBAAgBhB,OAAhB,sBAAmCa,CAAC,CAACJ,EAArC,CAAf;AACA,4BACE;AACE,UAAA,EAAE,EAAEM,KADN;AAEE,UAAA,GAAG,EAAEA,KAFP;AAGE,UAAA,SAAS,oBAAaD,CAAC,KAAK,CAAN,GAAU,SAAV,GAAsB,EAAnC,CAHX;AAIE,wCAAqBD,CAAC,CAACb,OAAvB,CAJF;AAKE,sBAAUgB;AALZ,WAMGH,CAAC,CAACH,KANL,CADF;AAUD,OAbA,CADH,CADF,eAiBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGP,IAAI,CAACG,GAAL,CAAS,UAACO,CAAD,EAAIC,CAAJ,EAAU;AAClB,YAAML,EAAE,uBAAgBT,OAAhB,sBAAmCa,CAAC,CAACJ,EAArC,CAAR;AACA,4BACE;AACE,UAAA,EAAE,EAAEA,EADN;AAEE,UAAA,GAAG,EAAEA,EAFP;AAGE,UAAA,SAAS,oBAAaK,CAAC,KAAK,CAAN,GAAU,SAAV,GAAsB,EAAnC,CAHX;AAIE,wCAAqBD,CAAC,CAACb,OAAvB,CAJF;AAKE,UAAA,QAAQ,EAAC;AALX,WAMGa,CAAC,CAACD,YANL,CADF;AAUD,OAZA,CADH,CAjBF,CADF;AAmCD;;;;EA/CyBhB,KAAK,CAACqB,S;;AAkDlCC,MAAM,CAACC,OAAP,GAAiBpB,aAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport _ from 'lodash';\n\nconst React = require('react');\nconst Remarkable = require('./Remarkable');\n\n/**\n * The MarkdownBlock component is used to parse markdown and render to HTML.\n */\nclass MarkdownBlock extends React.Component {\n  render() {\n    const groupId = _.uniqueId();\n\n    const tabs = this.props.children.map(({title, content}) => ({\n      id: _.uniqueId(),\n      groupId,\n      label: title,\n      lang: title,\n      panelContent: <Remarkable source={content} />,\n    }));\n\n    return (\n      <div className=\"tabs\">\n        <div className=\"nav-tabs\">\n          {tabs.map((t, i) => {\n            const tabId = `tab-group-${groupId}-tab-${t.id}`;\n            const contentId = `tab-group-${groupId}-content-${t.id}`;\n            return (\n              <div\n                id={tabId}\n                key={tabId}\n                className={`nav-link${i === 0 ? ' active' : ''}`}\n                data-group={`group_${t.groupId}`}\n                data-tab={contentId}>\n                {t.label}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"tab-content\">\n          {tabs.map((t, i) => {\n            const id = `tab-group-${groupId}-content-${t.id}`;\n            return (\n              <div\n                id={id}\n                key={id}\n                className={`tab-pane${i === 0 ? ' active' : ''}`}\n                data-group={`group_${t.groupId}`}\n                tabIndex=\"-1\">\n                {t.panelContent}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = MarkdownBlock;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsSidebar.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsSidebar.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsSidebar.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/DocsSidebar.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "DocsSidebar.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar fs = require('fs');\n\nvar SideNav = require('./nav/SideNav.js');\n\nvar Metadata = require('./metadata.js');\n\nvar readCategories = require('../server/readCategories.js');\n\nvar languages;\nvar CWD = process.cwd();\n\nif (fs.existsSync(\"\".concat(CWD, \"/languages.js\"))) {\n  languages = require(\"\".concat(CWD, \"/languages.js\"));\n} else {\n  languages = [{\n    enabled: true,\n    name: 'English',\n    tag: 'en'\n  }];\n}\n\nvar DocsSidebar = /*#__PURE__*/function (_React$Component) {\n  _inherits(DocsSidebar, _React$Component);\n\n  var _super = _createSuper(DocsSidebar);\n\n  function DocsSidebar() {\n    _classCallCheck(this, DocsSidebar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DocsSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$metadata = this.props.metadata,\n          category = _this$props$metadata.category,\n          sidebar = _this$props$metadata.sidebar;\n      var docsCategories = readCategories(sidebar, Metadata, languages);\n\n      if (!category) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docsNavContainer\",\n        id: \"docsNav\"\n      }, /*#__PURE__*/React.createElement(SideNav, {\n        collapsible: this.props.collapsible,\n        language: this.props.metadata.language,\n        root: this.props.root,\n        title: this.props.title,\n        contents: docsCategories[this.props.metadata.language],\n        current: this.props.metadata\n      }));\n    }\n  }]);\n\n  return DocsSidebar;\n}(React.Component);\n\nmodule.exports = DocsSidebar;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRvY3NTaWRlYmFyLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsImZzIiwiU2lkZU5hdiIsIk1ldGFkYXRhIiwicmVhZENhdGVnb3JpZXMiLCJsYW5ndWFnZXMiLCJDV0QiLCJwcm9jZXNzIiwiY3dkIiwiZXhpc3RzU3luYyIsImVuYWJsZWQiLCJuYW1lIiwidGFnIiwiRG9jc1NpZGViYXIiLCJwcm9wcyIsIm1ldGFkYXRhIiwiY2F0ZWdvcnkiLCJzaWRlYmFyIiwiZG9jc0NhdGVnb3JpZXMiLCJjb2xsYXBzaWJsZSIsImxhbmd1YWdlIiwicm9vdCIsInRpdGxlIiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxFQUFFLEdBQUdELE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1FLE9BQU8sR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUNBLElBQU1HLFFBQVEsR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBeEI7O0FBRUEsSUFBTUksY0FBYyxHQUFHSixPQUFPLENBQUMsNkJBQUQsQ0FBOUI7O0FBRUEsSUFBSUssU0FBSjtBQUVBLElBQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLEVBQVo7O0FBQ0EsSUFBSVAsRUFBRSxDQUFDUSxVQUFILFdBQWlCSCxHQUFqQixtQkFBSixFQUEwQztBQUN4Q0QsRUFBQUEsU0FBUyxHQUFHTCxPQUFPLFdBQUlNLEdBQUosbUJBQW5CO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xELEVBQUFBLFNBQVMsR0FBRyxDQUNWO0FBQ0VLLElBQUFBLE9BQU8sRUFBRSxJQURYO0FBRUVDLElBQUFBLElBQUksRUFBRSxTQUZSO0FBR0VDLElBQUFBLEdBQUcsRUFBRTtBQUhQLEdBRFUsQ0FBWjtBQU9EOztJQUVLQyxXOzs7Ozs7Ozs7Ozs7OzZCQUNLO0FBQUEsaUNBQ3FCLEtBQUtDLEtBQUwsQ0FBV0MsUUFEaEM7QUFBQSxVQUNBQyxRQURBLHdCQUNBQSxRQURBO0FBQUEsVUFDVUMsT0FEVix3QkFDVUEsT0FEVjtBQUVQLFVBQU1DLGNBQWMsR0FBR2QsY0FBYyxDQUFDYSxPQUFELEVBQVVkLFFBQVYsRUFBb0JFLFNBQXBCLENBQXJDOztBQUVBLFVBQUksQ0FBQ1csUUFBTCxFQUFlO0FBQ2IsZUFBTyxJQUFQO0FBQ0Q7O0FBRUQsMEJBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBQyxrQkFBZjtBQUFrQyxRQUFBLEVBQUUsRUFBQztBQUFyQyxzQkFDRSxvQkFBQyxPQUFEO0FBQ0UsUUFBQSxXQUFXLEVBQUUsS0FBS0YsS0FBTCxDQUFXSyxXQUQxQjtBQUVFLFFBQUEsUUFBUSxFQUFFLEtBQUtMLEtBQUwsQ0FBV0MsUUFBWCxDQUFvQkssUUFGaEM7QUFHRSxRQUFBLElBQUksRUFBRSxLQUFLTixLQUFMLENBQVdPLElBSG5CO0FBSUUsUUFBQSxLQUFLLEVBQUUsS0FBS1AsS0FBTCxDQUFXUSxLQUpwQjtBQUtFLFFBQUEsUUFBUSxFQUFFSixjQUFjLENBQUMsS0FBS0osS0FBTCxDQUFXQyxRQUFYLENBQW9CSyxRQUFyQixDQUwxQjtBQU1FLFFBQUEsT0FBTyxFQUFFLEtBQUtOLEtBQUwsQ0FBV0M7QUFOdEIsUUFERixDQURGO0FBWUQ7Ozs7RUFyQnVCaEIsS0FBSyxDQUFDd0IsUzs7QUF3QmhDQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJaLFdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IFNpZGVOYXYgPSByZXF1aXJlKCcuL25hdi9TaWRlTmF2LmpzJyk7XG5jb25zdCBNZXRhZGF0YSA9IHJlcXVpcmUoJy4vbWV0YWRhdGEuanMnKTtcblxuY29uc3QgcmVhZENhdGVnb3JpZXMgPSByZXF1aXJlKCcuLi9zZXJ2ZXIvcmVhZENhdGVnb3JpZXMuanMnKTtcblxubGV0IGxhbmd1YWdlcztcblxuY29uc3QgQ1dEID0gcHJvY2Vzcy5jd2QoKTtcbmlmIChmcy5leGlzdHNTeW5jKGAke0NXRH0vbGFuZ3VhZ2VzLmpzYCkpIHtcbiAgbGFuZ3VhZ2VzID0gcmVxdWlyZShgJHtDV0R9L2xhbmd1YWdlcy5qc2ApO1xufSBlbHNlIHtcbiAgbGFuZ3VhZ2VzID0gW1xuICAgIHtcbiAgICAgIGVuYWJsZWQ6IHRydWUsXG4gICAgICBuYW1lOiAnRW5nbGlzaCcsXG4gICAgICB0YWc6ICdlbicsXG4gICAgfSxcbiAgXTtcbn1cblxuY2xhc3MgRG9jc1NpZGViYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2NhdGVnb3J5LCBzaWRlYmFyfSA9IHRoaXMucHJvcHMubWV0YWRhdGE7XG4gICAgY29uc3QgZG9jc0NhdGVnb3JpZXMgPSByZWFkQ2F0ZWdvcmllcyhzaWRlYmFyLCBNZXRhZGF0YSwgbGFuZ3VhZ2VzKTtcblxuICAgIGlmICghY2F0ZWdvcnkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImRvY3NOYXZDb250YWluZXJcIiBpZD1cImRvY3NOYXZcIj5cbiAgICAgICAgPFNpZGVOYXZcbiAgICAgICAgICBjb2xsYXBzaWJsZT17dGhpcy5wcm9wcy5jb2xsYXBzaWJsZX1cbiAgICAgICAgICBsYW5ndWFnZT17dGhpcy5wcm9wcy5tZXRhZGF0YS5sYW5ndWFnZX1cbiAgICAgICAgICByb290PXt0aGlzLnByb3BzLnJvb3R9XG4gICAgICAgICAgdGl0bGU9e3RoaXMucHJvcHMudGl0bGV9XG4gICAgICAgICAgY29udGVudHM9e2RvY3NDYXRlZ29yaWVzW3RoaXMucHJvcHMubWV0YWRhdGEubGFuZ3VhZ2VdfVxuICAgICAgICAgIGN1cnJlbnQ9e3RoaXMucHJvcHMubWV0YWRhdGF9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gRG9jc1NpZGViYXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "DocsSidebar.js"
      ],
      "names": [
        "React",
        "require",
        "fs",
        "SideNav",
        "Metadata",
        "readCategories",
        "languages",
        "CWD",
        "process",
        "cwd",
        "existsSync",
        "enabled",
        "name",
        "tag",
        "DocsSidebar",
        "props",
        "metadata",
        "category",
        "sidebar",
        "docsCategories",
        "collapsible",
        "language",
        "root",
        "title",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,kBAAD,CAAvB;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,eAAD,CAAxB;;AAEA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,6BAAD,CAA9B;;AAEA,IAAIK,SAAJ;AAEA,IAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,EAAZ;;AACA,IAAIP,EAAE,CAACQ,UAAH,WAAiBH,GAAjB,mBAAJ,EAA0C;AACxCD,EAAAA,SAAS,GAAGL,OAAO,WAAIM,GAAJ,mBAAnB;AACD,CAFD,MAEO;AACLD,EAAAA,SAAS,GAAG,CACV;AACEK,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADU,CAAZ;AAOD;;IAEKC,W;;;;;;;;;;;;;6BACK;AAAA,iCACqB,KAAKC,KAAL,CAAWC,QADhC;AAAA,UACAC,QADA,wBACAA,QADA;AAAA,UACUC,OADV,wBACUA,OADV;AAEP,UAAMC,cAAc,GAAGd,cAAc,CAACa,OAAD,EAAUd,QAAV,EAAoBE,SAApB,CAArC;;AAEA,UAAI,CAACW,QAAL,EAAe;AACb,eAAO,IAAP;AACD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,EAAE,EAAC;AAArC,sBACE,oBAAC,OAAD;AACE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWK,WAD1B;AAEE,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,QAFhC;AAGE,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IAHnB;AAIE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAJpB;AAKE,QAAA,QAAQ,EAAEJ,cAAc,CAAC,KAAKJ,KAAL,CAAWC,QAAX,CAAoBK,QAArB,CAL1B;AAME,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWC;AANtB,QADF,CADF;AAYD;;;;EArBuBhB,KAAK,CAACwB,S;;AAwBhCC,MAAM,CAACC,OAAP,GAAiBZ,WAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst fs = require('fs');\nconst SideNav = require('./nav/SideNav.js');\nconst Metadata = require('./metadata.js');\n\nconst readCategories = require('../server/readCategories.js');\n\nlet languages;\n\nconst CWD = process.cwd();\nif (fs.existsSync(`${CWD}/languages.js`)) {\n  languages = require(`${CWD}/languages.js`);\n} else {\n  languages = [\n    {\n      enabled: true,\n      name: 'English',\n      tag: 'en',\n    },\n  ];\n}\n\nclass DocsSidebar extends React.Component {\n  render() {\n    const {category, sidebar} = this.props.metadata;\n    const docsCategories = readCategories(sidebar, Metadata, languages);\n\n    if (!category) {\n      return null;\n    }\n\n    return (\n      <div className=\"docsNavContainer\" id=\"docsNav\">\n        <SideNav\n          collapsible={this.props.collapsible}\n          language={this.props.metadata.language}\n          root={this.props.root}\n          title={this.props.title}\n          contents={docsCategories[this.props.metadata.language]}\n          current={this.props.metadata}\n        />\n      </div>\n    );\n  }\n}\n\nmodule.exports = DocsSidebar;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/SideNav.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/SideNav.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/SideNav.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/SideNav.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
        "sourceFileName": "SideNav.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar classNames = require('classnames');\n\nvar siteConfig = require(\"\".concat(process.cwd(), \"/siteConfig.js\"));\n\nvar translation = require('../../server/translation.js');\n\nvar _require = require('../utils.js'),\n    getPath = _require.getPath,\n    idx = _require.idx;\n\nvar SideNav = /*#__PURE__*/function (_React$Component) {\n  _inherits(SideNav, _React$Component);\n\n  var _super = _createSuper(SideNav);\n\n  function SideNav() {\n    var _this;\n\n    _classCallCheck(this, SideNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCategory\", function (categoryItem) {\n      var ulClassName = '';\n      var categoryClassName = 'navGroupCategoryTitle';\n      var arrow;\n\n      if (_this.props.collapsible) {\n        categoryClassName += ' collapsible';\n        ulClassName = 'hide';\n        arrow = /*#__PURE__*/React.createElement(\"span\", {\n          className: \"arrow\"\n        }, /*#__PURE__*/React.createElement(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\"\n        }, /*#__PURE__*/React.createElement(\"path\", {\n          fill: \"#565656\",\n          d: \"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n        }), /*#__PURE__*/React.createElement(\"path\", {\n          d: \"M0 0h24v24H0z\",\n          fill: \"none\"\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navGroup\",\n        key: categoryItem.title\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: categoryClassName\n      }, _this.getLocalizedCategoryString(categoryItem.title), arrow), /*#__PURE__*/React.createElement(\"ul\", {\n        className: ulClassName\n      }, categoryItem.children.map(function (item) {\n        switch (item.type) {\n          case 'LINK':\n            return _this.renderItemLink(item);\n\n          case 'SUBCATEGORY':\n            return _this.renderSubcategory(item);\n\n          default:\n            return null;\n        }\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSubcategory\", function (subcategoryItem) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navGroup subNavGroup\",\n        key: subcategoryItem.title\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"navGroupSubcategoryTitle\"\n      }, _this.getLocalizedCategoryString(subcategoryItem.title)), /*#__PURE__*/React.createElement(\"ul\", null, subcategoryItem.children.map(_this.renderItemLink)));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderItemLink\", function (linkItem) {\n      var linkMetadata = linkItem.item;\n      var itemClasses = classNames('navListItem', {\n        navListItemActive: linkMetadata.id === _this.props.current.id\n      });\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: itemClasses,\n        key: linkMetadata.id\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"navItem\",\n        href: _this.getLink(linkMetadata)\n      }, _this.getLocalizedString(linkMetadata)));\n    });\n\n    return _this;\n  }\n\n  _createClass(SideNav, [{\n    key: \"getLocalizedCategoryString\",\n    // return appropriately translated category string\n    value: function getLocalizedCategoryString(category) {\n      var categoryString = idx(translation, [this.props.language, 'localized-strings', 'categories', category]) || category;\n      return categoryString;\n    } // return appropriately translated label to use for doc/blog in sidebar\n\n  }, {\n    key: \"getLocalizedString\",\n    value: function getLocalizedString(metadata) {\n      var localizedString;\n      var i18n = translation[this.props.language];\n      var id = metadata.localized_id;\n      var sbTitle = metadata.sidebar_label;\n\n      if (sbTitle) {\n        localizedString = idx(i18n, ['localized-strings', 'docs', id, 'sidebar_label']) || sbTitle;\n      } else {\n        localizedString = idx(i18n, ['localized-strings', 'docs', id, 'title']) || metadata.title;\n      }\n\n      return localizedString;\n    } // return link to doc in sidebar\n\n  }, {\n    key: \"getLink\",\n    value: function getLink(metadata) {\n      if (metadata.permalink) {\n        var targetLink = getPath(metadata.permalink, siteConfig.cleanUrl);\n\n        if (targetLink.match(/^https?:/)) {\n          return targetLink;\n        }\n\n        return siteConfig.baseUrl + targetLink;\n      }\n\n      if (metadata.path) {\n        return \"\".concat(siteConfig.baseUrl, \"blog/\").concat(getPath(metadata.path, siteConfig.cleanUrl));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"nav\", {\n        className: \"toc\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggleNav\"\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"navWrapper wrapper\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBreadcrumb wrapper\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navToggle\",\n        id: \"navToggler\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hamburger-menu\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line1\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line2\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line3\"\n      }))), /*#__PURE__*/React.createElement(\"h2\", null, /*#__PURE__*/React.createElement(\"i\", null, \"\\u203A\"), /*#__PURE__*/React.createElement(\"span\", null, this.getLocalizedCategoryString(this.props.current.subcategory || this.props.current.category))), siteConfig.onPageNav === 'separate' && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tocToggler\",\n        id: \"tocToggler\"\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-toc\"\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navGroups\"\n      }, this.props.contents.map(this.renderCategory)))), /*#__PURE__*/React.createElement(\"script\", {\n        dangerouslySetInnerHTML: {\n          __html: \"\\n            var coll = document.getElementsByClassName('collapsible');\\n            var checkActiveCategory = true;\\n            for (var i = 0; i < coll.length; i++) {\\n              var links = coll[i].nextElementSibling.getElementsByTagName('*');\\n              if (checkActiveCategory){\\n                for (var j = 0; j < links.length; j++) {\\n                  if (links[j].classList.contains('navListItemActive')){\\n                    coll[i].nextElementSibling.classList.toggle('hide');\\n                    coll[i].childNodes[1].classList.toggle('rotate');\\n                    checkActiveCategory = false;\\n                    break;\\n                  }\\n                }\\n              }\\n\\n              coll[i].addEventListener('click', function() {\\n                var arrow = this.childNodes[1];\\n                arrow.classList.toggle('rotate');\\n                var content = this.nextElementSibling;\\n                content.classList.toggle('hide');\\n              });\\n            }\\n\\n            document.addEventListener('DOMContentLoaded', function() {\\n              createToggler('#navToggler', '#docsNav', 'docsSliderActive');\\n              createToggler('#tocToggler', 'body', 'tocActive');\\n\\n              var headings = document.querySelector('.toc-headings');\\n              headings && headings.addEventListener('click', function(event) {\\n                var el = event.target;\\n                while(el !== headings){\\n                  if (el.tagName === 'A') {\\n                    document.body.classList.remove('tocActive');\\n                    break;\\n                  } else{\\n                    el = el.parentNode;\\n                  }\\n                }\\n              }, false);\\n\\n              function createToggler(togglerSelector, targetSelector, className) {\\n                var toggler = document.querySelector(togglerSelector);\\n                var target = document.querySelector(targetSelector);\\n\\n                if (!toggler) {\\n                  return;\\n                }\\n\\n                toggler.onclick = function(event) {\\n                  event.preventDefault();\\n\\n                  target.classList.toggle(className);\\n                };\\n              }\\n            });\\n        \"\n        }\n      }));\n    }\n  }]);\n\n  return SideNav;\n}(React.Component);\n\nSideNav.defaultProps = {\n  collapsible: false,\n  contents: []\n};\nmodule.exports = SideNav;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "SideNav.js"
      ],
      "names": [
        "React",
        "require",
        "classNames",
        "siteConfig",
        "process",
        "cwd",
        "translation",
        "getPath",
        "idx",
        "SideNav",
        "categoryItem",
        "ulClassName",
        "categoryClassName",
        "arrow",
        "props",
        "collapsible",
        "title",
        "getLocalizedCategoryString",
        "children",
        "map",
        "item",
        "type",
        "renderItemLink",
        "renderSubcategory",
        "subcategoryItem",
        "linkItem",
        "linkMetadata",
        "itemClasses",
        "navListItemActive",
        "id",
        "current",
        "getLink",
        "getLocalizedString",
        "category",
        "categoryString",
        "language",
        "metadata",
        "localizedString",
        "i18n",
        "localized_id",
        "sbTitle",
        "sidebar_label",
        "permalink",
        "targetLink",
        "cleanUrl",
        "match",
        "baseUrl",
        "path",
        "subcategory",
        "onPageNav",
        "contents",
        "renderCategory",
        "__html",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst classNames = require('classnames');\n\nconst siteConfig = require(`${process.cwd()}/siteConfig.js`);\nconst translation = require('../../server/translation.js');\nconst {getPath, idx} = require('../utils.js');\n\nclass SideNav extends React.Component {\n  // return appropriately translated category string\n  getLocalizedCategoryString(category) {\n    const categoryString =\n      idx(translation, [\n        this.props.language,\n        'localized-strings',\n        'categories',\n        category,\n      ]) || category;\n    return categoryString;\n  }\n\n  // return appropriately translated label to use for doc/blog in sidebar\n  getLocalizedString(metadata) {\n    let localizedString;\n    const i18n = translation[this.props.language];\n    const id = metadata.localized_id;\n    const sbTitle = metadata.sidebar_label;\n\n    if (sbTitle) {\n      localizedString =\n        idx(i18n, ['localized-strings', 'docs', id, 'sidebar_label']) ||\n        sbTitle;\n    } else {\n      localizedString =\n        idx(i18n, ['localized-strings', 'docs', id, 'title']) || metadata.title;\n    }\n    return localizedString;\n  }\n\n  // return link to doc in sidebar\n  getLink(metadata) {\n    if (metadata.permalink) {\n      const targetLink = getPath(metadata.permalink, siteConfig.cleanUrl);\n      if (targetLink.match(/^https?:/)) {\n        return targetLink;\n      }\n      return siteConfig.baseUrl + targetLink;\n    }\n    if (metadata.path) {\n      return `${siteConfig.baseUrl}blog/${getPath(\n        metadata.path,\n        siteConfig.cleanUrl,\n      )}`;\n    }\n    return null;\n  }\n\n  renderCategory = (categoryItem) => {\n    let ulClassName = '';\n    let categoryClassName = 'navGroupCategoryTitle';\n    let arrow;\n\n    if (this.props.collapsible) {\n      categoryClassName += ' collapsible';\n      ulClassName = 'hide';\n      arrow = (\n        <span className=\"arrow\">\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path\n              fill=\"#565656\"\n              d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"\n            />\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          </svg>\n        </span>\n      );\n    }\n\n    return (\n      <div className=\"navGroup\" key={categoryItem.title}>\n        <h3 className={categoryClassName}>\n          {this.getLocalizedCategoryString(categoryItem.title)}\n          {arrow}\n        </h3>\n        <ul className={ulClassName}>\n          {categoryItem.children.map((item) => {\n            switch (item.type) {\n              case 'LINK':\n                return this.renderItemLink(item);\n              case 'SUBCATEGORY':\n                return this.renderSubcategory(item);\n              default:\n                return null;\n            }\n          })}\n        </ul>\n      </div>\n    );\n  };\n\n  renderSubcategory = (subcategoryItem) => (\n    <div className=\"navGroup subNavGroup\" key={subcategoryItem.title}>\n      <h4 className=\"navGroupSubcategoryTitle\">\n        {this.getLocalizedCategoryString(subcategoryItem.title)}\n      </h4>\n      <ul>{subcategoryItem.children.map(this.renderItemLink)}</ul>\n    </div>\n  );\n\n  renderItemLink = (linkItem) => {\n    const linkMetadata = linkItem.item;\n    const itemClasses = classNames('navListItem', {\n      navListItemActive: linkMetadata.id === this.props.current.id,\n    });\n    return (\n      <li className={itemClasses} key={linkMetadata.id}>\n        <a className=\"navItem\" href={this.getLink(linkMetadata)}>\n          {this.getLocalizedString(linkMetadata)}\n        </a>\n      </li>\n    );\n  };\n\n  render() {\n    return (\n      <nav className=\"toc\">\n        <div className=\"toggleNav\">\n          <section className=\"navWrapper wrapper\">\n            <div className=\"navBreadcrumb wrapper\">\n              <div className=\"navToggle\" id=\"navToggler\">\n                <div className=\"hamburger-menu\">\n                  <div className=\"line1\" />\n                  <div className=\"line2\" />\n                  <div className=\"line3\" />\n                </div>\n              </div>\n              <h2>\n                <i>›</i>\n                <span>\n                  {this.getLocalizedCategoryString(\n                    this.props.current.subcategory ||\n                      this.props.current.category,\n                  )}\n                </span>\n              </h2>\n              {siteConfig.onPageNav === 'separate' && (\n                <div className=\"tocToggler\" id=\"tocToggler\">\n                  <i className=\"icon-toc\" />\n                </div>\n              )}\n            </div>\n            <div className=\"navGroups\">\n              {this.props.contents.map(this.renderCategory)}\n            </div>\n          </section>\n        </div>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n            var coll = document.getElementsByClassName('collapsible');\n            var checkActiveCategory = true;\n            for (var i = 0; i < coll.length; i++) {\n              var links = coll[i].nextElementSibling.getElementsByTagName('*');\n              if (checkActiveCategory){\n                for (var j = 0; j < links.length; j++) {\n                  if (links[j].classList.contains('navListItemActive')){\n                    coll[i].nextElementSibling.classList.toggle('hide');\n                    coll[i].childNodes[1].classList.toggle('rotate');\n                    checkActiveCategory = false;\n                    break;\n                  }\n                }\n              }\n\n              coll[i].addEventListener('click', function() {\n                var arrow = this.childNodes[1];\n                arrow.classList.toggle('rotate');\n                var content = this.nextElementSibling;\n                content.classList.toggle('hide');\n              });\n            }\n\n            document.addEventListener('DOMContentLoaded', function() {\n              createToggler('#navToggler', '#docsNav', 'docsSliderActive');\n              createToggler('#tocToggler', 'body', 'tocActive');\n\n              var headings = document.querySelector('.toc-headings');\n              headings && headings.addEventListener('click', function(event) {\n                var el = event.target;\n                while(el !== headings){\n                  if (el.tagName === 'A') {\n                    document.body.classList.remove('tocActive');\n                    break;\n                  } else{\n                    el = el.parentNode;\n                  }\n                }\n              }, false);\n\n              function createToggler(togglerSelector, targetSelector, className) {\n                var toggler = document.querySelector(togglerSelector);\n                var target = document.querySelector(targetSelector);\n\n                if (!toggler) {\n                  return;\n                }\n\n                toggler.onclick = function(event) {\n                  event.preventDefault();\n\n                  target.classList.toggle(className);\n                };\n              }\n            });\n        `,\n          }}\n        />\n      </nav>\n    );\n  }\n}\n\nSideNav.defaultProps = {\n  collapsible: false,\n  contents: [],\n};\n\nmodule.exports = SideNav;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readCategories.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readCategories.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readCategories.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/readCategories.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
        "sourceFileName": "readCategories.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar _ = require('lodash'); // returns data broken up into categories for a sidebar\n\n\nfunction readCategories(sidebar, allMetadata, languages) {\n  var allCategories = {}; // Go through each language that might be defined.\n\n  languages.filter(function (lang) {\n    return lang.enabled;\n  }).map(function (lang) {\n    return lang.tag;\n  }).forEach(function (language) {\n    // Get all related metadata for the current sidebar and specific to the language.\n    var metadatas = Object.values(allMetadata).filter(function (metadata) {\n      return metadata.sidebar === sidebar && metadata.language === language;\n    }).sort(function (a, b) {\n      return a.order - b.order;\n    }); // Define the correct order of categories.\n\n    var sortedCategories = _.uniq(metadatas.map(function (metadata) {\n      return metadata.category;\n    }));\n\n    var metadatasGroupedByCategory = _.chain(metadatas).groupBy(function (metadata) {\n      return metadata.category;\n    }).mapValues(function (categoryItems) {\n      // Process subcategories.\n      var metadatasGroupedBySubcategory = _.groupBy(categoryItems, function (item) {\n        return item.subcategory;\n      });\n\n      var result = [];\n      var seenSubcategories = new Set(); // categoryItems can be links or subcategories. Handle separately.\n\n      categoryItems.forEach(function (item) {\n        // Has no subcategory.\n        if (item.subcategory == null) {\n          result.push({\n            type: 'LINK',\n            item: item\n          });\n          return;\n        }\n\n        var subcategory = item.subcategory; // Subcategory has been processed, we can skip it.\n\n        if (seenSubcategories.has(subcategory)) {\n          return;\n        }\n\n        seenSubcategories.add(subcategory);\n        var subcategoryLinks = metadatasGroupedBySubcategory[subcategory].map(function (subcategoryItem) {\n          return {\n            type: 'LINK',\n            item: subcategoryItem\n          };\n        });\n        result.push({\n          type: 'SUBCATEGORY',\n          title: subcategory,\n          children: subcategoryLinks\n        });\n      });\n      return result;\n    }).value();\n\n    var categories = sortedCategories.map(function (category) {\n      return {\n        type: 'CATEGORY',\n        title: category,\n        children: metadatasGroupedByCategory[category]\n      };\n    });\n    allCategories[language] = categories;\n  });\n  return allCategories;\n}\n\nmodule.exports = readCategories;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWRDYXRlZ29yaWVzLmpzIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwicmVhZENhdGVnb3JpZXMiLCJzaWRlYmFyIiwiYWxsTWV0YWRhdGEiLCJsYW5ndWFnZXMiLCJhbGxDYXRlZ29yaWVzIiwiZmlsdGVyIiwibGFuZyIsImVuYWJsZWQiLCJtYXAiLCJ0YWciLCJmb3JFYWNoIiwibGFuZ3VhZ2UiLCJtZXRhZGF0YXMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJtZXRhZGF0YSIsInNvcnQiLCJhIiwiYiIsIm9yZGVyIiwic29ydGVkQ2F0ZWdvcmllcyIsInVuaXEiLCJjYXRlZ29yeSIsIm1ldGFkYXRhc0dyb3VwZWRCeUNhdGVnb3J5IiwiY2hhaW4iLCJncm91cEJ5IiwibWFwVmFsdWVzIiwiY2F0ZWdvcnlJdGVtcyIsIm1ldGFkYXRhc0dyb3VwZWRCeVN1YmNhdGVnb3J5IiwiaXRlbSIsInN1YmNhdGVnb3J5IiwicmVzdWx0Iiwic2VlblN1YmNhdGVnb3JpZXMiLCJTZXQiLCJwdXNoIiwidHlwZSIsImhhcyIsImFkZCIsInN1YmNhdGVnb3J5TGlua3MiLCJzdWJjYXRlZ29yeUl0ZW0iLCJ0aXRsZSIsImNoaWxkcmVuIiwidmFsdWUiLCJjYXRlZ29yaWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQWpCLEMsQ0FFQTs7O0FBQ0EsU0FBU0MsY0FBVCxDQUF3QkMsT0FBeEIsRUFBaUNDLFdBQWpDLEVBQThDQyxTQUE5QyxFQUF5RDtBQUN2RCxNQUFNQyxhQUFhLEdBQUcsRUFBdEIsQ0FEdUQsQ0FHdkQ7O0FBQ0FELEVBQUFBLFNBQVMsQ0FDTkUsTUFESCxDQUNVLFVBQUNDLElBQUQ7QUFBQSxXQUFVQSxJQUFJLENBQUNDLE9BQWY7QUFBQSxHQURWLEVBRUdDLEdBRkgsQ0FFTyxVQUFDRixJQUFEO0FBQUEsV0FBVUEs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QTBCZ0MsVUFBMUI7QUFDRCxHQXBFSDtBQXNFQSxTQUFPdkMsYUFBUDtBQUNEOztBQUVEd0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCN0MsY0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbi8vIHJldHVybnMgZGF0YSBicm9rZW4gdXAgaW50byBjYXRlZ29yaWVzIGZvciBhIHNpZGViYXJcbmZ1bmN0aW9uIHJlYWRDYXRlZ29yaWVzKHNpZGViYXIsIGFsbE1ldGFkYXRhLCBsYW5ndWFnZXMpIHtcbiAgY29uc3QgYWxsQ2F0ZWdvcmllcyA9IHt9O1xuXG4gIC8vIEdvIHRocm91Z2ggZWFjaCBsYW5ndWFnZSB0aGF0IG1pZ2h0IGJlIGRlZmluZWQuXG4gIGxhbmd1YWdlc1xuICAgIC5maWx0ZXIoKGxhbmcpID0+IGxhbmcuZW5hYmxlZClcbiAgICAubWFwKChsYW5nKSA9PiBsYW5nLnRhZylcbiAgICAuZm9yRWFjaCgobGFuZ3VhZ2UpID0+IHtcbiAgICAgIC8vIEdldCBhbGwgcmVsYXRlZCBtZXRhZGF0YSBmb3IgdGhlIGN1cnJlbnQgc2lkZWJhciBhbmQgc3BlY2lmaWMgdG8gdGhlIGxhbmd1YWdlLlxuICAgICAgY29uc3QgbWV0YWRhdGFzID0gT2JqZWN0LnZhbHVlcyhhbGxNZXRhZGF0YSlcbiAgICAgICAgLmZpbHRlcihcbiAgICAgICAgICAobWV0YWRhdGEpID0+XG4gICAgICAgICAgICBtZXRhZGF0YS5zaWRlYmFyID09PSBzaWRlYmFyICYmIG1ldGFkYXRhLmxhbmd1YWdlID09PSBsYW5ndWFnZSxcbiAgICAgICAgKVxuICAgICAgICAuc29ydCgoYSwgYikgPT4gYS5vcmRlciAtIGIub3JkZXIpO1xuXG4gICAgICAvLyBEZWZpbmUgdGhlIGNvcnJlY3Qgb3JkZXIgb2YgY2F0ZWdvcmllcy5cbiAgICAgIGNvbnN0IHNvcnRlZENhdGVnb3JpZXMgPSBfLnVuaXEoXG4gICAgICAgIG1ldGFkYXRhcy5tYXAoKG1ldGFkYXRhKSA9PiBtZXRhZGF0YS5jYXRlZ29yeSksXG4gICAgICApO1xuXG4gICAgICBjb25zdCBtZXRhZGF0YXNHcm91cGVkQnlDYXRlZ29yeSA9IF8uY2hhaW4obWV0YWRhdGFzKVxuICAgICAgICAuZ3JvdXBCeSgobWV0YWRhdGEpID0+IG1ldGFkYXRhLmNhdGVnb3J5KVxuICAgICAgICAubWFwVmFsdWVzKChjYXRlZ29yeUl0ZW1zKSA9PiB7XG4gICAgICAgICAgLy8gUHJvY2VzcyBzdWJjYXRlZ29yaWVzLlxuICAgICAgICAgIGNvbnN0IG1ldGFkYXRhc0dyb3VwZWRCeVN1YmNhdGVnb3J5ID0gXy5ncm91cEJ5KFxuICAgICAgICAgICAgY2F0ZWdvcnlJdGVtcyxcbiAgICAgICAgICAgIChpdGVtKSA9PiBpdGVtLnN1YmNhdGVnb3J5LFxuICAgICAgICAgICk7XG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICAgICAgY29uc3Qgc2VlblN1YmNhdGVnb3JpZXMgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgLy8gY2F0ZWdvcnlJdGVtcyBjYW4gYmUgbGlua3Mgb3Igc3ViY2F0ZWdvcmllcy4gSGFuZGxlIHNlcGFyYXRlbHkuXG4gICAgICAgICAgY2F0ZWdvcnlJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAvLyBIYXMgbm8gc3ViY2F0ZWdvcnkuXG4gICAgICAgICAgICBpZiAoaXRlbS5zdWJjYXRlZ29yeSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnTElOSycsXG4gICAgICAgICAgICAgICAgaXRlbSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3Qge3N1YmNhdGVnb3J5fSA9IGl0ZW07XG4gICAgICAgICAgICAvLyBTdWJjYXRlZ29yeSBoYXMgYmVlbiBwcm9jZXNzZWQsIHdlIGNhbiBza2lwIGl0LlxuICAgICAgICAgICAgaWYgKHNlZW5TdWJjYXRlZ29yaWVzLmhhcyhzdWJjYXRlZ29yeSkpIHtcbiAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzZWVuU3ViY2F0ZWdvcmllcy5hZGQoc3ViY2F0ZWdvcnkpO1xuICAgICAgICAgICAgY29uc3Qgc3ViY2F0ZWdvcnlMaW5rcyA9IG1ldGFkYXRhc0dyb3VwZWRCeVN1YmNhdGVnb3J5W1xuICAgICAgICAgICAgICBzdWJjYXRlZ29yeVxuICAgICAgICAgICAgXS5tYXAoKHN1YmNhdGVnb3J5SXRlbSkgPT4gKHtcbiAgICAgICAgICAgICAgdHlwZTogJ0xJTksnLFxuICAgICAgICAgICAgICBpdGVtOiBzdWJjYXRlZ29yeUl0ZW0sXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICByZXN1bHQucHVzaCh7XG4gICAgICAgICAgICAgIHR5cGU6ICdTVUJDQVRFR09SWScsXG4gICAgICAgICAgICAgIHRpdGxlOiBzdWJjYXRlZ29yeSxcbiAgICAgICAgICAgICAgY2hpbGRyZW46IHN1YmNhdGVnb3J5TGlua3MsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0pXG4gICAgICAgIC52YWx1ZSgpO1xuXG4gICAgICBjb25zdCBjYXRlZ29yaWVzID0gc29ydGVkQ2F0ZWdvcmllcy5tYXAoKGNhdGVnb3J5KSA9PiAoe1xuICAgICAgICB0eXBlOiAnQ0FURUdPUlknLFxuICAgICAgICB0aXRsZTogY2F0ZWdvcnksXG4gICAgICAgIGNoaWxkcmVuOiBtZXRhZGF0YXNHcm91cGVkQnlDYXRlZ29yeVtjYXRlZ29yeV0sXG4gICAgICB9KSk7XG4gICAgICBhbGxDYXRlZ29yaWVzW2xhbmd1YWdlXSA9IGNhdGVnb3JpZXM7XG4gICAgfSk7XG5cbiAgcmV0dXJuIGFsbENhdGVnb3JpZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcmVhZENhdGVnb3JpZXM7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "readCategories.js"
      ],
      "names": [
        "_",
        "require",
        "readCategories",
        "sidebar",
        "allMetadata",
        "languages",
        "allCategories",
        "filter",
        "lang",
        "enabled",
        "map",
        "tag",
        "forEach",
        "language",
        "metadatas",
        "Object",
        "values",
        "metadata",
        "sort",
        "a",
        "b",
        "order",
        "sortedCategories",
        "uniq",
        "category",
        "metadatasGroupedByCategory",
        "chain",
        "groupBy",
        "mapValues",
        "categoryItems",
        "metadatasGroupedBySubcategory",
        "item",
        "subcategory",
        "result",
        "seenSubcategories",
        "Set",
        "push",
        "type",
        "has",
        "add",
        "subcategoryLinks",
        "subcategoryItem",
        "title",
        "children",
        "value",
        "categories",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/server/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst _ = require('lodash');\n\n// returns data broken up into categories for a sidebar\nfunction readCategories(sidebar, allMetadata, languages) {\n  const allCategories = {};\n\n  // Go through each language that might be defined.\n  languages\n    .filter((lang) => lang.enabled)\n    .map((lang) => lang.tag)\n    .forEach((language) => {\n      // Get all related metadata for the current sidebar and specific to the language.\n      const metadatas = Object.values(allMetadata)\n        .filter(\n          (metadata) =>\n            metadata.sidebar === sidebar && metadata.language === language,\n        )\n        .sort((a, b) => a.order - b.order);\n\n      // Define the correct order of categories.\n      const sortedCategories = _.uniq(\n        metadatas.map((metadata) => metadata.category),\n      );\n\n      const metadatasGroupedByCategory = _.chain(metadatas)\n        .groupBy((metadata) => metadata.category)\n        .mapValues((categoryItems) => {\n          // Process subcategories.\n          const metadatasGroupedBySubcategory = _.groupBy(\n            categoryItems,\n            (item) => item.subcategory,\n          );\n          const result = [];\n          const seenSubcategories = new Set();\n          // categoryItems can be links or subcategories. Handle separately.\n          categoryItems.forEach((item) => {\n            // Has no subcategory.\n            if (item.subcategory == null) {\n              result.push({\n                type: 'LINK',\n                item,\n              });\n              return;\n            }\n\n            const {subcategory} = item;\n            // Subcategory has been processed, we can skip it.\n            if (seenSubcategories.has(subcategory)) {\n              return;\n            }\n\n            seenSubcategories.add(subcategory);\n            const subcategoryLinks = metadatasGroupedBySubcategory[\n              subcategory\n            ].map((subcategoryItem) => ({\n              type: 'LINK',\n              item: subcategoryItem,\n            }));\n            result.push({\n              type: 'SUBCATEGORY',\n              title: subcategory,\n              children: subcategoryLinks,\n            });\n          });\n\n          return result;\n        })\n        .value();\n\n      const categories = sortedCategories.map((category) => ({\n        type: 'CATEGORY',\n        title: category,\n        children: metadatasGroupedByCategory[category],\n      }));\n      allCategories[language] = categories;\n    });\n\n  return allCategories;\n}\n\nmodule.exports = readCategories;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/OnPageNav.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/OnPageNav.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/OnPageNav.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/OnPageNav.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
        "sourceFileName": "OnPageNav.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar siteConfig = require(\"\".concat(process.cwd(), \"/siteConfig.js\"));\n\nvar _require = require('../toc'),\n    getTOC = _require.getTOC;\n\nvar Link = function Link(_ref) {\n  var hashLink = _ref.hashLink,\n      content = _ref.content;\n  return /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\".concat(hashLink),\n    dangerouslySetInnerHTML: {\n      __html: content\n    }\n  });\n};\n\nvar Headings = function Headings(_ref2) {\n  var headings = _ref2.headings;\n  if (!headings.length) return null;\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"toc-headings\"\n  }, headings.map(function (heading) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: heading.hashLink\n    }, /*#__PURE__*/React.createElement(Link, {\n      hashLink: heading.hashLink,\n      content: heading.content\n    }), /*#__PURE__*/React.createElement(Headings, {\n      headings: heading.children\n    }));\n  }));\n};\n\nvar OnPageNav = /*#__PURE__*/function (_React$Component) {\n  _inherits(OnPageNav, _React$Component);\n\n  var _super = _createSuper(OnPageNav);\n\n  function OnPageNav() {\n    _classCallCheck(this, OnPageNav);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(OnPageNav, [{\n    key: \"render\",\n    value: function render() {\n      var customTags = siteConfig.onPageNavHeadings;\n      var headings = customTags ? getTOC(this.props.rawContent, customTags.topLevel, customTags.sub, siteConfig.slugPreprocessor) : getTOC(this.props.rawContent, undefined, undefined, siteConfig.slugPreprocessor);\n      return /*#__PURE__*/React.createElement(Headings, {\n        headings: headings\n      });\n    }\n  }]);\n\n  return OnPageNav;\n}(React.Component);\n\nmodule.exports = OnPageNav;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk9uUGFnZU5hdi5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJzaXRlQ29uZmlnIiwicHJvY2VzcyIsImN3ZCIsImdldFRPQyIsIkxpbmsiLCJoYXNoTGluayIsImNvbnRlbnQiLCJfX2h0bWwiLCJIZWFkaW5ncyIsImhlYWRpbmdzIiwibGVuZ3RoIiwibWFwIiwiaGVhZGluZyIsImNoaWxkcmVuIiwiT25QYWdlTmF2IiwiY3VzdG9tVGFncyIsIm9uUGFnZU5hdkhlYWRpbmdzIiwicHJvcHMiLCJyYXdDb250ZW50IiwidG9wTGV2ZWwiLCJzdWIiLCJzbHVnUHJlcHJvY2Vzc29yIiwidW5kZWZpbmVkIiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFFQSxJQUFNQyxVQUFVLEdBQUdELE9BQU8sV0FBSUUsT0FBTyxDQUFDQyxHQUFSLEVBQUosb0JBQTFCOztlQUNpQkgsT0FBTyxDQUFDLFFBQUQsQztJQUFqQkksTSxZQUFBQSxNOztBQUVQLElBQU1DLElBQUksR0FBRyxTQUFQQSxJQUFPO0FBQUEsTUFBRUMsUUFBRixRQUFFQSxRQUFGO0FBQUEsTUFBWUMsT0FBWixRQUFZQSxPQUFaO0FBQUEsc0JBQ1g7QUFDRSxJQUFBLElBQUksYUFBTUQsUUFBTixDQUROO0FBRUUsSUFBQSx1QkFBdUIsRUFBRTtBQUN2QkUsTUFBQUEsTUFBTSxFQUFFRDtBQURlO0FBRjNCLElBRFc7QUFBQSxDQUFiOztBQVNBLElBQU1FLFFBQVEsR0FBRyxTQUFYQSxRQUFXLFFBQWdCO0FBQUEsTUFBZEMsUUFBYyxTQUFkQSxRQUFjO0FBQy9CLE1BQUksQ0FBQ0EsUUFBUSxDQUFDQyxNQUFkLEVBQXNCLE9BQU8sSUFBUDtBQUN0QixzQkFDRTtBQUFJLElBQUEsU0FBUyxFQUFDO0FBQWQsS0FDR0QsUUFBUSxDQUFDRSxHQUFULENBQWEsVUFBQ0MsT0FBRDtBQUFBLHdCQUNaO0FBQUksTUFBQSxHQUFHLEVBQUVBLE9BQU8sQ0FBQ1A7QUFBakIsb0JBQ0Usb0JBQUMsSUFBRDtBQUFNLE1BQUEsUUFBUSxFQUFFTyxPQUFPLENBQUNQLFFBQXhCO0FBQWtDLE1BQUEsT0FBTyxFQUFFTyxPQUFPLENBQUNOO0FBQW5ELE1BREYsZUFFRSxvQkFBQyxRQUFEO0FBQVUsTUFBQSxRQUFRLEVBQUVNLE9BQU8sQ0FBQ0M7QUFBNUIsTUFGRixDQURZO0FBQUEsR0FBYixDQURILENBREY7QUFVRCxDQVpEOztJQWNNQyxTOzs7Ozs7Ozs7Ozs7OzZCQUNLO0FBQ1AsVUFBTUMsVUFBVSxHQUFHZixVQUFVLENBQUNnQixpQkFBOUI7QUFDQSxVQUFNUCxRQUFRLEdBQUdNLFVBQVUsR0FDdkJaLE1BQU0sQ0FDSixLQUFLYyxLQUFMLENBQVdDLFVBRFAsRUFFSkgsVUFBVSxDQUFDSSxRQUZQLEVBR0pKLFVBQVUsQ0FBQ0ssR0FIUCxFQUlKcEIsVUFBVSxDQUFDcUIsZ0JBSlAsQ0FEaUIsR0FPdkJsQixNQUFNLENBQ0osS0FBS2MsS0FBTCxDQUFXQyxVQURQLEVBRUpJLFNBRkksRUFHSkEsU0FISSxFQUlKdEIsVUFBVSxDQUFDcUIsZ0JBSlAsQ0FQVjtBQWNBLDBCQUFPLG9CQUFDLFFBQUQ7QUFBVSxRQUFBLFFBQVEsRUFBRVo7QUFBcEIsUUFBUDtBQUNEOzs7O0VBbEJxQlgsS0FBSyxDQUFDeUIsUzs7QUFxQjlCQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS9uYXYvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbmNvbnN0IHNpdGVDb25maWcgPSByZXF1aXJlKGAke3Byb2Nlc3MuY3dkKCl9L3NpdGVDb25maWcuanNgKTtcbmNvbnN0IHtnZXRUT0N9ID0gcmVxdWlyZSgnLi4vdG9jJyk7XG5cbmNvbnN0IExpbmsgPSAoe2hhc2hMaW5rLCBjb250ZW50fSkgPT4gKFxuICA8YVxuICAgIGhyZWY9e2AjJHtoYXNoTGlua31gfVxuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7XG4gICAgICBfX2h0bWw6IGNvbnRlbnQsXG4gICAgfX1cbiAgLz5cbik7XG5cbmNvbnN0IEhlYWRpbmdzID0gKHtoZWFkaW5nc30pID0+IHtcbiAgaWYgKCFoZWFkaW5ncy5sZW5ndGgpIHJldHVybiBudWxsO1xuICByZXR1cm4gKFxuICAgIDx1bCBjbGFzc05hbWU9XCJ0b2MtaGVhZGluZ3NcIj5cbiAgICAgIHtoZWFkaW5ncy5tYXAoKGhlYWRpbmcpID0+IChcbiAgICAgICAgPGxpIGtleT17aGVhZGluZy5oYXNoTGlua30+XG4gICAgICAgICAgPExpbmsgaGFzaExpbms9e2hlYWRpbmcuaGFzaExpbmt9IGNvbnRlbnQ9e2hlYWRpbmcuY29udGVudH0gLz5cbiAgICAgICAgICA8SGVhZGluZ3MgaGVhZGluZ3M9e2hlYWRpbmcuY2hpbGRyZW59IC8+XG4gICAgICAgIDwvbGk+XG4gICAgICApKX1cbiAgICA8L3VsPlxuICApO1xufTtcblxuY2xhc3MgT25QYWdlTmF2IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGN1c3RvbVRhZ3MgPSBzaXRlQ29uZmlnLm9uUGFnZU5hdkhlYWRpbmdzO1xuICAgIGNvbnN0IGhlYWRpbmdzID0gY3VzdG9tVGFnc1xuICAgICAgPyBnZXRUT0MoXG4gICAgICAgICAgdGhpcy5wcm9wcy5yYXdDb250ZW50LFxuICAgICAgICAgIGN1c3RvbVRhZ3MudG9wTGV2ZWwsXG4gICAgICAgICAgY3VzdG9tVGFncy5zdWIsXG4gICAgICAgICAgc2l0ZUNvbmZpZy5zbHVnUHJlcHJvY2Vzc29yLFxuICAgICAgICApXG4gICAgICA6IGdldFRPQyhcbiAgICAgICAgICB0aGlzLnByb3BzLnJhd0NvbnRlbnQsXG4gICAgICAgICAgdW5kZWZpbmVkLFxuICAgICAgICAgIHVuZGVmaW5lZCxcbiAgICAgICAgICBzaXRlQ29uZmlnLnNsdWdQcmVwcm9jZXNzb3IsXG4gICAgICAgICk7XG5cbiAgICByZXR1cm4gPEhlYWRpbmdzIGhlYWRpbmdzPXtoZWFkaW5nc30gLz47XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBPblBhZ2VOYXY7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "OnPageNav.js"
      ],
      "names": [
        "React",
        "require",
        "siteConfig",
        "process",
        "cwd",
        "getTOC",
        "Link",
        "hashLink",
        "content",
        "__html",
        "Headings",
        "headings",
        "length",
        "map",
        "heading",
        "children",
        "OnPageNav",
        "customTags",
        "onPageNavHeadings",
        "props",
        "rawContent",
        "topLevel",
        "sub",
        "slugPreprocessor",
        "undefined",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,UAAU,GAAGD,OAAO,WAAIE,OAAO,CAACC,GAAR,EAAJ,oBAA1B;;eACiBH,OAAO,CAAC,QAAD,C;IAAjBI,M,YAAAA,M;;AAEP,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAYC,OAAZ,QAAYA,OAAZ;AAAA,sBACX;AACE,IAAA,IAAI,aAAMD,QAAN,CADN;AAEE,IAAA,uBAAuB,EAAE;AACvBE,MAAAA,MAAM,EAAED;AADe;AAF3B,IADW;AAAA,CAAb;;AASA,IAAME,QAAQ,GAAG,SAAXA,QAAW,QAAgB;AAAA,MAAdC,QAAc,SAAdA,QAAc;AAC/B,MAAI,CAACA,QAAQ,CAACC,MAAd,EAAsB,OAAO,IAAP;AACtB,sBACE;AAAI,IAAA,SAAS,EAAC;AAAd,KACGD,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD;AAAA,wBACZ;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACP;AAAjB,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEO,OAAO,CAACP,QAAxB;AAAkC,MAAA,OAAO,EAAEO,OAAO,CAACN;AAAnD,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEM,OAAO,CAACC;AAA5B,MAFF,CADY;AAAA,GAAb,CADH,CADF;AAUD,CAZD;;IAcMC,S;;;;;;;;;;;;;6BACK;AACP,UAAMC,UAAU,GAAGf,UAAU,CAACgB,iBAA9B;AACA,UAAMP,QAAQ,GAAGM,UAAU,GACvBZ,MAAM,CACJ,KAAKc,KAAL,CAAWC,UADP,EAEJH,UAAU,CAACI,QAFP,EAGJJ,UAAU,CAACK,GAHP,EAIJpB,UAAU,CAACqB,gBAJP,CADiB,GAOvBlB,MAAM,CACJ,KAAKc,KAAL,CAAWC,UADP,EAEJI,SAFI,EAGJA,SAHI,EAIJtB,UAAU,CAACqB,gBAJP,CAPV;AAcA,0BAAO,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEZ;AAApB,QAAP;AACD;;;;EAlBqBX,KAAK,CAACyB,S;;AAqB9BC,MAAM,CAACC,OAAP,GAAiBX,SAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/nav/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\nconst siteConfig = require(`${process.cwd()}/siteConfig.js`);\nconst {getTOC} = require('../toc');\n\nconst Link = ({hashLink, content}) => (\n  <a\n    href={`#${hashLink}`}\n    dangerouslySetInnerHTML={{\n      __html: content,\n    }}\n  />\n);\n\nconst Headings = ({headings}) => {\n  if (!headings.length) return null;\n  return (\n    <ul className=\"toc-headings\">\n      {headings.map((heading) => (\n        <li key={heading.hashLink}>\n          <Link hashLink={heading.hashLink} content={heading.content} />\n          <Headings headings={heading.children} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nclass OnPageNav extends React.Component {\n  render() {\n    const customTags = siteConfig.onPageNavHeadings;\n    const headings = customTags\n      ? getTOC(\n          this.props.rawContent,\n          customTags.topLevel,\n          customTags.sub,\n          siteConfig.slugPreprocessor,\n        )\n      : getTOC(\n          this.props.rawContent,\n          undefined,\n          undefined,\n          siteConfig.slugPreprocessor,\n        );\n\n    return <Headings headings={headings} />;\n  }\n}\n\nmodule.exports = OnPageNav;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1596460761000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPageLayout.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPageLayout.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPageLayout.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPageLayout.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "BlogPageLayout.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar BlogPost = require('./BlogPost.js');\n\nvar BlogSidebar = require('./BlogSidebar.js');\n\nvar Container = require('./Container.js');\n\nvar MetadataBlog = require('./MetadataBlog.js');\n\nvar MetadataPublicBlog = process.env.NODE_ENV === 'development' ? MetadataBlog : MetadataBlog.filter(function (item) {\n  return !item.unlisted;\n});\n\nvar Site = require('./Site.js');\n\nvar utils = require('./utils.js'); // used to generate entire blog pages, i.e. collection of truncated blog posts\n\n\nvar BlogPageLayout = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlogPageLayout, _React$Component);\n\n  var _super = _createSuper(BlogPageLayout);\n\n  function BlogPageLayout() {\n    _classCallCheck(this, BlogPageLayout);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlogPageLayout, [{\n    key: \"getPageURL\",\n    value: function getPageURL(page) {\n      var url = \"\".concat(this.props.config.baseUrl, \"blog/\");\n\n      if (page > 0) {\n        url += \"page\".concat(page + 1, \"/\");\n      }\n\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var perPage = this.props.metadata.perPage;\n      var page = this.props.metadata.page;\n      return /*#__PURE__*/React.createElement(Site, {\n        title: \"Blog\",\n        language: \"en\",\n        config: this.props.config,\n        className: \"blog\",\n        metadata: {\n          blog: true,\n          blogListing: true\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docMainWrapper wrapper\"\n      }, /*#__PURE__*/React.createElement(BlogSidebar, {\n        language: this.props.language,\n        config: this.props.config\n      }), /*#__PURE__*/React.createElement(Container, {\n        className: \"mainContainer postContainer blogContainer\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"posts\"\n      }, MetadataPublicBlog.slice(page * perPage, (page + 1) * perPage).map(function (post) {\n        return /*#__PURE__*/React.createElement(BlogPost, {\n          post: post,\n          content: post.content,\n          truncate: true,\n          key: utils.getPath(post.path, _this.props.config.cleanUrl) + post.title,\n          config: _this.props.config\n        });\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docs-prevnext\"\n      }, page > 0 && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"docs-prev\",\n        href: this.getPageURL(page - 1)\n      }, \"\\u2190 Prev\"), MetadataPublicBlog.length > (page + 1) * perPage && /*#__PURE__*/React.createElement(\"a\", {\n        className: \"docs-next\",\n        href: this.getPageURL(page + 1)\n      }, \"Next \\u2192\"))))));\n    }\n  }]);\n\n  return BlogPageLayout;\n}(React.Component);\n\nmodule.exports = BlogPageLayout;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJsb2dQYWdlTGF5b3V0LmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIkJsb2dQb3N0IiwiQmxvZ1NpZGViYXIiLCJDb250YWluZXIiLCJNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YVB1YmxpY0Jsb2ciLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJmaWx0ZXIiLCJpdGVtIiwidW5saXN0ZWQiLCJTaXRlIiwidXRpbHMiLCJCbG9nUGFnZUxheW91dCIsInBhZ2UiLCJ1cmwiLCJwcm9wcyIsImNvbmZpZyIsImJhc2VVcmwiLCJwZXJQYWdlIiwibWV0YWRhdGEiLCJibG9nIiwiYmxvZ0xpc3RpbmciLCJsYW5ndWFnZSIsInNsaWNlIiwibWFwIiwicG9zdCIsImNvbnRlbnQiLCJnZXRQYXRoIiwicGF0aCIsImNsZWFuVXJsIiwidGl0bGUiLCJnZXRQYWdlVVJMIiwibGVuZ3RoIiwiQ29tcG9uZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxJQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxlQUFELENBQXhCOztBQUNBLElBQU1FLFdBQVcsR0FBR0YsT0FBTyxDQUFDLGtCQUFELENBQTNCOztBQUNBLElBQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLGdCQUFELENBQXpCOztBQUNBLElBQU1JLFlBQVksR0FBR0osT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLElBQU1LLGtCQUFrQixHQUN0QkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBekIsR0FDSUosWUFESixHQUVJQSxZQUFZLENBQUNLLE1BQWIsQ0FBb0IsVUFBQ0MsSUFBRDtBQUFBLFNBQVUsQ0FBQ0EsSUFBSSxDQUFDQyxRQUFoQjtBQUFBLENBQXBCLENBSE47O0FBSUEsSUFBTUMsSUFBSSxHQUFHWixPQUFPLENBQUMsV0FBRCxDQUFwQjs7QUFDQSxJQUFNYSxLQUFLLEdBQUdiLE9BQU8sQ0FBQyxZQUFELENBQXJCLEMsQ0FFQTs7O0lBQ01jLGM7Ozs7Ozs7Ozs7Ozs7K0JBQ09DLEksRUFBTTtBQUNmLFVBQUlDLEdBQUcsYUFBTSxLQUFLQyxLQUFMLENBQVdDLE1BQVgsQ0FBa0JDLE9BQXhCLFVBQVA7O0FBQ0EsVUFBSUosSUFBSSxHQUFHLENBQVgsRUFBYztBQUNaQyxRQUFBQSxHQUFHLGtCQUFXRCxJQUFJLEdBQUcsQ0FBbEIsTUFBSDtBQUNEOztBQUNELGFBQU9DLEdBQVA7QUFDRDs7OzZCQUVRO0FBQUE7O0FBQ1AsVUFBTUksT0FBTyxHQUFHLEtBQUtILEtBQUwsQ0FBV0ksUUFBWCxDQUFvQkQsT0FBcEM7QUFDQSxVQUFNTCxJQUFJLEdBQUcsS0FBS0UsS0FBTCxDQUFXSSxRQUFYLENBQW9CTixJQUFqQztBQUNBLDBCQUNFLG9CQUFDLElBQUQ7QUFDRSxRQUFBLEtBQUssRUFBQyxNQURSO0FBRUUsUUFBQSxRQUFRLEVBQUMsSUFGWDtBQUdFLFFBQUEsTUFBTSxFQUFFLEtBQUtFLEtBQUwsQ0FBV0MsTUFIckI7QUFJRSxRQUFBLFNBQVMsRUFBQyxNQUpaO0FBS0UsUUFBQSxRQUFRLEVBQUU7QUFBQ0ksVUFBQUEsSUFBSSxFQUFFLElBQVA7QUFBYUMsVUFBQUEsV0FBVyxFQUFFO0FBQTFCO0FBTFosc0JBTUU7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLHNCQUNFLG9CQUFDLFdBQUQ7QUFDRSxRQUFBLFFBQVEsRUFBRSxLQUFLTixLQUFMLENBQVdPLFFBRHZCO0FBRUUsUUFBQSxNQUFNLEVBQUUsS0FBS1AsS0FBTCxDQUFXQztBQUZyQixRQURGLGVBS0Usb0JBQUMsU0FBRDtBQUFXLFFBQUEsU0FBUyxFQUFDO0FBQXJCLHNCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUM7QUFBZixTQUNHYixrQkFBa0IsQ0FBQ29CLEtBQW5CLENBQ0NWLElBQUksR0FBR0ssT0FEUixFQUVDLENBQUNMLElBQUksR0FBRyxDQUFSLElBQWFLLE9BRmQsRUFHQ00sR0FIRCxDQUdLLFVBQUNDLElBQUQ7QUFBQSw0QkFDSixvQkFBQyxRQUFEO0FBQ0UsVUFBQSxJQUFJLEVBQUVBLElBRFI7QUFFRSxVQUFBLE9BQU8sRUFBRUEsSUFBSSxDQUFDQyxPQUZoQjtBQUdFLFVBQUEsUUFBUSxNQUhWO0FBSUUsVUFBQSxHQUFHLEVBQ0RmLEtBQUssQ0FBQ2dCLE9BQU4sQ0FBY0YsSUFBSSxDQUFDRyxJQUFuQixFQUF5QixLQUFJLENBQUNiLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQmEsUUFBM0MsSUFDQUosSUFBSSxDQUFDSyxLQU5UO0FBUUUsVUFBQSxNQUFNLEVBQUUsS0FBSSxDQUFDZixLQUFMLENBQVdDO0FBUnJCLFVBREk7QUFBQSxPQUhMLENBREgsZUFnQkU7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLFNBQ0dILElBQUksR0FBRyxDQUFQLGlCQUNDO0FBQUcsUUFBQSxTQUFTLEVBQUMsV0FBYjtBQUF5QixRQUFBLElBQUksRUFBRSxLQUFLa0IsVUFBTCxDQUFnQmxCLElBQUksR0FBRyxDQUF2QjtBQUEvQix1QkFGSixFQU1HVixrQkFBa0IsQ0FBQzZCLE1BQW5CLEdBQTRCLENBQUNuQixJQUFJLEdBQUcsQ0FBUixJQUFhSyxPQUF6QyxpQkFDQztBQUFHLFFBQUEsU0FBUyxFQUFDLFdBQWI7QUFBeUIsUUFBQSxJQUFJLEVBQUUsS0FBS2EsVUFBTCxDQUFnQmxCLElBQUksR0FBRyxDQUF2QjtBQUEvQix1QkFQSixDQWhCRixDQURGLENBTEYsQ0FORixDQURGO0FBOENEOzs7O0VBMUQwQmhCLEtBQUssQ0FBQ29DLFM7O0FBNkRuQ0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCdkIsY0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgQmxvZ1Bvc3QgPSByZXF1aXJlKCcuL0Jsb2dQb3N0LmpzJyk7XG5jb25zdCBCbG9nU2lkZWJhciA9IHJlcXVpcmUoJy4vQmxvZ1NpZGViYXIuanMnKTtcbmNvbnN0IENvbnRhaW5lciA9IHJlcXVpcmUoJy4vQ29udGFpbmVyLmpzJyk7XG5jb25zdCBNZXRhZGF0YUJsb2cgPSByZXF1aXJlKCcuL01ldGFkYXRhQmxvZy5qcycpO1xuXG5jb25zdCBNZXRhZGF0YVB1YmxpY0Jsb2cgPVxuICBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50J1xuICAgID8gTWV0YWRhdGFCbG9nXG4gICAgOiBNZXRhZGF0YUJsb2cuZmlsdGVyKChpdGVtKSA9PiAhaXRlbS51bmxpc3RlZCk7XG5jb25zdCBTaXRlID0gcmVxdWlyZSgnLi9TaXRlLmpzJyk7XG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMuanMnKTtcblxuLy8gdXNlZCB0byBnZW5lcmF0ZSBlbnRpcmUgYmxvZyBwYWdlcywgaS5lLiBjb2xsZWN0aW9uIG9mIHRydW5jYXRlZCBibG9nIHBvc3RzXG5jbGFzcyBCbG9nUGFnZUxheW91dCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGdldFBhZ2VVUkwocGFnZSkge1xuICAgIGxldCB1cmwgPSBgJHt0aGlzLnByb3BzLmNvbmZpZy5iYXNlVXJsfWJsb2cvYDtcbiAgICBpZiAocGFnZSA+IDApIHtcbiAgICAgIHVybCArPSBgcGFnZSR7cGFnZSArIDF9L2A7XG4gICAgfVxuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgcGVyUGFnZSA9IHRoaXMucHJvcHMubWV0YWRhdGEucGVyUGFnZTtcbiAgICBjb25zdCBwYWdlID0gdGhpcy5wcm9wcy5tZXRhZGF0YS5wYWdlO1xuICAgIHJldHVybiAoXG4gICAgICA8U2l0ZVxuICAgICAgICB0aXRsZT1cIkJsb2dcIlxuICAgICAgICBsYW5ndWFnZT1cImVuXCJcbiAgICAgICAgY29uZmlnPXt0aGlzLnByb3BzLmNvbmZpZ31cbiAgICAgICAgY2xhc3NOYW1lPVwiYmxvZ1wiXG4gICAgICAgIG1ldGFkYXRhPXt7YmxvZzogdHJ1ZSwgYmxvZ0xpc3Rpbmc6IHRydWV9fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkb2NNYWluV3JhcHBlciB3cmFwcGVyXCI+XG4gICAgICAgICAgPEJsb2dTaWRlYmFyXG4gICAgICAgICAgICBsYW5ndWFnZT17dGhpcy5wcm9wcy5sYW5ndWFnZX1cbiAgICAgICAgICAgIGNvbmZpZz17dGhpcy5wcm9wcy5jb25maWd9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cIm1haW5Db250YWluZXIgcG9zdENvbnRhaW5lciBibG9nQ29udGFpbmVyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInBvc3RzXCI+XG4gICAgICAgICAgICAgIHtNZXRhZGF0YVB1YmxpY0Jsb2cuc2xpY2UoXG4gICAgICAgICAgICAgICAgcGFnZSAqIHBlclBhZ2UsXG4gICAgICAgICAgICAgICAgKHBhZ2UgKyAxKSAqIHBlclBhZ2UsXG4gICAgICAgICAgICAgICkubWFwKChwb3N0KSA9PiAoXG4gICAgICAgICAgICAgICAgPEJsb2dQb3N0XG4gICAgICAgICAgICAgICAgICBwb3N0PXtwb3N0fVxuICAgICAgICAgICAgICAgICAgY29udGVudD17cG9zdC5jb250ZW50fVxuICAgICAgICAgICAgICAgICAgdHJ1bmNhdGVcbiAgICAgICAgICAgICAgICAgIGtleT17XG4gICAgICAgICAgICAgICAgICAgIHV0aWxzLmdldFBhdGgocG9zdC5wYXRoLCB0aGlzLnByb3BzLmNvbmZpZy5jbGVhblVybCkgK1xuICAgICAgICAgICAgICAgICAgICBwb3N0LnRpdGxlXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBjb25maWc9e3RoaXMucHJvcHMuY29uZmlnfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRvY3MtcHJldm5leHRcIj5cbiAgICAgICAgICAgICAgICB7cGFnZSA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiZG9jcy1wcmV2XCIgaHJlZj17dGhpcy5nZXRQYWdlVVJMKHBhZ2UgLSAxKX0+XG4gICAgICAgICAgICAgICAgICAgIOKGkCBQcmV2XG4gICAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICB7TWV0YWRhdGFQdWJsaWNCbG9nLmxlbmd0aCA+IChwYWdlICsgMSkgKiBwZXJQYWdlICYmIChcbiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImRvY3MtbmV4dFwiIGhyZWY9e3RoaXMuZ2V0UGFnZVVSTChwYWdlICsgMSl9PlxuICAgICAgICAgICAgICAgICAgICBOZXh0IOKGklxuICAgICAgICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9Db250YWluZXI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9TaXRlPlxuICAgICk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCbG9nUGFnZUxheW91dDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "BlogPageLayout.js"
      ],
      "names": [
        "React",
        "require",
        "BlogPost",
        "BlogSidebar",
        "Container",
        "MetadataBlog",
        "MetadataPublicBlog",
        "process",
        "env",
        "NODE_ENV",
        "filter",
        "item",
        "unlisted",
        "Site",
        "utils",
        "BlogPageLayout",
        "page",
        "url",
        "props",
        "config",
        "baseUrl",
        "perPage",
        "metadata",
        "blog",
        "blogListing",
        "language",
        "slice",
        "map",
        "post",
        "content",
        "getPath",
        "path",
        "cleanUrl",
        "title",
        "getPageURL",
        "length",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAME,WAAW,GAAGF,OAAO,CAAC,kBAAD,CAA3B;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAMI,YAAY,GAAGJ,OAAO,CAAC,mBAAD,CAA5B;;AAEA,IAAMK,kBAAkB,GACtBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIJ,YADJ,GAEIA,YAAY,CAACK,MAAb,CAAoB,UAACC,IAAD;AAAA,SAAU,CAACA,IAAI,CAACC,QAAhB;AAAA,CAApB,CAHN;;AAIA,IAAMC,IAAI,GAAGZ,OAAO,CAAC,WAAD,CAApB;;AACA,IAAMa,KAAK,GAAGb,OAAO,CAAC,YAAD,CAArB,C,CAEA;;;IACMc,c;;;;;;;;;;;;;+BACOC,I,EAAM;AACf,UAAIC,GAAG,aAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,OAAxB,UAAP;;AACA,UAAIJ,IAAI,GAAG,CAAX,EAAc;AACZC,QAAAA,GAAG,kBAAWD,IAAI,GAAG,CAAlB,MAAH;AACD;;AACD,aAAOC,GAAP;AACD;;;6BAEQ;AAAA;;AACP,UAAMI,OAAO,GAAG,KAAKH,KAAL,CAAWI,QAAX,CAAoBD,OAApC;AACA,UAAML,IAAI,GAAG,KAAKE,KAAL,CAAWI,QAAX,CAAoBN,IAAjC;AACA,0BACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,QAAQ,EAAC,IAFX;AAGE,QAAA,MAAM,EAAE,KAAKE,KAAL,CAAWC,MAHrB;AAIE,QAAA,SAAS,EAAC,MAJZ;AAKE,QAAA,QAAQ,EAAE;AAACI,UAAAA,IAAI,EAAE,IAAP;AAAaC,UAAAA,WAAW,EAAE;AAA1B;AALZ,sBAME;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QADvB;AAEE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC;AAFrB,QADF,eAKE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGb,kBAAkB,CAACoB,KAAnB,CACCV,IAAI,GAAGK,OADR,EAEC,CAACL,IAAI,GAAG,CAAR,IAAaK,OAFd,EAGCM,GAHD,CAGK,UAACC,IAAD;AAAA,4BACJ,oBAAC,QAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,OAAO,EAAEA,IAAI,CAACC,OAFhB;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,GAAG,EACDf,KAAK,CAACgB,OAAN,CAAcF,IAAI,CAACG,IAAnB,EAAyB,KAAI,CAACb,KAAL,CAAWC,MAAX,CAAkBa,QAA3C,IACAJ,IAAI,CAACK,KANT;AAQE,UAAA,MAAM,EAAE,KAAI,CAACf,KAAL,CAAWC;AARrB,UADI;AAAA,OAHL,CADH,eAgBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGH,IAAI,GAAG,CAAP,iBACC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAyB,QAAA,IAAI,EAAE,KAAKkB,UAAL,CAAgBlB,IAAI,GAAG,CAAvB;AAA/B,uBAFJ,EAMGV,kBAAkB,CAAC6B,MAAnB,GAA4B,CAACnB,IAAI,GAAG,CAAR,IAAaK,OAAzC,iBACC;AAAG,QAAA,SAAS,EAAC,WAAb;AAAyB,QAAA,IAAI,EAAE,KAAKa,UAAL,CAAgBlB,IAAI,GAAG,CAAvB;AAA/B,uBAPJ,CAhBF,CADF,CALF,CANF,CADF;AA8CD;;;;EA1D0BhB,KAAK,CAACoC,S;;AA6DnCC,MAAM,CAACC,OAAP,GAAiBvB,cAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst BlogPost = require('./BlogPost.js');\nconst BlogSidebar = require('./BlogSidebar.js');\nconst Container = require('./Container.js');\nconst MetadataBlog = require('./MetadataBlog.js');\n\nconst MetadataPublicBlog =\n  process.env.NODE_ENV === 'development'\n    ? MetadataBlog\n    : MetadataBlog.filter((item) => !item.unlisted);\nconst Site = require('./Site.js');\nconst utils = require('./utils.js');\n\n// used to generate entire blog pages, i.e. collection of truncated blog posts\nclass BlogPageLayout extends React.Component {\n  getPageURL(page) {\n    let url = `${this.props.config.baseUrl}blog/`;\n    if (page > 0) {\n      url += `page${page + 1}/`;\n    }\n    return url;\n  }\n\n  render() {\n    const perPage = this.props.metadata.perPage;\n    const page = this.props.metadata.page;\n    return (\n      <Site\n        title=\"Blog\"\n        language=\"en\"\n        config={this.props.config}\n        className=\"blog\"\n        metadata={{blog: true, blogListing: true}}>\n        <div className=\"docMainWrapper wrapper\">\n          <BlogSidebar\n            language={this.props.language}\n            config={this.props.config}\n          />\n          <Container className=\"mainContainer postContainer blogContainer\">\n            <div className=\"posts\">\n              {MetadataPublicBlog.slice(\n                page * perPage,\n                (page + 1) * perPage,\n              ).map((post) => (\n                <BlogPost\n                  post={post}\n                  content={post.content}\n                  truncate\n                  key={\n                    utils.getPath(post.path, this.props.config.cleanUrl) +\n                    post.title\n                  }\n                  config={this.props.config}\n                />\n              ))}\n              <div className=\"docs-prevnext\">\n                {page > 0 && (\n                  <a className=\"docs-prev\" href={this.getPageURL(page - 1)}>\n                    ← Prev\n                  </a>\n                )}\n                {MetadataPublicBlog.length > (page + 1) * perPage && (\n                  <a className=\"docs-next\" href={this.getPageURL(page + 1)}>\n                    Next →\n                  </a>\n                )}\n              </div>\n            </div>\n          </Container>\n        </div>\n      </Site>\n    );\n  }\n}\n\nmodule.exports = BlogPageLayout;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPost.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPost.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPost.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogPost.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "BlogPost.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar MarkdownBlock = require('./MarkdownBlock.js');\n\nvar utils = require('./utils.js'); // inner blog component for the article itself, without sidebar/header/footer\n\n\nvar BlogPost = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlogPost, _React$Component);\n\n  var _super = _createSuper(BlogPost);\n\n  function BlogPost() {\n    _classCallCheck(this, BlogPost);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlogPost, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (this.props.truncate) {\n        return /*#__PURE__*/React.createElement(\"article\", {\n          className: \"post-content\"\n        }, /*#__PURE__*/React.createElement(MarkdownBlock, null, utils.extractBlogPostBeforeTruncate(this.props.content)), utils.blogPostHasTruncateMarker(this.props.content) && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"read-more\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"button\",\n          href: \"\".concat(this.props.config.baseUrl, \"blog/\").concat(utils.getPath(this.props.post.path, this.props.config.cleanUrl))\n        }, \"Read More\")));\n      }\n\n      return /*#__PURE__*/React.createElement(MarkdownBlock, null, this.props.content);\n    }\n  }, {\n    key: \"renderAuthorPhoto\",\n    value: function renderAuthorPhoto() {\n      var post = this.props.post;\n      var className = \"authorPhoto\".concat(post.author && post.authorTitle ? ' authorPhotoBig' : '');\n\n      if (post.authorFBID || post.authorImageURL) {\n        var authorImageURL = post.authorFBID ? \"https://graph.facebook.com/\".concat(post.authorFBID, \"/picture/?height=200&width=200\") : post.authorImageURL;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: className\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: post.authorURL,\n          target: \"_blank\",\n          rel: \"noreferrer noopener\"\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: authorImageURL,\n          alt: post.author\n        })));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var post = this.props.post;\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"postHeaderTitle\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"\".concat(this.props.config.baseUrl, \"blog/\").concat(utils.getPath(post.path, this.props.config.cleanUrl))\n      }, post.title));\n    }\n  }, {\n    key: \"renderPostHeader\",\n    value: function renderPostHeader() {\n      var post = this.props.post;\n      var match = post.path.match(/([0-9]+)\\/([0-9]+)\\/([0-9]+)/); // Because JavaScript sucks at date handling :(\n\n      var year = match[1];\n      var month = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][parseInt(match[2], 10) - 1];\n      var day = parseInt(match[3], 10);\n      return /*#__PURE__*/React.createElement(\"header\", {\n        className: \"postHeader\"\n      }, this.renderTitle(), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"post-meta\"\n      }, month, \" \", day, \", \", year), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"authorBlock\"\n      }, post.author ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"post-authorName\"\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: post.authorURL,\n        target: \"_blank\",\n        rel: \"noreferrer noopener\"\n      }, post.author), post.authorTitle) : null, this.renderAuthorPhoto()));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"post\"\n      }, this.renderPostHeader(), this.renderContent());\n    }\n  }]);\n\n  return BlogPost;\n}(React.Component);\n\nmodule.exports = BlogPost;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "BlogPost.js"
      ],
      "names": [
        "React",
        "require",
        "MarkdownBlock",
        "utils",
        "BlogPost",
        "props",
        "truncate",
        "extractBlogPostBeforeTruncate",
        "content",
        "blogPostHasTruncateMarker",
        "config",
        "baseUrl",
        "getPath",
        "post",
        "path",
        "cleanUrl",
        "className",
        "author",
        "authorTitle",
        "authorFBID",
        "authorImageURL",
        "authorURL",
        "title",
        "match",
        "year",
        "month",
        "parseInt",
        "day",
        "renderTitle",
        "renderAuthorPhoto",
        "renderPostHeader",
        "renderContent",
        "Component",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\nconst MarkdownBlock = require('./MarkdownBlock.js');\nconst utils = require('./utils.js');\n\n// inner blog component for the article itself, without sidebar/header/footer\nclass BlogPost extends React.Component {\n  renderContent() {\n    if (this.props.truncate) {\n      return (\n        <article className=\"post-content\">\n          <MarkdownBlock>\n            {utils.extractBlogPostBeforeTruncate(this.props.content)}\n          </MarkdownBlock>\n          {utils.blogPostHasTruncateMarker(this.props.content) && (\n            <div className=\"read-more\">\n              <a\n                className=\"button\"\n                href={`${this.props.config.baseUrl}blog/${utils.getPath(\n                  this.props.post.path,\n                  this.props.config.cleanUrl,\n                )}`}>\n                Read More\n              </a>\n            </div>\n          )}\n        </article>\n      );\n    }\n    return <MarkdownBlock>{this.props.content}</MarkdownBlock>;\n  }\n\n  renderAuthorPhoto() {\n    const post = this.props.post;\n    const className = `authorPhoto${\n      post.author && post.authorTitle ? ' authorPhotoBig' : ''\n    }`;\n    if (post.authorFBID || post.authorImageURL) {\n      const authorImageURL = post.authorFBID\n        ? `https://graph.facebook.com/${post.authorFBID}/picture/?height=200&width=200`\n        : post.authorImageURL;\n      return (\n        <div className={className}>\n          <a href={post.authorURL} target=\"_blank\" rel=\"noreferrer noopener\">\n            <img src={authorImageURL} alt={post.author} />\n          </a>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderTitle() {\n    const post = this.props.post;\n    return (\n      <h1 className=\"postHeaderTitle\">\n        <a\n          href={`${this.props.config.baseUrl}blog/${utils.getPath(\n            post.path,\n            this.props.config.cleanUrl,\n          )}`}>\n          {post.title}\n        </a>\n      </h1>\n    );\n  }\n\n  renderPostHeader() {\n    const post = this.props.post;\n    const match = post.path.match(/([0-9]+)\\/([0-9]+)\\/([0-9]+)/);\n    // Because JavaScript sucks at date handling :(\n    const year = match[1];\n    const month = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ][parseInt(match[2], 10) - 1];\n    const day = parseInt(match[3], 10);\n\n    return (\n      <header className=\"postHeader\">\n        {this.renderTitle()}\n        <p className=\"post-meta\">\n          {month} {day}, {year}\n        </p>\n        <div className=\"authorBlock\">\n          {post.author ? (\n            <p className=\"post-authorName\">\n              <a\n                href={post.authorURL}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\">\n                {post.author}\n              </a>\n              {post.authorTitle}\n            </p>\n          ) : null}\n          {this.renderAuthorPhoto()}\n        </div>\n      </header>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"post\">\n        {this.renderPostHeader()}\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nmodule.exports = BlogPost;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogSidebar.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogSidebar.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogSidebar.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/BlogSidebar.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "BlogSidebar.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar SideNav = require('./nav/SideNav.js');\n\nvar MetadataBlog = require('./MetadataBlog.js');\n\nvar MetadataPublicBlog = process.env.NODE_ENV === 'development' ? MetadataBlog : MetadataBlog.filter(function (item) {\n  return !item.unlisted;\n});\n\nvar BlogSidebar = /*#__PURE__*/function (_React$Component) {\n  _inherits(BlogSidebar, _React$Component);\n\n  var _super = _createSuper(BlogSidebar);\n\n  function BlogSidebar() {\n    _classCallCheck(this, BlogSidebar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BlogSidebar, [{\n    key: \"render\",\n    value: function render() {\n      var blogSidebarCount = 5;\n      var blogSidebarTitleConfig = this.props.config.blogSidebarTitle || {};\n      var blogSidebarTitle = blogSidebarTitleConfig[\"default\"] || 'Recent Posts';\n\n      if (this.props.config.blogSidebarCount) {\n        if (this.props.config.blogSidebarCount === 'ALL') {\n          blogSidebarCount = MetadataPublicBlog.length;\n          blogSidebarTitle = blogSidebarTitleConfig.all || 'All Blog Posts';\n        } else {\n          blogSidebarCount = this.props.config.blogSidebarCount;\n        }\n      }\n\n      var contents = [{\n        type: 'CATEGORY',\n        title: blogSidebarTitle,\n        children: MetadataPublicBlog.slice(0, blogSidebarCount).map(function (item) {\n          return {\n            type: 'LINK',\n            item: item\n          };\n        })\n      }];\n      var title = this.props.current && this.props.current.title;\n      var current = {\n        id: title || '',\n        category: blogSidebarTitle\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"docsNavContainer\",\n        id: \"docsNav\"\n      }, /*#__PURE__*/React.createElement(SideNav, {\n        language: this.props.language,\n        root: \"\".concat(this.props.config.baseUrl, \"blog/\"),\n        title: \"Blog\",\n        contents: contents,\n        current: current\n      }));\n    }\n  }]);\n\n  return BlogSidebar;\n}(React.Component);\n\nmodule.exports = BlogSidebar;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJsb2dTaWRlYmFyLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlNpZGVOYXYiLCJNZXRhZGF0YUJsb2ciLCJNZXRhZGF0YVB1YmxpY0Jsb2ciLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJmaWx0ZXIiLCJpdGVtIiwidW5saXN0ZWQiLCJCbG9nU2lkZWJhciIsImJsb2dTaWRlYmFyQ291bnQiLCJibG9nU2lkZWJhclRpdGxlQ29uZmlnIiwicHJvcHMiLCJjb25maWciLCJibG9nU2lkZWJhclRpdGxlIiwibGVuZ3RoIiwiYWxsIiwiY29udGVudHMiLCJ0eXBlIiwidGl0bGUiLCJjaGlsZHJlbiIsInNsaWNlIiwibWFwIiwiY3VycmVudCIsImlkIiwiY2F0ZWdvcnkiLCJsYW5ndWFnZSIsImJhc2VVcmwiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUVBLElBQU1FLFlBQVksR0FBR0YsT0FBTyxDQUFDLG1CQUFELENBQTVCOztBQUVBLElBQU1HLGtCQUFrQixHQUN0QkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsYUFBekIsR0FDSUosWUFESixHQUVJQSxZQUFZLENBQUNLLE1BQWIsQ0FBb0IsVUFBQ0MsSUFBRDtBQUFBLFNBQVUsQ0FBQ0EsSUFBSSxDQUFDQyxRQUFoQjtBQUFBLENBQXBCLENBSE47O0lBS01DLFc7Ozs7Ozs7Ozs7Ozs7NkJBQ0s7QUFDUCxVQUFJQyxnQkFBZ0IsR0FBRyxDQUF2QjtBQUNBLFVBQU1DLHNCQUFzQixHQUFHLEtBQUtDLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQkMsZ0JBQWxCLElBQXNDLEVBQXJFO0FBQ0EsVUFBSUEsZ0JBQWdCLEdBQUdILHNCQUFzQixXQUF0QixJQUFrQyxjQUF6RDs7QUFDQSxVQUFJLEtBQUtDLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQkgsZ0JBQXRCLEVBQXdDO0FBQ3RDLFlBQUksS0FBS0UsS0FBTCxDQUFXQyxNQUFYLENBQWtCSCxnQkFBbEIsS0FBdUMsS0FBM0MsRUFBa0Q7QUFDaERBLFVBQUFBLGdCQUFnQixHQUFHUixrQkFBa0IsQ0FBQ2EsTUFBdEM7QUFDQUQsVUFBQUEsZ0JBQWdCLEdBQUdILHNCQUFzQixDQUFDSyxHQUF2QixJQUE4QixnQkFBakQ7QUFDRCxTQUhELE1BR087QUFDTE4sVUFBQUEsZ0JBQWdCLEdBQUcsS0FBS0UsS0FBTCxDQUFXQyxNQUFYLENBQWtCSCxnQkFBckM7QUFDRDtBQUNGOztBQUVELFVBQU1PLFFBQVEsR0FBRyxDQUNmO0FBQ0VDLFFBQUFBLElBQUksRUFBRSxVQURSO0FBRUVDLFFBQUFBLEtBQUssRUFBRUwsZ0JBRlQ7QUFHRU0sUUFBQUEsUUFBUSxFQUFFbEIsa0JBQWtCLENBQUNtQixLQUFuQixDQUF5QixDQUF6QixFQUE0QlgsZ0JBQTVCLEVBQThDWSxHQUE5QyxDQUFrRCxVQUFDZixJQUFEO0FBQUEsaUJBQVc7QUFDckVXLFlBQUFBLElBQUksRUFBRSxNQUQrRDtBQUVyRVgsWUFBQUEsSUFBSSxFQUFKQTtBQUZxRSxXQUFYO0FBQUEsU0FBbEQ7QUFIWixPQURlLENBQWpCO0FBVUEsVUFBTVksS0FBSyxHQUFHLEtBQUtQLEtBQUwsQ0FBV1csT0FBWCxJQUFzQixLQUFLWCxLQUFMLENBQVdXLE9BQVgsQ0FBbUJKLEtBQXZEO0FBRUEsVUFBTUksT0FBTyxHQUFHO0FBQ2RDLFFBQUFBLEVBQUUsRUFBRUwsS0FBSyxJQUFJLEVBREM7QUFFZE0sUUFBQUEsUUFBUSxFQUFFWDtBQUZJLE9BQWhCO0FBSUEsMEJBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBQyxrQkFBZjtBQUFrQyxRQUFBLEVBQUUsRUFBQztBQUFyQyxzQkFDRSxvQkFBQyxPQUFEO0FBQ0UsUUFBQSxRQUFRLEVBQUUsS0FBS0YsS0FBTCxDQUFXYyxRQUR2QjtBQUVFLFFBQUEsSUFBSSxZQUFLLEtBQUtkLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQmMsT0FBdkIsVUFGTjtBQUdFLFFBQUEsS0FBSyxFQUFDLE1BSFI7QUFJRSxRQUFBLFFBQVEsRUFBRVYsUUFKWjtBQUtFLFFBQUEsT0FBTyxFQUFFTTtBQUxYLFFBREYsQ0FERjtBQVdEOzs7O0VBekN1QnpCLEtBQUssQ0FBQzhCLFM7O0FBNENoQ0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsV0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3QgU2lkZU5hdiA9IHJlcXVpcmUoJy4vbmF2L1NpZGVOYXYuanMnKTtcblxuY29uc3QgTWV0YWRhdGFCbG9nID0gcmVxdWlyZSgnLi9NZXRhZGF0YUJsb2cuanMnKTtcblxuY29uc3QgTWV0YWRhdGFQdWJsaWNCbG9nID1cbiAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCdcbiAgICA/IE1ldGFkYXRhQmxvZ1xuICAgIDogTWV0YWRhdGFCbG9nLmZpbHRlcigoaXRlbSkgPT4gIWl0ZW0udW5saXN0ZWQpO1xuXG5jbGFzcyBCbG9nU2lkZWJhciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBsZXQgYmxvZ1NpZGViYXJDb3VudCA9IDU7XG4gICAgY29uc3QgYmxvZ1NpZGViYXJUaXRsZUNvbmZpZyA9IHRoaXMucHJvcHMuY29uZmlnLmJsb2dTaWRlYmFyVGl0bGUgfHwge307XG4gICAgbGV0IGJsb2dTaWRlYmFyVGl0bGUgPSBibG9nU2lkZWJhclRpdGxlQ29uZmlnLmRlZmF1bHQgfHwgJ1JlY2VudCBQb3N0cyc7XG4gICAgaWYgKHRoaXMucHJvcHMuY29uZmlnLmJsb2dTaWRlYmFyQ291bnQpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLmNvbmZpZy5ibG9nU2lkZWJhckNvdW50ID09PSAnQUxMJykge1xuICAgICAgICBibG9nU2lkZWJhckNvdW50ID0gTWV0YWRhdGFQdWJsaWNCbG9nLmxlbmd0aDtcbiAgICAgICAgYmxvZ1NpZGViYXJUaXRsZSA9IGJsb2dTaWRlYmFyVGl0bGVDb25maWcuYWxsIHx8ICdBbGwgQmxvZyBQb3N0cyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBibG9nU2lkZWJhckNvdW50ID0gdGhpcy5wcm9wcy5jb25maWcuYmxvZ1NpZGViYXJDb3VudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBjb250ZW50cyA9IFtcbiAgICAgIHtcbiAgICAgICAgdHlwZTogJ0NBVEVHT1JZJyxcbiAgICAgICAgdGl0bGU6IGJsb2dTaWRlYmFyVGl0bGUsXG4gICAgICAgIGNoaWxkcmVuOiBNZXRhZGF0YVB1YmxpY0Jsb2cuc2xpY2UoMCwgYmxvZ1NpZGViYXJDb3VudCkubWFwKChpdGVtKSA9PiAoe1xuICAgICAgICAgIHR5cGU6ICdMSU5LJyxcbiAgICAgICAgICBpdGVtLFxuICAgICAgICB9KSksXG4gICAgICB9LFxuICAgIF07XG4gICAgY29uc3QgdGl0bGUgPSB0aGlzLnByb3BzLmN1cnJlbnQgJiYgdGhpcy5wcm9wcy5jdXJyZW50LnRpdGxlO1xuXG4gICAgY29uc3QgY3VycmVudCA9IHtcbiAgICAgIGlkOiB0aXRsZSB8fCAnJyxcbiAgICAgIGNhdGVnb3J5OiBibG9nU2lkZWJhclRpdGxlLFxuICAgIH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZG9jc05hdkNvbnRhaW5lclwiIGlkPVwiZG9jc05hdlwiPlxuICAgICAgICA8U2lkZU5hdlxuICAgICAgICAgIGxhbmd1YWdlPXt0aGlzLnByb3BzLmxhbmd1YWdlfVxuICAgICAgICAgIHJvb3Q9e2Ake3RoaXMucHJvcHMuY29uZmlnLmJhc2VVcmx9YmxvZy9gfVxuICAgICAgICAgIHRpdGxlPVwiQmxvZ1wiXG4gICAgICAgICAgY29udGVudHM9e2NvbnRlbnRzfVxuICAgICAgICAgIGN1cnJlbnQ9e2N1cnJlbnR9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmxvZ1NpZGViYXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "BlogSidebar.js"
      ],
      "names": [
        "React",
        "require",
        "SideNav",
        "MetadataBlog",
        "MetadataPublicBlog",
        "process",
        "env",
        "NODE_ENV",
        "filter",
        "item",
        "unlisted",
        "BlogSidebar",
        "blogSidebarCount",
        "blogSidebarTitleConfig",
        "props",
        "config",
        "blogSidebarTitle",
        "length",
        "all",
        "contents",
        "type",
        "title",
        "children",
        "slice",
        "map",
        "current",
        "id",
        "category",
        "language",
        "baseUrl",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAAvB;;AAEA,IAAME,YAAY,GAAGF,OAAO,CAAC,mBAAD,CAA5B;;AAEA,IAAMG,kBAAkB,GACtBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIJ,YADJ,GAEIA,YAAY,CAACK,MAAb,CAAoB,UAACC,IAAD;AAAA,SAAU,CAACA,IAAI,CAACC,QAAhB;AAAA,CAApB,CAHN;;IAKMC,W;;;;;;;;;;;;;6BACK;AACP,UAAIC,gBAAgB,GAAG,CAAvB;AACA,UAAMC,sBAAsB,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,gBAAlB,IAAsC,EAArE;AACA,UAAIA,gBAAgB,GAAGH,sBAAsB,WAAtB,IAAkC,cAAzD;;AACA,UAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBH,gBAAtB,EAAwC;AACtC,YAAI,KAAKE,KAAL,CAAWC,MAAX,CAAkBH,gBAAlB,KAAuC,KAA3C,EAAkD;AAChDA,UAAAA,gBAAgB,GAAGR,kBAAkB,CAACa,MAAtC;AACAD,UAAAA,gBAAgB,GAAGH,sBAAsB,CAACK,GAAvB,IAA8B,gBAAjD;AACD,SAHD,MAGO;AACLN,UAAAA,gBAAgB,GAAG,KAAKE,KAAL,CAAWC,MAAX,CAAkBH,gBAArC;AACD;AACF;;AAED,UAAMO,QAAQ,GAAG,CACf;AACEC,QAAAA,IAAI,EAAE,UADR;AAEEC,QAAAA,KAAK,EAAEL,gBAFT;AAGEM,QAAAA,QAAQ,EAAElB,kBAAkB,CAACmB,KAAnB,CAAyB,CAAzB,EAA4BX,gBAA5B,EAA8CY,GAA9C,CAAkD,UAACf,IAAD;AAAA,iBAAW;AACrEW,YAAAA,IAAI,EAAE,MAD+D;AAErEX,YAAAA,IAAI,EAAJA;AAFqE,WAAX;AAAA,SAAlD;AAHZ,OADe,CAAjB;AAUA,UAAMY,KAAK,GAAG,KAAKP,KAAL,CAAWW,OAAX,IAAsB,KAAKX,KAAL,CAAWW,OAAX,CAAmBJ,KAAvD;AAEA,UAAMI,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEL,KAAK,IAAI,EADC;AAEdM,QAAAA,QAAQ,EAAEX;AAFI,OAAhB;AAIA,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,EAAE,EAAC;AAArC,sBACE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWc,QADvB;AAEE,QAAA,IAAI,YAAK,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,OAAvB,UAFN;AAGE,QAAA,KAAK,EAAC,MAHR;AAIE,QAAA,QAAQ,EAAEV,QAJZ;AAKE,QAAA,OAAO,EAAEM;AALX,QADF,CADF;AAWD;;;;EAzCuBzB,KAAK,CAAC8B,S;;AA4ChCC,MAAM,CAACC,OAAP,GAAiBrB,WAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst SideNav = require('./nav/SideNav.js');\n\nconst MetadataBlog = require('./MetadataBlog.js');\n\nconst MetadataPublicBlog =\n  process.env.NODE_ENV === 'development'\n    ? MetadataBlog\n    : MetadataBlog.filter((item) => !item.unlisted);\n\nclass BlogSidebar extends React.Component {\n  render() {\n    let blogSidebarCount = 5;\n    const blogSidebarTitleConfig = this.props.config.blogSidebarTitle || {};\n    let blogSidebarTitle = blogSidebarTitleConfig.default || 'Recent Posts';\n    if (this.props.config.blogSidebarCount) {\n      if (this.props.config.blogSidebarCount === 'ALL') {\n        blogSidebarCount = MetadataPublicBlog.length;\n        blogSidebarTitle = blogSidebarTitleConfig.all || 'All Blog Posts';\n      } else {\n        blogSidebarCount = this.props.config.blogSidebarCount;\n      }\n    }\n\n    const contents = [\n      {\n        type: 'CATEGORY',\n        title: blogSidebarTitle,\n        children: MetadataPublicBlog.slice(0, blogSidebarCount).map((item) => ({\n          type: 'LINK',\n          item,\n        })),\n      },\n    ];\n    const title = this.props.current && this.props.current.title;\n\n    const current = {\n      id: title || '',\n      category: blogSidebarTitle,\n    };\n    return (\n      <div className=\"docsNavContainer\" id=\"docsNav\">\n        <SideNav\n          language={this.props.language}\n          root={`${this.props.config.baseUrl}blog/`}\n          title=\"Blog\"\n          contents={contents}\n          current={current}\n        />\n      </div>\n    );\n  }\n}\n\nmodule.exports = BlogSidebar;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempindex.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempindex.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempindex.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempindex.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/",
        "sourceFileName": "tempindex.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require(\"react\");\n\nvar CompLibrary = require(\"../../core/CompLibrary.js\");\n\nvar MarkdownBlock = CompLibrary.MarkdownBlock;\n/* Used to read markdown */\n\nvar Container = CompLibrary.Container;\nvar GridBlock = CompLibrary.GridBlock;\n\nvar HomeSplash = /*#__PURE__*/function (_React$Component) {\n  _inherits(HomeSplash, _React$Component);\n\n  var _super = _createSuper(HomeSplash);\n\n  function HomeSplash() {\n    _classCallCheck(this, HomeSplash);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HomeSplash, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          siteConfig = _this$props.siteConfig,\n          _this$props$language = _this$props.language,\n          language = _this$props$language === void 0 ? \"\" : _this$props$language;\n      var baseUrl = siteConfig.baseUrl,\n          docsUrl = siteConfig.docsUrl;\n      var docsPart = \"\".concat(docsUrl ? \"\".concat(docsUrl, \"/\") : \"\");\n\n      var docUrl = function docUrl(doc) {\n        return \"\".concat(baseUrl).concat(docsPart).concat(doc);\n      };\n\n      var SplashContainer = function SplashContainer(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"homeContainer\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"homeSplashFade\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper homeWrapper\"\n        }, props.children)));\n      };\n\n      var Logo = function Logo(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"projectLogo\"\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: props.img_src,\n          alt: \"bfc logo\"\n        }));\n      };\n\n      var ProjectTitle = function ProjectTitle(props) {\n        return /*#__PURE__*/React.createElement(\"h2\", {\n          className: \"projectTitle\"\n        }, props.title, /*#__PURE__*/React.createElement(\"small\", null, props.tagline));\n      };\n\n      var PromoSection = function PromoSection(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"section promoSection\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"promoRow\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pluginRowBlock\"\n        }, props.children)));\n      };\n\n      var Button = function Button(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pluginWrapper buttonWrapper\"\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"button\",\n          href: props.href,\n          target: props.target\n        }, props.children));\n      };\n\n      return /*#__PURE__*/React.createElement(SplashContainer, null, /*#__PURE__*/React.createElement(Logo, {\n        img_src: \"\".concat(baseUrl, \"img/logo.png\")\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inner\"\n      }, /*#__PURE__*/React.createElement(ProjectTitle, {\n        tagline: siteConfig.tagline,\n        title: siteConfig.title\n      }), /*#__PURE__*/React.createElement(PromoSection, null, /*#__PURE__*/React.createElement(Button, {\n        href: docUrl(\"getting-started\")\n      }, \"Get Started\"), /*#__PURE__*/React.createElement(Button, {\n        href: \"https://github.com/Wilfred/bfc\"\n      }, \"Source on GitHub\"))));\n    }\n  }]);\n\n  return HomeSplash;\n}(React.Component);\n\nvar Index = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Index, _React$Component2);\n\n  var _super2 = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          siteConfig = _this$props2.config,\n          _this$props2$language = _this$props2.language,\n          language = _this$props2$language === void 0 ? \"\" : _this$props2$language;\n      var baseUrl = siteConfig.baseUrl;\n\n      var Block = function Block(props) {\n        return /*#__PURE__*/React.createElement(Container, {\n          padding: [\"bottom\", \"top\"],\n          id: props.id,\n          background: props.background\n        }, /*#__PURE__*/React.createElement(GridBlock, {\n          contents: props.children,\n          layout: props.layout\n        }));\n      };\n\n      var Optimising = function Optimising() {\n        return /*#__PURE__*/React.createElement(Block, {\n          id: \"try\",\n          background: \"light\"\n        }, [{\n          content: \"bfc uses traditional compiler techniques to reduce runtime and memory usage.\\n\\nbfc includes compile-time evaluation, dead code elimination, and constant folding.\\n\\n[Learn more about optimisations](/docs/optimisations).\",\n          image: \"\".concat(baseUrl, \"img/racing_car.svg\"),\n          imageAlign: \"left\",\n          title: \"a fast compiler for a silly language\"\n        }]);\n      };\n\n      var Overengineered = function Overengineered() {\n        return /*#__PURE__*/React.createElement(Block, {\n          background: \"dark\"\n        }, [{\n          content: \"An elaborate IR with position-preserving optimisations.\\n\\n[Extensive testing](/docs/testing), even testing idempotence and observational equivalence of optimisations.\\n\\nColoured [code diagnostics](/docs/getting-started#diagnostics) with position highlighting.\\n\\nGratuitous website.\",\n          image: \"\".concat(baseUrl, \"img/hammer_wrench.svg\"),\n          imageAlign: \"right\",\n          title: \"utterly over-engineered\"\n        }]);\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(HomeSplash, {\n        siteConfig: siteConfig,\n        language: language\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mainContainer\"\n      }, /*#__PURE__*/React.createElement(Optimising, null), /*#__PURE__*/React.createElement(Overengineered, null)));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nmodule.exports = Index;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "tempindex.js"
      ],
      "names": [
        "React",
        "require",
        "CompLibrary",
        "MarkdownBlock",
        "Container",
        "GridBlock",
        "HomeSplash",
        "props",
        "siteConfig",
        "language",
        "baseUrl",
        "docsUrl",
        "docsPart",
        "docUrl",
        "doc",
        "SplashContainer",
        "children",
        "Logo",
        "img_src",
        "ProjectTitle",
        "title",
        "tagline",
        "PromoSection",
        "Button",
        "href",
        "target",
        "Component",
        "Index",
        "config",
        "Block",
        "id",
        "background",
        "layout",
        "Optimising",
        "content",
        "image",
        "imageAlign",
        "Overengineered",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require(\"react\");\n\nconst CompLibrary = require(\"../../core/CompLibrary.js\");\n\nconst MarkdownBlock = CompLibrary.MarkdownBlock; /* Used to read markdown */\nconst Container = CompLibrary.Container;\nconst GridBlock = CompLibrary.GridBlock;\n\nclass HomeSplash extends React.Component {\n  render() {\n    const { siteConfig, language = \"\" } = this.props;\n    const { baseUrl, docsUrl } = siteConfig;\n    const docsPart = `${docsUrl ? `${docsUrl}/` : \"\"}`;\n    const docUrl = (doc) => `${baseUrl}${docsPart}${doc}`;\n\n    const SplashContainer = (props) => (\n      <div className=\"homeContainer\">\n        <div className=\"homeSplashFade\">\n          <div className=\"wrapper homeWrapper\">{props.children}</div>\n        </div>\n      </div>\n    );\n\n    const Logo = (props) => (\n      <div className=\"projectLogo\">\n        <img src={props.img_src} alt=\"bfc logo\" />\n      </div>\n    );\n\n    const ProjectTitle = (props) => (\n      <h2 className=\"projectTitle\">\n        {props.title}\n        <small>{props.tagline}</small>\n      </h2>\n    );\n\n    const PromoSection = (props) => (\n      <div className=\"section promoSection\">\n        <div className=\"promoRow\">\n          <div className=\"pluginRowBlock\">{props.children}</div>\n        </div>\n      </div>\n    );\n\n    const Button = (props) => (\n      <div className=\"pluginWrapper buttonWrapper\">\n        <a className=\"button\" href={props.href} target={props.target}>\n          {props.children}\n        </a>\n      </div>\n    );\n\n    return (\n      <SplashContainer>\n        <Logo img_src={`${baseUrl}img/logo.png`} />\n        <div className=\"inner\">\n          <ProjectTitle tagline={siteConfig.tagline} title={siteConfig.title} />\n          <PromoSection>\n            <Button href={docUrl(\"getting-started\")}>Get Started</Button>\n            <Button href=\"https://github.com/Wilfred/bfc\">\n              Source on GitHub\n            </Button>\n          </PromoSection>\n        </div>\n      </SplashContainer>\n    );\n  }\n}\n\nclass Index extends React.Component {\n  render() {\n    const { config: siteConfig, language = \"\" } = this.props;\n    const { baseUrl } = siteConfig;\n\n    const Block = (props) => (\n      <Container\n        padding={[\"bottom\", \"top\"]}\n        id={props.id}\n        background={props.background}\n      >\n        <GridBlock\n          contents={props.children}\n          layout={props.layout}\n        />\n      </Container>\n    );\n\n    const Optimising = () => (\n      <Block id=\"try\" background=\"light\">\n        {[\n          {\n            content:\n            \"bfc uses traditional compiler techniques to reduce runtime and memory usage.\\n\\nbfc includes compile-time evaluation, dead code elimination, and constant folding.\\n\\n[Learn more about optimisations](/docs/optimisations).\",\n            image: `${baseUrl}img/racing_car.svg`,\n            imageAlign: \"left\",\n            title: \"a fast compiler for a silly language\",\n          },\n        ]}\n      </Block>\n    );\n\n    const Overengineered = () => (\n      <Block background=\"dark\">\n        {[\n          {\n            content:\n              \"An elaborate IR with position-preserving optimisations.\\n\\n[Extensive testing](/docs/testing), even testing idempotence and observational equivalence of optimisations.\\n\\nColoured [code diagnostics](/docs/getting-started#diagnostics) with position highlighting.\\n\\nGratuitous website.\",\n            image: `${baseUrl}img/hammer_wrench.svg`,\n            imageAlign: \"right\",\n            title: \"utterly over-engineered\",\n          },\n        ]}\n      </Block>\n    );\n\n    return (\n      <div>\n        <HomeSplash siteConfig={siteConfig} language={language} />\n        <div className=\"mainContainer\">\n          <Optimising />\n          <Overengineered />\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = Index;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637396899458
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CompLibrary.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CompLibrary.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CompLibrary.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/CompLibrary.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "CompLibrary.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar MarkdownBlock = require('./MarkdownBlock.js');\n\nvar Container = require('./Container.js');\n\nvar GridBlock = require('./GridBlock.js'); // A collection of components to provide to users\n\n\nmodule.exports = {\n  MarkdownBlock: MarkdownBlock,\n  Container: Container,\n  GridBlock: GridBlock\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbXBMaWJyYXJ5LmpzIl0sIm5hbWVzIjpbIk1hcmtkb3duQmxvY2siLCJyZXF1aXJlIiwiQ29udGFpbmVyIiwiR3JpZEJsb2NrIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxhQUFhLEdBQUdDLE9BQU8sQ0FBQyxvQkFBRCxDQUE3Qjs7QUFDQSxJQUFNQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxnQkFBRCxDQUF6Qjs7QUFDQSxJQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxnQkFBRCxDQUF6QixDLENBRUE7OztBQUNBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkwsRUFBQUEsYUFBYSxFQUFiQSxhQURlO0FBRWZFLEVBQUFBLFNBQVMsRUFBVEEsU0FGZTtBQUdmQyxFQUFBQSxTQUFTLEVBQVRBO0FBSGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9jb3JlLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuY29uc3QgTWFya2Rvd25CbG9jayA9IHJlcXVpcmUoJy4vTWFya2Rvd25CbG9jay5qcycpO1xuY29uc3QgQ29udGFpbmVyID0gcmVxdWlyZSgnLi9Db250YWluZXIuanMnKTtcbmNvbnN0IEdyaWRCbG9jayA9IHJlcXVpcmUoJy4vR3JpZEJsb2NrLmpzJyk7XG5cbi8vIEEgY29sbGVjdGlvbiBvZiBjb21wb25lbnRzIHRvIHByb3ZpZGUgdG8gdXNlcnNcbm1vZHVsZS5leHBvcnRzID0ge1xuICBNYXJrZG93bkJsb2NrLFxuICBDb250YWluZXIsXG4gIEdyaWRCbG9jayxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "CompLibrary.js"
      ],
      "names": [
        "MarkdownBlock",
        "require",
        "Container",
        "GridBlock",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,gBAAD,CAAzB,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,GAAiB;AACfL,EAAAA,aAAa,EAAbA,aADe;AAEfE,EAAAA,SAAS,EAATA,SAFe;AAGfC,EAAAA,SAAS,EAATA;AAHe,CAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst MarkdownBlock = require('./MarkdownBlock.js');\nconst Container = require('./Container.js');\nconst GridBlock = require('./GridBlock.js');\n\n// A collection of components to provide to users\nmodule.exports = {\n  MarkdownBlock,\n  Container,\n  GridBlock,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/GridBlock.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/GridBlock.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/GridBlock.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/GridBlock.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
        "sourceFileName": "GridBlock.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar classNames = require('classnames');\n\nvar MarkdownBlock = require('./MarkdownBlock.js');\n\nvar GridBlock = /*#__PURE__*/function (_React$Component) {\n  _inherits(GridBlock, _React$Component);\n\n  var _super = _createSuper(GridBlock);\n\n  function GridBlock() {\n    _classCallCheck(this, GridBlock);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridBlock, [{\n    key: \"renderBlock\",\n    value: function renderBlock(origBlock) {\n      var blockDefaults = {\n        imageAlign: 'left'\n      };\n\n      var block = _objectSpread(_objectSpread({}, blockDefaults), origBlock);\n\n      var blockClasses = classNames('blockElement', this.props.className, {\n        alignCenter: this.props.align === 'center',\n        alignRight: this.props.align === 'right',\n        fourByGridBlock: this.props.layout === 'fourColumn',\n        imageAlignSide: block.image && (block.imageAlign === 'left' || block.imageAlign === 'right'),\n        imageAlignTop: block.image && block.imageAlign === 'top',\n        imageAlignRight: block.image && block.imageAlign === 'right',\n        imageAlignBottom: block.image && block.imageAlign === 'bottom',\n        imageAlignLeft: block.image && block.imageAlign === 'left',\n        threeByGridBlock: this.props.layout === 'threeColumn',\n        twoByGridBlock: this.props.layout === 'twoColumn'\n      });\n      var topLeftImage = (block.imageAlign === 'top' || block.imageAlign === 'left') && this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n      var bottomRightImage = (block.imageAlign === 'bottom' || block.imageAlign === 'right') && this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: blockClasses,\n        key: block.title\n      }, topLeftImage, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blockContent\"\n      }, this.renderBlockTitle(block.title), /*#__PURE__*/React.createElement(MarkdownBlock, null, block.content)), bottomRightImage);\n    }\n  }, {\n    key: \"renderBlockImage\",\n    value: function renderBlockImage(image, imageLink, imageAlt) {\n      if (!image) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blockImage\"\n      }, imageLink ? /*#__PURE__*/React.createElement(\"a\", {\n        href: imageLink\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: imageAlt\n      })) : /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        alt: imageAlt\n      }));\n    }\n  }, {\n    key: \"renderBlockTitle\",\n    value: function renderBlockTitle(title) {\n      if (!title) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"h2\", null, /*#__PURE__*/React.createElement(MarkdownBlock, null, title));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gridBlock\"\n      }, this.props.contents.map(this.renderBlock, this));\n    }\n  }]);\n\n  return GridBlock;\n}(React.Component);\n\nGridBlock.defaultProps = {\n  align: 'left',\n  contents: [],\n  layout: 'twoColumn'\n};\nmodule.exports = GridBlock;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdyaWRCbG9jay5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJjbGFzc05hbWVzIiwiTWFya2Rvd25CbG9jayIsIkdyaWRCbG9jayIsIm9yaWdCbG9jayIsImJsb2NrRGVmYXVsdHMiLCJpbWFnZUFsaWduIiwiYmxvY2siLCJibG9ja0NsYXNzZXMiLCJwcm9wcyIsImNsYXNzTmFtZSIsImFsaWduQ2VudGVyIiwiYWxpZ24iLCJhbGlnblJpZ2h0IiwiZm91ckJ5R3JpZEJsb2NrIiwibGF5b3V0IiwiaW1hZ2VBbGlnblNpZGUiLCJpbWFnZSIsImltYWdlQWxpZ25Ub3AiLCJpbWFnZUFsaWduUmlnaHQiLCJpbWFnZUFsaWduQm90dG9tIiwiaW1hZ2VBbGlnbkxlZnQiLCJ0aHJlZUJ5R3JpZEJsb2NrIiwidHdvQnlHcmlkQmxvY2siLCJ0b3BMZWZ0SW1hZ2UiLCJyZW5kZXJCbG9ja0ltYWdlIiwiaW1hZ2VMaW5rIiwiaW1hZ2VBbHQiLCJib3R0b21SaWdodEltYWdlIiwidGl0bGUiLCJyZW5kZXJCbG9ja1RpdGxlIiwiY29udGVudCIsImNvbnRlbnRzIiwibWFwIiwicmVuZGVyQmxvY2siLCJDb21wb25lbnQiLCJkZWZhdWx0UHJvcHMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLElBQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O0FBRUEsSUFBTUUsYUFBYSxHQUFHRixPQUFPLENBQUMsb0JBQUQsQ0FBN0I7O0lBRU1HLFM7Ozs7Ozs7Ozs7Ozs7Z0NBQ1FDLFMsRUFBVztBQUNyQixVQUFNQyxhQUFhLEdBQUc7QUFDcEJDLFFBQUFBLFVBQVUsRUFBRTtBQURRLE9BQXRCOztBQUlBLFVBQU1DLEtBQUssbUNBQ05GLGFBRE0s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LDBCQUNFLDZDQUNFLG9CQUFDLGFBQUQsUUFBZ0JBLEtBQWhCLENBREYsQ0FERjtBQUtEOzs7NkJBRVE7QUFDUCwwQkFDRTtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsU0FDRyxLQUFLcEIsS0FBTCxDQUFXdUIsUUFBWCxDQUFvQkMsR0FBcEIsQ0FBd0IsS0FBS0MsV0FBN0IsRUFBMEMsSUFBMUMsQ0FESCxDQURGO0FBS0Q7Ozs7RUFsRnFCbkMsS0FBSyxDQUFDb0MsUzs7QUFxRjlCaEMsU0FBUyxDQUFDaUMsWUFBVixHQUF5QjtBQUN2QnhCLEVBQUFBLEtBQUssRUFBRSxNQURnQjtBQUV2Qm9CLEVBQUFBLFFBQVEsRUFBRSxFQUZhO0FBR3ZCakIsRUFBQUEsTUFBTSxFQUFFO0FBSGUsQ0FBekI7QUFNQXNCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQm5DLFNBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3J1bm5lci93b3JrL2JmYy9iZmMvd2Vic2l0ZS9ub2RlX21vZHVsZXMvZG9jdXNhdXJ1cy9saWIvY29yZS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IGNsYXNzTmFtZXMgPSByZXF1aXJlKCdjbGFzc25hbWVzJyk7XG5cbmNvbnN0IE1hcmtkb3duQmxvY2sgPSByZXF1aXJlKCcuL01hcmtkb3duQmxvY2suanMnKTtcblxuY2xhc3MgR3JpZEJsb2NrIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyQmxvY2sob3JpZ0Jsb2NrKSB7XG4gICAgY29uc3QgYmxvY2tEZWZhdWx0cyA9IHtcbiAgICAgIGltYWdlQWxpZ246ICdsZWZ0JyxcbiAgICB9O1xuXG4gICAgY29uc3QgYmxvY2sgPSB7XG4gICAgICAuLi5ibG9ja0RlZmF1bHRzLFxuICAgICAgLi4ub3JpZ0Jsb2NrLFxuICAgIH07XG5cbiAgICBjb25zdCBibG9ja0NsYXNzZXMgPSBjbGFzc05hbWVzKCdibG9ja0VsZW1lbnQnLCB0aGlzLnByb3BzLmNsYXNzTmFtZSwge1xuICAgICAgYWxpZ25DZW50ZXI6IHRoaXMucHJvcHMuYWxpZ24gPT09ICdjZW50ZXInLFxuICAgICAgYWxpZ25SaWdodDogdGhpcy5wcm9wcy5hbGlnbiA9PT0gJ3JpZ2h0JyxcbiAgICAgIGZvdXJCeUdyaWRCbG9jazogdGhpcy5wcm9wcy5sYXlvdXQgPT09ICdmb3VyQ29sdW1uJyxcbiAgICAgIGltYWdlQWxpZ25TaWRlOlxuICAgICAgICBibG9jay5pbWFnZSAmJlxuICAgICAgICAoYmxvY2suaW1hZ2VBbGlnbiA9PT0gJ2xlZnQnIHx8IGJsb2NrLmltYWdlQWxpZ24gPT09ICdyaWdodCcpLFxuICAgICAgaW1hZ2VBbGlnblRvcDogYmxvY2suaW1hZ2UgJiYgYmxvY2suaW1hZ2VBbGlnbiA9PT0gJ3RvcCcsXG4gICAgICBpbWFnZUFsaWduUmlnaHQ6IGJsb2NrLmltYWdlICYmIGJsb2NrLmltYWdlQWxpZ24gPT09ICdyaWdodCcsXG4gICAgICBpbWFnZUFsaWduQm90dG9tOiBibG9jay5pbWFnZSAmJiBibG9jay5pbWFnZUFsaWduID09PSAnYm90dG9tJyxcbiAgICAgIGltYWdlQWxpZ25MZWZ0OiBibG9jay5pbWFnZSAmJiBibG9jay5pbWFnZUFsaWduID09PSAnbGVmdCcsXG4gICAgICB0aHJlZUJ5R3JpZEJsb2NrOiB0aGlzLnByb3BzLmxheW91dCA9PT0gJ3RocmVlQ29sdW1uJyxcbiAgICAgIHR3b0J5R3JpZEJsb2NrOiB0aGlzLnByb3BzLmxheW91dCA9PT0gJ3R3b0NvbHVtbicsXG4gICAgfSk7XG5cbiAgICBjb25zdCB0b3BMZWZ0SW1hZ2UgPVxuICAgICAgKGJsb2NrLmltYWdlQWxpZ24gPT09ICd0b3AnIHx8IGJsb2NrLmltYWdlQWxpZ24gPT09ICdsZWZ0JykgJiZcbiAgICAgIHRoaXMucmVuZGVyQmxvY2tJbWFnZShibG9jay5pbWFnZSwgYmxvY2suaW1hZ2VMaW5rLCBibG9jay5pbWFnZUFsdCk7XG5cbiAgICBjb25zdCBib3R0b21SaWdodEltYWdlID1cbiAgICAgIChibG9jay5pbWFnZUFsaWduID09PSAnYm90dG9tJyB8fCBibG9jay5pbWFnZUFsaWduID09PSAncmlnaHQnKSAmJlxuICAgICAgdGhpcy5yZW5kZXJCbG9ja0ltYWdlKGJsb2NrLmltYWdlLCBibG9jay5pbWFnZUxpbmssIGJsb2NrLmltYWdlQWx0KTtcblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17YmxvY2tDbGFzc2VzfSBrZXk9e2Jsb2NrLnRpdGxlfT5cbiAgICAgICAge3RvcExlZnRJbWFnZX1cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJibG9ja0NvbnRlbnRcIj5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJCbG9ja1RpdGxlKGJsb2NrLnRpdGxlKX1cbiAgICAgICAgICA8TWFya2Rvd25CbG9jaz57YmxvY2suY29udGVudH08L01hcmtkb3duQmxvY2s+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7Ym90dG9tUmlnaHRJbWFnZX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICByZW5kZXJCbG9ja0ltYWdlKGltYWdlLCBpbWFnZUxpbmssIGltYWdlQWx0KSB7XG4gICAgaWYgKCFpbWFnZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmxvY2tJbWFnZVwiPlxuICAgICAgICB7aW1hZ2VMaW5rID8gKFxuICAgICAgICAgIDxhIGhyZWY9e2ltYWdlTGlua30+XG4gICAgICAgICAgICA8aW1nIHNyYz17aW1hZ2V9IGFsdD17aW1hZ2VBbHR9IC8+XG4gICAgICAgICAgPC9hPlxuICAgICAgICApIDogKFxuICAgICAgICAgIDxpbWcgc3JjPXtpbWFnZX0gYWx0PXtpbWFnZUFsdH0gLz5cbiAgICAgICAgKX1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cblxuICByZW5kZXJCbG9ja1RpdGxlKHRpdGxlKSB7XG4gICAgaWYgKCF0aXRsZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxoMj5cbiAgICAgICAgPE1hcmtkb3duQmxvY2s+e3RpdGxlfTwvTWFya2Rvd25CbG9jaz5cbiAgICAgIDwvaDI+XG4gICAgKTtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkQmxvY2tcIj5cbiAgICAgICAge3RoaXMucHJvcHMuY29udGVudHMubWFwKHRoaXMucmVuZGVyQmxvY2ssIHRoaXMpfVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5HcmlkQmxvY2suZGVmYXVsdFByb3BzID0ge1xuICBhbGlnbjogJ2xlZnQnLFxuICBjb250ZW50czogW10sXG4gIGxheW91dDogJ3R3b0NvbHVtbicsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEdyaWRCbG9jaztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "GridBlock.js"
      ],
      "names": [
        "React",
        "require",
        "classNames",
        "MarkdownBlock",
        "GridBlock",
        "origBlock",
        "blockDefaults",
        "imageAlign",
        "block",
        "blockClasses",
        "props",
        "className",
        "alignCenter",
        "align",
        "alignRight",
        "fourByGridBlock",
        "layout",
        "imageAlignSide",
        "image",
        "imageAlignTop",
        "imageAlignRight",
        "imageAlignBottom",
        "imageAlignLeft",
        "threeByGridBlock",
        "twoByGridBlock",
        "topLeftImage",
        "renderBlockImage",
        "imageLink",
        "imageAlt",
        "bottomRightImage",
        "title",
        "renderBlockTitle",
        "content",
        "contents",
        "map",
        "renderBlock",
        "Component",
        "defaultProps",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;AAEA,IAAME,aAAa,GAAGF,OAAO,CAAC,oBAAD,CAA7B;;IAEMG,S;;;;;;;;;;;;;gCACQC,S,EAAW;AACrB,UAAMC,aAAa,GAAG;AACpBC,QAAAA,UAAU,EAAE;AADQ,OAAtB;;AAIA,UAAMC,KAAK,mCACNF,aADM,GAEND,SAFM,CAAX;;AAKA,UAAMI,YAAY,GAAGP,UAAU,CAAC,cAAD,EAAiB,KAAKQ,KAAL,CAAWC,SAA5B,EAAuC;AACpEC,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,KAAX,KAAqB,QADkC;AAEpEC,QAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWG,KAAX,KAAqB,OAFmC;AAGpEE,QAAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,MAAX,KAAsB,YAH6B;AAIpEC,QAAAA,cAAc,EACZT,KAAK,CAACU,KAAN,KACCV,KAAK,CAACD,UAAN,KAAqB,MAArB,IAA+BC,KAAK,CAACD,UAAN,KAAqB,OADrD,CALkE;AAOpEY,QAAAA,aAAa,EAAEX,KAAK,CAACU,KAAN,IAAeV,KAAK,CAACD,UAAN,KAAqB,KAPiB;AAQpEa,QAAAA,eAAe,EAAEZ,KAAK,CAACU,KAAN,IAAeV,KAAK,CAACD,UAAN,KAAqB,OARe;AASpEc,QAAAA,gBAAgB,EAAEb,KAAK,CAACU,KAAN,IAAeV,KAAK,CAACD,UAAN,KAAqB,QATc;AAUpEe,QAAAA,cAAc,EAAEd,KAAK,CAACU,KAAN,IAAeV,KAAK,CAACD,UAAN,KAAqB,MAVgB;AAWpEgB,QAAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWM,MAAX,KAAsB,aAX4B;AAYpEQ,QAAAA,cAAc,EAAE,KAAKd,KAAL,CAAWM,MAAX,KAAsB;AAZ8B,OAAvC,CAA/B;AAeA,UAAMS,YAAY,GAChB,CAACjB,KAAK,CAACD,UAAN,KAAqB,KAArB,IAA8BC,KAAK,CAACD,UAAN,KAAqB,MAApD,KACA,KAAKmB,gBAAL,CAAsBlB,KAAK,CAACU,KAA5B,EAAmCV,KAAK,CAACmB,SAAzC,EAAoDnB,KAAK,CAACoB,QAA1D,CAFF;AAIA,UAAMC,gBAAgB,GACpB,CAACrB,KAAK,CAACD,UAAN,KAAqB,QAArB,IAAiCC,KAAK,CAACD,UAAN,KAAqB,OAAvD,KACA,KAAKmB,gBAAL,CAAsBlB,KAAK,CAACU,KAA5B,EAAmCV,KAAK,CAACmB,SAAzC,EAAoDnB,KAAK,CAACoB,QAA1D,CAFF;AAIA,0BACE;AAAK,QAAA,SAAS,EAAEnB,YAAhB;AAA8B,QAAA,GAAG,EAAED,KAAK,CAACsB;AAAzC,SACGL,YADH,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKM,gBAAL,CAAsBvB,KAAK,CAACsB,KAA5B,CADH,eAEE,oBAAC,aAAD,QAAgBtB,KAAK,CAACwB,OAAtB,CAFF,CAFF,EAMGH,gBANH,CADF;AAUD;;;qCAEgBX,K,EAAOS,S,EAAWC,Q,EAAU;AAC3C,UAAI,CAACV,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AAED,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGS,SAAS,gBACR;AAAG,QAAA,IAAI,EAAEA;AAAT,sBACE;AAAK,QAAA,GAAG,EAAET,KAAV;AAAiB,QAAA,GAAG,EAAEU;AAAtB,QADF,CADQ,gBAKR;AAAK,QAAA,GAAG,EAAEV,KAAV;AAAiB,QAAA,GAAG,EAAEU;AAAtB,QANJ,CADF;AAWD;;;qCAEgBE,K,EAAO;AACtB,UAAI,CAACA,KAAL,EAAY;AACV,eAAO,IAAP;AACD;;AAED,0BACE,6CACE,oBAAC,aAAD,QAAgBA,KAAhB,CADF,CADF;AAKD;;;6BAEQ;AACP,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACG,KAAKpB,KAAL,CAAWuB,QAAX,CAAoBC,GAApB,CAAwB,KAAKC,WAA7B,EAA0C,IAA1C,CADH,CADF;AAKD;;;;EAlFqBnC,KAAK,CAACoC,S;;AAqF9BhC,SAAS,CAACiC,YAAV,GAAyB;AACvBxB,EAAAA,KAAK,EAAE,MADgB;AAEvBoB,EAAAA,QAAQ,EAAE,EAFa;AAGvBjB,EAAAA,MAAM,EAAE;AAHe,CAAzB;AAMAsB,MAAM,CAACC,OAAP,GAAiBnC,SAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/core/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\nconst classNames = require('classnames');\n\nconst MarkdownBlock = require('./MarkdownBlock.js');\n\nclass GridBlock extends React.Component {\n  renderBlock(origBlock) {\n    const blockDefaults = {\n      imageAlign: 'left',\n    };\n\n    const block = {\n      ...blockDefaults,\n      ...origBlock,\n    };\n\n    const blockClasses = classNames('blockElement', this.props.className, {\n      alignCenter: this.props.align === 'center',\n      alignRight: this.props.align === 'right',\n      fourByGridBlock: this.props.layout === 'fourColumn',\n      imageAlignSide:\n        block.image &&\n        (block.imageAlign === 'left' || block.imageAlign === 'right'),\n      imageAlignTop: block.image && block.imageAlign === 'top',\n      imageAlignRight: block.image && block.imageAlign === 'right',\n      imageAlignBottom: block.image && block.imageAlign === 'bottom',\n      imageAlignLeft: block.image && block.imageAlign === 'left',\n      threeByGridBlock: this.props.layout === 'threeColumn',\n      twoByGridBlock: this.props.layout === 'twoColumn',\n    });\n\n    const topLeftImage =\n      (block.imageAlign === 'top' || block.imageAlign === 'left') &&\n      this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n\n    const bottomRightImage =\n      (block.imageAlign === 'bottom' || block.imageAlign === 'right') &&\n      this.renderBlockImage(block.image, block.imageLink, block.imageAlt);\n\n    return (\n      <div className={blockClasses} key={block.title}>\n        {topLeftImage}\n        <div className=\"blockContent\">\n          {this.renderBlockTitle(block.title)}\n          <MarkdownBlock>{block.content}</MarkdownBlock>\n        </div>\n        {bottomRightImage}\n      </div>\n    );\n  }\n\n  renderBlockImage(image, imageLink, imageAlt) {\n    if (!image) {\n      return null;\n    }\n\n    return (\n      <div className=\"blockImage\">\n        {imageLink ? (\n          <a href={imageLink}>\n            <img src={image} alt={imageAlt} />\n          </a>\n        ) : (\n          <img src={image} alt={imageAlt} />\n        )}\n      </div>\n    );\n  }\n\n  renderBlockTitle(title) {\n    if (!title) {\n      return null;\n    }\n\n    return (\n      <h2>\n        <MarkdownBlock>{title}</MarkdownBlock>\n      </h2>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"gridBlock\">\n        {this.props.contents.map(this.renderBlock, this)}\n      </div>\n    );\n  }\n}\n\nGridBlock.defaultProps = {\n  align: 'left',\n  contents: [],\n  layout: 'twoColumn',\n};\n\nmodule.exports = GridBlock;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592477352000
  },
  "{\"sourceRoot\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/runner/work/bfc/bfc/website\",\"filename\":\"/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempusers.js\",\"cloneInputAst\":true,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/runner/work/bfc/bfc/website\",\"plugins\":[{\"key\":\"base$0\",\"visitor\":{\"JSXElement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/runner/work/bfc/bfc/website",
      "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempusers.js",
      "cloneInputAst": true,
      "configFile": false,
      "envName": "development",
      "root": "/home/runner/work/bfc/bfc/website",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "base$0",
          "visitor": {
            "JSXElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempusers.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "objectRestSpread",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport",
          "jsx"
        ]
      },
      "generatorOpts": {
        "filename": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/tempusers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/",
        "sourceFileName": "tempusers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar React = require('react');\n\nvar CompLibrary = require('../../core/CompLibrary.js');\n\nvar Container = CompLibrary.Container;\n\nvar Users = /*#__PURE__*/function (_React$Component) {\n  _inherits(Users, _React$Component);\n\n  var _super = _createSuper(Users);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Users, [{\n    key: \"render\",\n    value: function render() {\n      var siteConfig = this.props.config;\n\n      if ((siteConfig.users || []).length === 0) {\n        return null;\n      }\n\n      var showcase = siteConfig.users.map(function (user) {\n        return /*#__PURE__*/React.createElement(\"a\", {\n          href: user.infoLink,\n          key: user.infoLink\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: user.image,\n          alt: user.caption,\n          title: user.caption\n        }));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mainContainer\"\n      }, /*#__PURE__*/React.createElement(Container, {\n        padding: ['bottom', 'top']\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"showcaseSection\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"prose\"\n      }, /*#__PURE__*/React.createElement(\"h1\", null, \"Who is Using This?\"), /*#__PURE__*/React.createElement(\"p\", null, \"This project is used by many folks\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logos\"\n      }, showcase), siteConfig.repoUrl && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"Are you using this project?\"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"\".concat(siteConfig.repoUrl, \"/edit/master/website/siteConfig.js\"),\n        className: \"button\"\n      }, \"Add your company\")))));\n    }\n  }]);\n\n  return Users;\n}(React.Component);\n\nmodule.exports = Users;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXB1c2Vycy5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJDb21wTGlicmFyeSIsIkNvbnRhaW5lciIsIlVzZXJzIiwic2l0ZUNvbmZpZyIsInByb3BzIiwiY29uZmlnIiwidXNlcnMiLCJsZW5ndGgiLCJzaG93Y2FzZSIsIm1hcCIsInVzZXIiLCJpbmZvTGluayIsImltYWdlIiwiY2FwdGlvbiIsInJlcG9VcmwiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLElBQU1DLFdBQVcsR0FBR0QsT0FBTyxDQUFDLDJCQUFELENBQTNCOztBQUVBLElBQU1FLFNBQVMsR0FBR0QsV0FBVyxDQUFDQyxTQUE5Qjs7SUFFTUMsSzs7Ozs7Ozs7Ozs7Ozs2QkFDSztBQUFBLFVBQ1FDLFVBRFIsR0FDc0IsS0FBS0MsS0FEM0IsQ0FDQUMsTUFEQTs7QUFFUCxVQUFJLENBQUNGLFVBQVUsQ0FBQ0csS0FBWCxJQUFvQixFQUFyQixFQUF5QkMsTUFBekIsS0FBb0MsQ0FBeEMsRUFBMkM7QUFDekMsZUFBTyxJQUFQO0FBQ0Q7O0FBRUQsVUFBTUMsUUFBUSxHQUFHTCxVQUFVLENBQUNHLEtBQVgsQ0FBaUJHLEdBQWpCLENBQXFCLFVBQUNDLElBQUQ7QUFBQSw0QkFDcEM7QUFBRyxVQUFBLElBQUksRUFBRUEsSUFBSSxDQUFDQyxRQUFkO0FBQXdCLFVBQUEsR0FBRyxFQUFFRCxJQUFJLENBQUNDO0FBQWxDLHdCQUNFO0FBQUssVUFBQSxHQUFHLEVBQUVELElBQUksQ0FBQ0UsS0FBZjtBQUFzQixVQUFBLEdBQUcsRUFBRUYsSUFBSSxDQUFDRyxPQUFoQztBQUF5QyxVQUFBLEtBQUssRUFBRUgsSUFBSSxDQUFDRztBQUFyRCxVQURGLENBRG9DO0FBQUEsT0FBckIsQ0FBakI7QUFNQSwwQkFDRTtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsc0JBQ0Usb0JBQUMsU0FBRDtBQUFXLFFBQUEsT0FBTyxFQUFFLENBQUMsUUFBRCxFQUFXLEtBQVg7QUFBcEIsc0JBQ0U7QUFBSyxRQUFBLFNBQVMsRUFBQztBQUFmLHNCQUNFO0FBQUssUUFBQSxTQUFTLEVBQUM7QUFBZixzQkFDRSxxREFERixlQUVFLG9FQUZGLENBREYsZUFLRTtBQUFLLFFBQUEsU0FBUyxFQUFDO0FBQWYsU0FBd0JMLFFBQXhCLENBTEYsRUFNR0wsVUFBVSxDQUFDVyxPQUFYLGlCQUNDLG9CQUFDLEtBQUQsQ0FBTyxRQUFQLHFCQUNFLDZEQURGLGVBRUU7QUFDRSxRQUFBLElBQUksWUFBS1gsVUFBVSxDQUFDVyxPQUFoQix1Q0FETjtBQUVFLFFBQUEsU0FBUyxFQUFDO0FBRlosNEJBRkYsQ0FQSixDQURGLENBREYsQ0FERjtBQXVCRDs7OztFQXBDaUJoQixLQUFLLENBQUNpQixTOztBQXVDMUJDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmYsS0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcnVubmVyL3dvcmsvYmZjL2JmYy93ZWJzaXRlL25vZGVfbW9kdWxlcy9kb2N1c2F1cnVzL2xpYi9wYWdlcy9lbi8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxuY29uc3QgQ29tcExpYnJhcnkgPSByZXF1aXJlKCcuLi8uLi9jb3JlL0NvbXBMaWJyYXJ5LmpzJyk7XG5cbmNvbnN0IENvbnRhaW5lciA9IENvbXBMaWJyYXJ5LkNvbnRhaW5lcjtcblxuY2xhc3MgVXNlcnMgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge2NvbmZpZzogc2l0ZUNvbmZpZ30gPSB0aGlzLnByb3BzO1xuICAgIGlmICgoc2l0ZUNvbmZpZy51c2VycyB8fCBbXSkubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCBzaG93Y2FzZSA9IHNpdGVDb25maWcudXNlcnMubWFwKCh1c2VyKSA9PiAoXG4gICAgICA8YSBocmVmPXt1c2VyLmluZm9MaW5rfSBrZXk9e3VzZXIuaW5mb0xpbmt9PlxuICAgICAgICA8aW1nIHNyYz17dXNlci5pbWFnZX0gYWx0PXt1c2VyLmNhcHRpb259IHRpdGxlPXt1c2VyLmNhcHRpb259IC8+XG4gICAgICA8L2E+XG4gICAgKSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYWluQ29udGFpbmVyXCI+XG4gICAgICAgIDxDb250YWluZXIgcGFkZGluZz17Wydib3R0b20nLCAndG9wJ119PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic2hvd2Nhc2VTZWN0aW9uXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInByb3NlXCI+XG4gICAgICAgICAgICAgIDxoMT5XaG8gaXMgVXNpbmcgVGhpcz88L2gxPlxuICAgICAgICAgICAgICA8cD5UaGlzIHByb2plY3QgaXMgdXNlZCBieSBtYW55IGZvbGtzPC9wPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImxvZ29zXCI+e3Nob3djYXNlfTwvZGl2PlxuICAgICAgICAgICAge3NpdGVDb25maWcucmVwb1VybCAmJiAoXG4gICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICA8cD5BcmUgeW91IHVzaW5nIHRoaXMgcHJvamVjdD88L3A+XG4gICAgICAgICAgICAgICAgPGFcbiAgICAgICAgICAgICAgICAgIGhyZWY9e2Ake3NpdGVDb25maWcucmVwb1VybH0vZWRpdC9tYXN0ZXIvd2Vic2l0ZS9zaXRlQ29uZmlnLmpzYH1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImJ1dHRvblwiPlxuICAgICAgICAgICAgICAgICAgQWRkIHlvdXIgY29tcGFueVxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFVzZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "tempusers.js"
      ],
      "names": [
        "React",
        "require",
        "CompLibrary",
        "Container",
        "Users",
        "siteConfig",
        "props",
        "config",
        "users",
        "length",
        "showcase",
        "map",
        "user",
        "infoLink",
        "image",
        "caption",
        "repoUrl",
        "Component",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,IAAMC,WAAW,GAAGD,OAAO,CAAC,2BAAD,CAA3B;;AAEA,IAAME,SAAS,GAAGD,WAAW,CAACC,SAA9B;;IAEMC,K;;;;;;;;;;;;;6BACK;AAAA,UACQC,UADR,GACsB,KAAKC,KAD3B,CACAC,MADA;;AAEP,UAAI,CAACF,UAAU,CAACG,KAAX,IAAoB,EAArB,EAAyBC,MAAzB,KAAoC,CAAxC,EAA2C;AACzC,eAAO,IAAP;AACD;;AAED,UAAMC,QAAQ,GAAGL,UAAU,CAACG,KAAX,CAAiBG,GAAjB,CAAqB,UAACC,IAAD;AAAA,4BACpC;AAAG,UAAA,IAAI,EAAEA,IAAI,CAACC,QAAd;AAAwB,UAAA,GAAG,EAAED,IAAI,CAACC;AAAlC,wBACE;AAAK,UAAA,GAAG,EAAED,IAAI,CAACE,KAAf;AAAsB,UAAA,GAAG,EAAEF,IAAI,CAACG,OAAhC;AAAyC,UAAA,KAAK,EAAEH,IAAI,CAACG;AAArD,UADF,CADoC;AAAA,OAArB,CAAjB;AAMA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,CAAC,QAAD,EAAW,KAAX;AAApB,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,qDADF,eAEE,oEAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf,SAAwBL,QAAxB,CALF,EAMGL,UAAU,CAACW,OAAX,iBACC,oBAAC,KAAD,CAAO,QAAP,qBACE,6DADF,eAEE;AACE,QAAA,IAAI,YAAKX,UAAU,CAACW,OAAhB,uCADN;AAEE,QAAA,SAAS,EAAC;AAFZ,4BAFF,CAPJ,CADF,CADF,CADF;AAuBD;;;;EApCiBhB,KAAK,CAACiB,S;;AAuC1BC,MAAM,CAACC,OAAP,GAAiBf,KAAjB",
      "sourceRoot": "/home/runner/work/bfc/bfc/website/node_modules/docusaurus/lib/pages/en/",
      "sourcesContent": [
        "/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst React = require('react');\n\nconst CompLibrary = require('../../core/CompLibrary.js');\n\nconst Container = CompLibrary.Container;\n\nclass Users extends React.Component {\n  render() {\n    const {config: siteConfig} = this.props;\n    if ((siteConfig.users || []).length === 0) {\n      return null;\n    }\n\n    const showcase = siteConfig.users.map((user) => (\n      <a href={user.infoLink} key={user.infoLink}>\n        <img src={user.image} alt={user.caption} title={user.caption} />\n      </a>\n    ));\n\n    return (\n      <div className=\"mainContainer\">\n        <Container padding={['bottom', 'top']}>\n          <div className=\"showcaseSection\">\n            <div className=\"prose\">\n              <h1>Who is Using This?</h1>\n              <p>This project is used by many folks</p>\n            </div>\n            <div className=\"logos\">{showcase}</div>\n            {siteConfig.repoUrl && (\n              <React.Fragment>\n                <p>Are you using this project?</p>\n                <a\n                  href={`${siteConfig.repoUrl}/edit/master/website/siteConfig.js`}\n                  className=\"button\">\n                  Add your company\n                </a>\n              </React.Fragment>\n            )}\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nmodule.exports = Users;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637396899574
  }
}